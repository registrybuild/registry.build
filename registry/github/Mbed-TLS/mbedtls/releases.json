[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/254412634","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/254412634/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/254412634/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-4.0.0","id":254412634,"author":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4PKgda","tag_name":"mbedtls-4.0.0","target_commitish":"development","name":"Mbed TLS 4.0.0","draft":false,"immutable":false,"prerelease":false,"created_at":"2025-10-14T12:57:42Z","updated_at":"2025-10-15T16:50:37Z","published_at":"2025-10-15T16:41:16Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/304627345","id":304627345,"node_id":"RA_kwDOAGYMwM4SKD6R","name":"mbedtls-4.0.0-sha256sum.txt","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"text/plain","state":"uploaded","size":88,"digest":"sha256:82155ae517ea194b9aa93382eb4f3803f91d99566b32a357f5cfb1a898611a02","download_count":18,"created_at":"2025-10-15T15:17:06Z","updated_at":"2025-10-15T15:17:07Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-4.0.0/mbedtls-4.0.0-sha256sum.txt"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/304514379","id":304514379,"node_id":"RA_kwDOAGYMwM4SJoVL","name":"mbedtls-4.0.0.tar.bz2","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-bzip2","state":"uploaded","size":6342607,"digest":"sha256:2f3a47f7b3a541ddef450e4867eeecb7ce2ef7776093f3a11d6d43ead6bf2827","download_count":355,"created_at":"2025-10-15T09:32:13Z","updated_at":"2025-10-15T09:32:22Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-4.0.0/mbedtls-4.0.0.tar.bz2"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/mbedtls-4.0.0","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/mbedtls-4.0.0","body":"## Description\r\n\r\nThe Mbed TLS 4.0.0 and TF-PSA-Crypto 1.0.0 releases introduce a major codebase restructuring:\r\n- PSA Crypto functionality now resides in its own repository Mbed-TLS/TF-PSA-Crypto.\r\n- TLS and X.509 components remain in Mbed TLS.\r\n\r\n### API Changes & Migration\r\n\r\nThe Mbed TLS 4.0.0 and TF-PSA-Crypto 1.0.0 releases include significant API changes that break backward compatibility with previous releases. Please test your integration thoroughly and follow the [4.0 migration guide](https://github.com/Mbed-TLS/mbedtls/blob/mbedtls-4.0.0/docs/4.0-migration-guide.md) and TF-PSA-Crypto's [1.0 migration guide](https://github.com/Mbed-TLS/TF-PSA-Crypto/blob/v1.0.0/docs/1.0-migration-guide.md) to update your codebase to the new interfaces.\r\n\r\n### Please note\r\n\r\n- Mbed TLS 4.0.0 includes TF-PSA-Crypto 1.0.0 (as a subtree in the tarball, and as a submodule in git) and can only be built with this included version TF-PSA-Crypto.\r\n\r\n## Security Advisories\r\n\r\nCompared to Mbed TLS 3.6.4 (the latest LTS release that pre-dates it), Mbed TLS 4.0.0 does not directly fix any new vulnerability. However two vulnerabilities are fixed in TF-PSA-Crypto 1.0.0, which is included in Mbed TLS 4.0.0. See the release notes of TF-PSA-Crypto 1.0.0 for details about those two fixes.\r\n\r\nCompared to Mbed TLS 3.6.0 (the latest feature release that pre-dates it), Mbed TLS 4.0.0 also fixes the following vulnerabilities, that had been fixed in Mbed TLS 3.6.4 already:\r\n\r\n- [`CTR_DRBG` prioritized over `HMAC_DRBG` as the PSA DRBG](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-08-1/)\r\n- [Stack buffer overflow in ECDSA signature conversion functions](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-08-2/)\r\n- [Limited authentication bypass in TLS 1.3 optional client authentication](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-08-3/)\r\n- [Buffer underrun in pkwrite when writing an opaque key pair](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-10-1/)\r\n- [TLS clients should generally call mbedtls_ssl_set_hostname](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-03-1/)\r\n- [Potential authentication bypass in TLS handshake](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-03-2/)\r\n- [Misleading memory management in `mbedtls_x509_string_to_names()`](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-06-7/)\r\n- [NULL pointer dereference after using `mbedtls_asn1_store_named_data()`](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-06-6/)\r\n\r\n## Release Notes\r\nAPI changes\r\n   * Align the mbedtls_ssl_ticket_setup() function with the PSA Crypto API.\r\n     Instead of taking a mbedtls_cipher_type_t as an argument, this function\r\n     now takes 3 new arguments: a PSA algorithm, key type and key size, to\r\n     specify the AEAD for ticket protection.\r\n   * The PSA and Mbed TLS error spaces are now unified. mbedtls_xxx()\r\n     functions can now return PSA_ERROR_xxx values.\r\n     There is no longer a distinction between \"low-level\" and \"high-level\"\r\n     Mbed TLS error codes.\r\n     This will not affect most applications since the error values are\r\n     between -32767 and -1 as before.\r\n   * All API functions now use the PSA random generator psa_generate_random()\r\n     internally. As a consequence, functions no longer take RNG parameters.\r\n     Please refer to the migration guide at :\r\n     docs/4.0-migration-guide.md.\r\n   * The list passed to mbedtls_ssl_conf_alpn_protocols() is now declared\r\n     as having const elements, reflecting the fact that the library will\r\n     not modify it\r\n   * Change the serial argument of the mbedtls_x509write_crt_set_serial_raw\r\n     function to a const to align with the rest of the API.\r\n   * Change the signature of the runtime version information methods that took\r\n     a char* as an argument to take zero arguments and return a const char*\r\n     instead. This aligns us with the interface used in TF PSA Crypto 1.0.\r\n     If you need to support linking against both Mbed TLS 3.x and 4.x, please\r\n     use the build-time version macros or mbedtls_version_get_number() to\r\n     determine the correct signature for mbedtls_version_get_string() and\r\n     mbedtls_version_get_string_full() before calling them.\r\n     Fixes issue #10308.\r\n   * Make the following error codes aliases of their PSA equivalents, where\r\n     xxx is a module, e.g. X509 or SSL.\r\n     MBEDTLS_ERR_xxx_BAD_INPUT_DATA    -> PSA_ERROR_INVALID_ARGUMENT\r\n     MBEDTLS_ERR_xxx_ALLOC_FAILED      -> PSA_ERROR_INSUFFICIENT_MEMORY\r\n     MBEDTLS_ERR_xxx_BUFFER_TOO_SMALL  -> PSA_ERROR_BUFFER_TOO_SMALL\r\n     MBEDTLS_ERR_PKCS7_VERIFY_FAIL     -> PSA_ERROR_INVALID_SIGNATURE\r\n   * Add MBEDTLS_SSL_NULL_CIPHERSUITES configuration option. It enables\r\n     TLS 1.2 ciphersuites without encryption and is disabled by default.\r\n     This new option replaces MBEDTLS_CIPHER_NULL_CIPHER.\r\n\r\nDefault behavior changes\r\n   * The X.509 and TLS modules now always use the PSA subsystem\r\n     to perform cryptographic operations, with a few exceptions documented\r\n     in docs/architecture/psa-migration/psa-limitations.md. This\r\n     corresponds to the behavior of Mbed TLS 3.x when\r\n     MBEDTLS_USE_PSA_CRYPTO is enabled. In effect, MBEDTLS_USE_PSA_CRYPTO\r\n     is now always enabled.\r\n   * psa_crypto_init() must be called before performing any cryptographic\r\n     operation, including indirect requests such as parsing a key or\r\n     certificate or starting a TLS handshake.\r\n   * In TLS clients, if mbedtls_ssl_set_hostname() has not been called,\r\n     mbedtls_ssl_handshake() now fails with\r\n     MBEDTLS_ERR_SSL_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME\r\n     if certificate-based authentication of the server is attempted.\r\n     This is because authenticating a server without knowing what name\r\n     to expect is usually insecure.\r\n\r\nRemovals\r\n   * Remove support for the RSA-PSK key exchange in TLS 1.2.\r\n   * Remove deprecated mbedtls_x509write_crt_set_serial(). The function was\r\n     already deprecated and superseded by\r\n     mbedtls_x509write_crt_set_serial_raw().\r\n   * Remove the function mbedtls_ssl_conf_curves() which had been deprecated\r\n     in favour of mbedtls_ssl_conf_groups() since Mbed TLS 3.1.\r\n   * Remove support for the DHE-PSK key exchange in TLS 1.2.\r\n   * Remove support for the DHE-RSA key exchange in TLS 1.2.\r\n   * Following the removal of DHM module (#9972 and TF-PSA-Crypto#175) the\r\n     following SSL functions are removed:\r\n     - mbedtls_ssl_conf_dh_param_bin\r\n     - mbedtls_ssl_conf_dh_param_ctx\r\n     - mbedtls_ssl_conf_dhm_min_bitlen\r\n   * Remove support for the RSA key exchange in TLS 1.2.\r\n   * Remove mbedtls_low_level_strerr() and mbedtls_high_level_strerr(),\r\n     since these concepts no longer exists. There is just mbedtls_strerror().\r\n   * Sample programs for the legacy crypto API have been removed.\r\n          pkey/rsa_genkey.c\r\n          pkey/pk_decrypt.c\r\n          pkey/dh_genprime.c\r\n          pkey/rsa_verify.c\r\n          pkey/mpi_demo.c\r\n          pkey/rsa_decrypt.c\r\n          pkey/key_app.c\r\n          pkey/dh_server.c\r\n          pkey/ecdh_curve25519.c\r\n          pkey/pk_encrypt.c\r\n          pkey/rsa_sign.c\r\n          pkey/key_app_writer.c\r\n          pkey/dh_client.c\r\n          pkey/ecdsa.c\r\n          pkey/rsa_encrypt.c\r\n          wince_main.c\r\n          aes/crypt_and_hash.c\r\n          random/gen_random_ctr_drbg.c\r\n          random/gen_entropy.c\r\n          hash/md_hmac_demo.c\r\n          hash/hello.c\r\n          hash/generic_sum.c\r\n          cipher/cipher_aead_demo.c\r\n   * Remove compat-2-x.h header from mbedtls.\r\n   * The library no longer offers interfaces to look up values by OID\r\n     or OID by enum values.\r\n     The header <mbedtls/oid.h> now only defines functions to convert\r\n     between binary and dotted string OID representations, and macros\r\n     for OID strings that are relevant to X.509.\r\n     The compilation option MBEDTLS_OID_C no longer\r\n     exists. OID tables are included in the build automatically as needed.\r\n   * The header <mbedtls/check_config.h> no longer exists. Including it\r\n     from a custom config file was no longer needed since Mbed TLS 3.0,\r\n     and could lead to spurious errors. The checks that it performed are\r\n     now done automatically when building the library.\r\n   * Support for secp192k1, secp192r1, secp224k1 and secp224r1 EC curves is\r\n     removed from TLS.\r\n   * Remove mbedtls_pk_type_t from the public interface and replace it with\r\n     mbedtls_pk_sigalg_t.\r\n   * Remove MBEDTLS_SSL_DTLS_CONNECTION_ID_COMPAT. Now only the\r\n     standard version (defined in RFC 9146) of DTLS connection ID is supported.\r\n   * Remove mbedtls_ssl_conf_min_version(), mbedtls_ssl_conf_max_version(), and\r\n     the associated constants MBEDTLS_SSL_MAJOR_VERSION_x and\r\n     MBEDTLS_SSL_MINOR_VERSION_y. Use mbedtls_ssl_conf_min_tls_version() and\r\n     mbedtls_ssl_conf_max_tls_version() with MBEDTLS_SSL_VERSION_TLS1_y instead.\r\n     Note that the new names of the new constants use the TLS protocol versions,\r\n     unlike the old constants whose names are based on internal encodings.\r\n   * Remove mbedtls_ssl_conf_sig_hashes(). Use mbedtls_ssl_conf_sig_algs()\r\n     instead.\r\n   * Removed all public key sample programs from the programs/pkey\r\n     directory.\r\n   * Removed support for TLS 1.2 static ECDH key\r\n     exchanges (ECDH-ECDSA and ECDH-RSA).\r\n   * Drop support for the GNU Make and Microsoft Visual Studio build systems.\r\n\r\nFeatures\r\n   * Add the function mbedtls_ssl_export_keying_material() which allows the\r\n     client and server to extract additional shared symmetric keys from an SSL\r\n     session, according to the TLS-Exporter specification in RFC 8446 and 5705.\r\n     This requires MBEDTLS_SSL_KEYING_MATERIAL_EXPORT to be defined in\r\n     mbedtls_config.h.\r\n\r\nSecurity\r\n   * With TLS 1.3, when a server enables optional authentication of the\r\n     client, if the client-provided certificate does not have appropriate values\r\n     in keyUsage or extKeyUsage extensions, then the return value of\r\n     mbedtls_ssl_get_verify_result() would incorrectly have the\r\n     MBEDTLS_X509_BADCERT_KEY_USAGE and MBEDTLS_X509_BADCERT_EXT_KEY_USAGE bits\r\n     clear. As a result, an attacker that had a certificate valid for uses other\r\n     than TLS client authentication could be able to use it for TLS client\r\n     authentication anyway. Only TLS 1.3 servers were affected, and only with\r\n     optional authentication (required would abort the handshake with a fatal\r\n     alert).\r\n     CVE-2024-45159\r\n   * Note that TLS clients should generally call mbedtls_ssl_set_hostname()\r\n     if they use certificate authentication (i.e. not pre-shared keys).\r\n     Otherwise, in many scenarios, the server could be impersonated.\r\n     The library will now prevent the handshake and return\r\n     MBEDTLS_ERR_SSL_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME\r\n     if mbedtls_ssl_set_hostname() has not been called.\r\n     Reported by Daniel Stenberg.\r\n     CVE-2025-27809\r\n   * Fix a vulnerability in the TLS 1.2 handshake. If memory allocation failed\r\n     or there was a cryptographic hardware failure when calculating the\r\n     Finished message, it could be calculated incorrectly. This would break\r\n     the security guarantees of the TLS handshake.\r\n     CVE-2025-27810\r\n   * Fix possible use-after-free or double-free in code calling\r\n     mbedtls_x509_string_to_names(). This was caused by the function calling\r\n     mbedtls_asn1_free_named_data_list() on its head argument, while the\r\n     documentation did no suggest it did, making it likely for callers relying\r\n     on the documented behaviour to still hold pointers to memory blocks after\r\n     they were free()d, resulting in high risk of use-after-free or double-free,\r\n     with consequences ranging up to arbitrary code execution.\r\n     In particular, the two sample programs x509/cert_write and x509/cert_req\r\n     were affected (use-after-free if the san string contains more than one DN).\r\n     Code that does not call mbedtls_string_to_names() directly is not affected.\r\n     Found by Linh Le and Ngan Nguyen from Calif.\r\n     CVE-2025-47917\r\n   * Fix a bug in mbedtls_x509_string_to_names() and the\r\n     mbedtls_x509write_{crt,csr}_set_{subject,issuer}_name() functions,\r\n     where some inputs would cause an inconsistent state to be reached, causing\r\n     a NULL dereference either in the function itself, or in subsequent\r\n     users of the output structure, such as mbedtls_x509_write_names(). This\r\n     only affects applications that create (as opposed to consume) X.509\r\n     certificates, CSRs or CRLs. Found by Linh Le and Ngan Nguyen from Calif.\r\n     CVE-2025-48965\r\n   * Fix a bug in tf-psa-crypto's mbedtls_asn1_store_named_data() where it\r\n     would sometimes leave an item in the output list in an inconsistent\r\n     state with val.p == NULL but val.len > 0. Affected functions used in X.509\r\n     would then dereference a NULL pointer. Applications that do not\r\n     call this function (directly, or indirectly through X.509 writing) are not\r\n     affected. Found by Linh Le and Ngan Nguyen from Calif.\r\n     CVE-2025-48965\r\n\r\nBugfix\r\n   * Fix TLS 1.3 client build and runtime when support for session tickets is\r\n     disabled (MBEDTLS_SSL_SESSION_TICKETS configuration option). Fixes #6395.\r\n   * Fix compilation error when memcpy() is a function-like macros. Fixes #8994.\r\n   * Fix Clang compilation error when finite-field Diffie-Hellman is disabled.\r\n     Reported by Michael Schuster in #9188.\r\n   * Fix server mode only build when MBEDTLS_SSL_SRV_C is enabled but\r\n     MBEDTLS_SSL_CLI_C is disabled. Reported by M-Bab on GitHub in #9186.\r\n   * Fixes an issue where some TLS 1.2 clients could not connect to an\r\n     Mbed TLS 3.6.0 server, due to incorrect handling of\r\n     legacy_compression_methods in the ClientHello.\r\n     fixes #8995, #9243.\r\n   * Fixed a regression introduced in 3.6.0 where the CA callback set with\r\n     mbedtls_ssl_conf_ca_cb() would stop working when connections were\r\n     upgraded to TLS 1.3. Fixed by adding support for the CA callback with TLS\r\n     1.3.\r\n   * Fixed a regression introduced in 3.6.0 where clients that relied on\r\n     optional/none authentication mode, by calling mbedtls_ssl_conf_authmode()\r\n     with MBEDTLS_SSL_VERIFY_OPTIONAL or MBEDTLS_SSL_VERIFY_NONE, would stop\r\n     working when connections were upgraded to TLS 1.3. Fixed by adding\r\n     support for optional/none with TLS 1.3 as well. Note that the TLS 1.3\r\n     standard makes server authentication mandatory; users are advised not to\r\n     use authmode none, and to carefully check the results when using optional\r\n     mode.\r\n   * Fixed a regression introduced in 3.6.0 where context-specific certificate\r\n     verify callbacks, set with mbedtls_ssl_set_verify() as opposed to\r\n     mbedtls_ssl_conf_verify(), would stop working when connections were\r\n     upgraded to TLS 1.3. Fixed by adding support for context-specific verify\r\n     callback in TLS 1.3.\r\n   * When MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE is disabled, work with\r\n     peers that have middlebox compatibility enabled, as long as no\r\n     problematic middlebox is in the way. Fixes #9551.\r\n   * Use 'mbedtls_net_close' instead of 'close' in 'mbedtls_net_bind'\r\n     and 'mbedtls_net_connect' to prevent possible double close fd\r\n     problems. Fixes #9711.\r\n   * Fix compilation on MS-DOS DJGPP. Fixes #9813.\r\n   * Support re-assembly of fragmented handshake messages in TLS (both\r\n     1.2 and 1.3). The lack of support was causing handshake failures with\r\n     some servers, especially with TLS 1.3 in practice. There are a few\r\n     limitations, notably a fragmented ClientHello is only supported when\r\n     TLS 1.3 support is enabled. See the documentation of\r\n     mbedtls_ssl_handshake() for details.\r\n   * Fix definition of MBEDTLS_PRINTF_SIZET to prevent runtime crashes that\r\n     occurred whenever SSL debugging was enabled on a copy of Mbed TLS built\r\n     with Visual Studio 2013 or MinGW.\r\n     Fixes #10017.\r\n   * Silence spurious -Wunterminated-string-initialization warnings introduced\r\n     by GCC 15. Fixes #9944.\r\n   * Fix potential CMake parallel build failure when building both the static\r\n     and shared libraries.\r\n   * Fix a build error or incorrect TLS session\r\n     lifetime on platforms where mbedtls_time_t\r\n     is not time_t. Fixes #10236.\r\n\r\nChanges\r\n   * Functions regarding numeric string conversions for OIDs have been moved\r\n     from the OID module and now reside in X.509 module. This helps to reduce\r\n     the code size as these functions are not commonly used outside of X.509.\r\n   * Move the crypto part of the library (content of tf-psa-crypto directory)\r\n     from the Mbed TLS to the TF-PSA-Crypto repository. The crypto code and\r\n     tests development will now occur in TF-PSA-Crypto, which Mbed TLS\r\n     references as a Git submodule.\r\n   * The function mbedtls_x509_string_to_names() now requires its head argument\r\n     to point to NULL on entry. This makes it likely that existing risky uses of\r\n     this function (see the entry in the Security section) will be detected and\r\n     fixed.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Note\r\n> :grey_exclamation: `mbedtls-4.0.0.tar.bz2` are our official release files. `source.tar.gz` and `source.zip` are automatically generated snapshots that GitHub is generating. They do not include external dependencies, and [can't be configured](https://github.com/orgs/community/discussions/6003)\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n2f3a47f7b3a541ddef450e4867eeecb7ce2ef7776093f3a11d6d43ead6bf2827 mbedtls-4.0.0.tar.bz2","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/254412634/reactions","total_count":4,"+1":0,"-1":0,"laugh":0,"hooray":4,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/254409919","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/254409919/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/254409919/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-3.6.5","id":254409919,"author":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4PKfy_","tag_name":"mbedtls-3.6.5","target_commitish":"mbedtls-3.6","name":"Mbed TLS 3.6.5","draft":false,"immutable":false,"prerelease":false,"created_at":"2025-10-14T12:57:09Z","updated_at":"2025-10-16T08:42:48Z","published_at":"2025-10-15T16:40:23Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/304627147","id":304627147,"node_id":"RA_kwDOAGYMwM4SKD3L","name":"mbedtls-3.6.5-sha256sum.txt","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"text/plain","state":"uploaded","size":88,"digest":"sha256:d2e3305256044d929cbd3359d240f2b69d339acc00624764017185022f5cd0b2","download_count":13,"created_at":"2025-10-15T15:16:31Z","updated_at":"2025-10-15T15:16:31Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.5/mbedtls-3.6.5-sha256sum.txt"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/304193362","id":304193362,"node_id":"RA_kwDOAGYMwM4SIZ9S","name":"mbedtls-3.6.5.tar.bz2","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-bzip2","state":"uploaded","size":5367178,"digest":"sha256:4a11f1777bb95bf4ad96721cac945a26e04bf19f57d905f241fe77ebeddf46d8","download_count":25652,"created_at":"2025-10-14T16:34:47Z","updated_at":"2025-10-14T16:34:49Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.5/mbedtls-3.6.5.tar.bz2"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/mbedtls-3.6.5","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/mbedtls-3.6.5","body":"## Description\r\n\r\nThis release includes fixes for security issues.\r\n\r\nMbed TLS 3.6 is a long-term support (LTS) branch. It will be supported with bug-fixes and security fixes until at least March 2027.\r\n\r\n## Security Advisories\r\n\r\nThe two issues fixed were timing side channels.\r\n\r\nFor full details, please see the following links:\r\n- [Padding oracle through timing of cipher error reporting](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-10-invalid-padding-error/)\r\n- [Side channel in RSA key generation and operations (SSBleed, M-Step)](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-10-ssbleed-mstep/)\r\n\r\n\r\n## Release Notes\r\nAPI changes\r\n   * When building the library as a PSA client (MBEDTLS_PSA_CRYPTO_CLIENT\r\n     enabled and MBEDTLS_PSA_CRYPTO_C disabled), you need to provide the\r\n     function psa_can_do_cipher() in addition to psa_can_do_hash(). This\r\n     changed was made in Mbed TLS 3.6.0 but was not announced then.\r\n\r\nFeatures\r\n   * The new function mbedtls_cipher_finish_padded() is similar to\r\n     mbedtls_cipher_finish(), but makes it easier to process invalid-padding\r\n     conditions in constant time.\r\n\r\nSecurity\r\n   * Fix a timing side channel in CBC-PKCS7 decryption that could\r\n     allow an attacker who can submit chosen ciphertexts to recover\r\n     some plaintexts through a timing-based padding oracle attack.\r\n     Credits to Beat Heeb from Oberon microsystems AG. CVE-2025-59438\r\n   * Fix a local timing side-channel in modular inversion and GCD that was\r\n     exploitable in RSA key generation and other RSA operations (see the full\r\n     advisory for details), allowing a local attacker to fully recover the\r\n     private key. This can be exploited on some Arm-v9 CPUs by an unprivileged\r\n     attacker running code on the same core (SSBleed), or when Trustzone-M is\r\n     used, by the non-secure side abusing timer interrupts (M-Step), and\r\n     probably in other similar settings as well. Found and reported\r\n     independently by: SSBleed: Chang Liu (Tsinghua University) and Trevor E.\r\n     Carlson (National University of Singapore); M-Step: Cristiano Rodrigues\r\n     (University of Minho), Marton Bognar (DistriNet, KU Leuven), Sandro Pinto\r\n     (University of Minho), Jo Van Bulck (DistriNet, KU Leuven). CVE-2025-54764\r\n\r\nBugfix\r\n   * Fix potential CMake parallel build failure when building both the static\r\n      and shared libraries.\r\n   * Fix a build error or incorrect TLS session\r\n     lifetime on platforms where mbedtls_time_t\r\n     is not time_t. Fixes #10236.\r\n\r\nChanges\r\n   * The function mbedtls_mpi_gcd() now always gives a non-negative output.\r\n     Previously the output was negative when B = 0 and A < 0, which was not\r\n     documented, and inconsistent as all other inputs resulted in a non-negative\r\n     output.\r\n\r\n## Who should update\r\n\r\nThis release includes security fixes. We strongly recommend evaluating your exposure and, if applicable, prioritizing an upgrade.\r\n\r\n## Note\r\n\r\n> :grey_exclamation: `mbedtls-3.6.5.tar.bz2` and `mbedtls-3.6.5.tar.bz2-sha256sum.txt` are our official release files. `source.tar.gz` and `source.zip` are automatically generated snapshots that GitHub is generating. They do not include external dependencies, and [can't be configured](https://github.com/orgs/community/discussions/6003)\r\n\r\n## Checksum\r\n\r\nThe SHA256 hash for the archive is:\r\n4a11f1777bb95bf4ad96721cac945a26e04bf19f57d905f241fe77ebeddf46d8 mbedtls-3.6.5.tar.bz2","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/254409919/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/228688026","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/228688026/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/228688026/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-3.6.4","id":228688026,"author":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4NoYCa","tag_name":"mbedtls-3.6.4","target_commitish":"mbedtls-3.6","name":"Mbed TLS 3.6.4","draft":false,"immutable":false,"prerelease":false,"created_at":"2025-06-30T06:19:48Z","updated_at":"2025-08-01T11:13:18Z","published_at":"2025-06-30T21:12:19Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/278422083","id":278422083,"node_id":"RA_kwDOAGYMwM4QmGJD","name":"mbedtls-3.6.4-easy-make-lib.tar.bz2","label":null,"uploader":{"login":"gilles-peskine-arm","id":26596258,"node_id":"MDQ6VXNlcjI2NTk2MjU4","avatar_url":"https://avatars.githubusercontent.com/u/26596258?v=4","gravatar_id":"","url":"https://api.github.com/users/gilles-peskine-arm","html_url":"https://github.com/gilles-peskine-arm","followers_url":"https://api.github.com/users/gilles-peskine-arm/followers","following_url":"https://api.github.com/users/gilles-peskine-arm/following{/other_user}","gists_url":"https://api.github.com/users/gilles-peskine-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/gilles-peskine-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gilles-peskine-arm/subscriptions","organizations_url":"https://api.github.com/users/gilles-peskine-arm/orgs","repos_url":"https://api.github.com/users/gilles-peskine-arm/repos","events_url":"https://api.github.com/users/gilles-peskine-arm/events{/privacy}","received_events_url":"https://api.github.com/users/gilles-peskine-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-bzip2","state":"uploaded","size":5293169,"digest":"sha256:40d83e4040c3e548a61f6ac19b697b0380149abafd6923196a70b6067b543261","download_count":514,"created_at":"2025-08-01T10:56:10Z","updated_at":"2025-08-01T10:57:02Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.4/mbedtls-3.6.4-easy-make-lib.tar.bz2"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/278424204","id":278424204,"node_id":"RA_kwDOAGYMwM4QmGqM","name":"mbedtls-3.6.4-easy-make-lib.tar.xz","label":null,"uploader":{"login":"gilles-peskine-arm","id":26596258,"node_id":"MDQ6VXNlcjI2NTk2MjU4","avatar_url":"https://avatars.githubusercontent.com/u/26596258?v=4","gravatar_id":"","url":"https://api.github.com/users/gilles-peskine-arm","html_url":"https://github.com/gilles-peskine-arm","followers_url":"https://api.github.com/users/gilles-peskine-arm/followers","following_url":"https://api.github.com/users/gilles-peskine-arm/following{/other_user}","gists_url":"https://api.github.com/users/gilles-peskine-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/gilles-peskine-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gilles-peskine-arm/subscriptions","organizations_url":"https://api.github.com/users/gilles-peskine-arm/orgs","repos_url":"https://api.github.com/users/gilles-peskine-arm/repos","events_url":"https://api.github.com/users/gilles-peskine-arm/events{/privacy}","received_events_url":"https://api.github.com/users/gilles-peskine-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-xz","state":"uploaded","size":4274824,"digest":"sha256:6a7ed66b4aca38836f0eff8d8fba72992bf0c7326337608ef01de469fd8368bd","download_count":640,"created_at":"2025-08-01T11:06:19Z","updated_at":"2025-08-01T11:13:18Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.4/mbedtls-3.6.4-easy-make-lib.tar.xz"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/278424716","id":278424716,"node_id":"RA_kwDOAGYMwM4QmGyM","name":"mbedtls-3.6.4-sha256sum.txt","label":null,"uploader":{"login":"gilles-peskine-arm","id":26596258,"node_id":"MDQ6VXNlcjI2NTk2MjU4","avatar_url":"https://avatars.githubusercontent.com/u/26596258?v=4","gravatar_id":"","url":"https://api.github.com/users/gilles-peskine-arm","html_url":"https://github.com/gilles-peskine-arm","followers_url":"https://api.github.com/users/gilles-peskine-arm/followers","following_url":"https://api.github.com/users/gilles-peskine-arm/following{/other_user}","gists_url":"https://api.github.com/users/gilles-peskine-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/gilles-peskine-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gilles-peskine-arm/subscriptions","organizations_url":"https://api.github.com/users/gilles-peskine-arm/orgs","repos_url":"https://api.github.com/users/gilles-peskine-arm/repos","events_url":"https://api.github.com/users/gilles-peskine-arm/events{/privacy}","received_events_url":"https://api.github.com/users/gilles-peskine-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"text/plain","state":"uploaded","size":291,"digest":"sha256:46bdb57a3e215a394a8b1bd30923b5c64d0191049ee97954d9262399939fd25a","download_count":53,"created_at":"2025-08-01T11:07:53Z","updated_at":"2025-08-01T11:07:54Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.4/mbedtls-3.6.4-sha256sum.txt"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/278422508","id":278422508,"node_id":"RA_kwDOAGYMwM4QmGPs","name":"mbedtls-3.6.4.tar.bz2","label":null,"uploader":{"login":"gilles-peskine-arm","id":26596258,"node_id":"MDQ6VXNlcjI2NTk2MjU4","avatar_url":"https://avatars.githubusercontent.com/u/26596258?v=4","gravatar_id":"","url":"https://api.github.com/users/gilles-peskine-arm","html_url":"https://github.com/gilles-peskine-arm","followers_url":"https://api.github.com/users/gilles-peskine-arm/followers","following_url":"https://api.github.com/users/gilles-peskine-arm/following{/other_user}","gists_url":"https://api.github.com/users/gilles-peskine-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/gilles-peskine-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gilles-peskine-arm/subscriptions","organizations_url":"https://api.github.com/users/gilles-peskine-arm/orgs","repos_url":"https://api.github.com/users/gilles-peskine-arm/repos","events_url":"https://api.github.com/users/gilles-peskine-arm/events{/privacy}","received_events_url":"https://api.github.com/users/gilles-peskine-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-bzip2","state":"uploaded","size":5099459,"digest":"sha256:ec35b18a6c593cf98c3e30db8b98ff93e8940a8c4e690e66b41dfc011d678110","download_count":377469,"created_at":"2025-08-01T10:58:19Z","updated_at":"2025-08-01T10:59:09Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.4/mbedtls-3.6.4.tar.bz2"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/mbedtls-3.6.4","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/mbedtls-3.6.4","body":"## Description\r\n\r\nThis release includes fixes for security issues.\r\n\r\nMbed TLS 3.6 is a long-term support (LTS) branch. It will be supported with bug-fixes and security fixes until at least March 2027.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following links:\r\n- [Race condition in AESNI support detection](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-06-1/)\r\n- [Heap buffer under-read when parsing PEM-encrypted material](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-06-2/)\r\n- [Unchecked return value in LMS verification allows signature bypass](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-06-3/)\r\n- [Out-of-bounds read in mbedtls_lms_import_public_key()](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-06-4/)\r\n- [Timing side-channel in block cipher decryption with PKCS#7 padding](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-06-5/)\r\n- [NULL pointer dereference after using `mbedtls_asn1_store_named_data()`](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-06-6/)\r\n- [Misleading memory management in `mbedtls_x509_string_to_names()`](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-06-7/)\r\n\r\n## Release Notes\r\nFeatures\r\n   * Add the function mbedtls_ssl_export_keying_material() which allows the\r\n     client and server to extract additional shared symmetric keys from an SSL\r\n     session, according to the TLS-Exporter specification in RFC 8446 and 5705.\r\n     This requires MBEDTLS_SSL_KEYING_MATERIAL_EXPORT to be defined in\r\n     mbedtls_config.h.\r\n\r\nSecurity\r\n   * Fix a buffer overread in mbedtls_lms_import_public_key() when the input is\r\n     less than 3 bytes. Reported by Linh Le and Ngan Nguyen from Calif.\r\n     CVE-2025-49601\r\n   * Fix a vulnerability in LMS verification through which an adversary could\r\n     get an invalid signature accepted if they could cause a hash accelerator\r\n     to fail. Found and reported by Linh Le and Ngan Nguyen from Calif.\r\n     CVE-2025-49600\r\n   * On x86/amd64 platforms, with some compilers, when the library is\r\n     compiled with support for both AESNI and software AES and AESNI is\r\n     available in hardware, an adversary with fine control over which\r\n     threads make progress in a multithreaded program could force software\r\n     AES to be used for some time when the program starts. This could allow\r\n     the adversary to conduct timing attacks and potentially recover the\r\n     key. In particular, this attacker model may be possible against an SGX\r\n     enclave.\r\n     The same vulnerability affects GCM acceleration, which could allow\r\n     a similarly powerful adversary to craft GCM forgeries.\r\n     CVE-2025-52496\r\n   * Fix possible use-after-free or double-free in code calling\r\n     mbedtls_x509_string_to_names(). This was caused by the function calling\r\n     mbedtls_asn1_free_named_data_list() on its head argument, while the\r\n     documentation did no suggest it did, making it likely for callers relying\r\n     on the documented behaviour to still hold pointers to memory blocks after\r\n     they were free()d, resulting in high risk of use-after-free or double-free,\r\n     with consequences ranging up to arbitrary code execution.\r\n     In particular, the two sample programs x509/cert_write and x509/cert_req\r\n     were affected (use-after-free if the san string contains more than one DN).\r\n     Code that does not call mbedtls_string_to_names() directly is not affected.\r\n     Found by Linh Le and Ngan Nguyen from Calif.\r\n     CVE-2025-47917\r\n   * Fix a bug in mbedtls_asn1_store_named_data() where it would sometimes leave\r\n     an item in the output list in an inconsistent state with val.p == NULL but\r\n     val.len > 0. This impacts applications that call this function directly,\r\n     or indirectly via mbedtls_x509_string_to_names() or one of the\r\n     mbedtls_x509write_{crt,csr}_set_{subject,issuer}_name() functions. The\r\n     inconsistent state of the output could then cause a NULL dereference either\r\n     inside the same call to mbedtls_x509_string_to_names(), or in subsequent\r\n     users of the output structure, such as mbedtls_x509_write_names(). This\r\n     only affects applications that create (as opposed to consume) X.509\r\n     certificates, CSRs or CRLs, or that call mbedtls_asn1_store_named_data()\r\n     directly. Found by Linh Le and Ngan Nguyen from Calif.\r\n     CVE-2025-48965\r\n   * Fix an integer underflow that could occur when parsing malformed PEM\r\n     keys, which could be used by an attacker capable of feeding encrypted\r\n     PEM keys to a user. This could cause a crash or information disclosure.\r\n     Found and reported by Linh Le and Ngan Nguyen from Calif.\r\n     CVE-2025-52497\r\n   * Fix a timing side channel in the implementation of PKCS#7 padding\r\n     which would allow an attacker who can request decryption of arbitrary\r\n     ciphertexts to recover the plaintext through a timing oracle attack.\r\n     Reported by Ka Lok Wu from Stony Brook University and Doria Tang from\r\n     The Chinese University of Hong Kong.\r\n     CVE-2025-49087\r\n\r\nBugfix\r\n   * Fix failures of PSA multipart or interruptible operations when the\r\n     library or the application is built with a compiler where\r\n     \"union foo x = {0}\" does not initialize non-default members of the\r\n     union, such as GCC 15 and some versions of Clang 18. This affected MAC\r\n     multipart operations, MAC-based key derivation operations, interruptible\r\n     signature, interruptible verification, and potentially other operations\r\n     when using third-party drivers. This also affected one-shot MAC\r\n     operations using the built-in implementation. Fixes #9814.\r\n   * On entry to PSA driver entry points that set up a multipart operation\r\n     (\"xxx_setup\"), the operation object is supposed to be all-bits-zero.\r\n     This was sometimes not the case when an operation object is reused,\r\n     or with compilers where \"union foo x = {0}\" does not initialize\r\n     non-default members of the union. The PSA core now ensures that this\r\n     guarantee is met in all cases. Fixes #9975.\r\n   * Resolved build issue with C++ projects using Mbed TLS 3.6 when compiling\r\n     with the MSVC toolset v142 and earlier. Fixes mbedtls issue #7087.\r\n   * Silence spurious -Wunterminated-string-initialization warnings introduced\r\n     by GCC 15. Fixes #9944.\r\n   * Fix a sloppy check in LMS public key import, which could lead to accepting\r\n     keys with a different LMS or LM-OTS types on some platforms. Specifically,\r\n     this could happen on platforms where enum types are smaller than 32 bits\r\n     and compiler optimization is enabled. Found and reported by Linh Le and\r\n     Ngan Nguyen from Calif.\r\n   * Fix a race condition on x86/amd64 platforms in AESNI support detection\r\n     that could lead to using software AES in some threads at the very\r\n     beginning of a multithreaded program. Reported by Solar Designer.\r\n     Fixes #9840.\r\n   * Fix mbedtls_base64_decode() on inputs that did not have the correct\r\n     number of trailing equal signs, or had 4*k+1 digits. They were accepted\r\n     as long as they had at most two trailing equal signs. They are now\r\n     rejected. Furthermore, before, on inputs with too few equal signs, the\r\n     function reported the correct size in *olen when it returned\r\n     MBEDTLS_ERR_BASE64_BUFFER_TOO_SMALL, but truncated the output to the\r\n     last multiple of 3 bytes.\r\n   * When calling mbedtls_asn1_write_raw_buffer() with NULL, 0 as the last two\r\n     arguments, undefined behaviour would be triggered, in the form of a call to\r\n     memcpy(..., NULL, 0). This was harmless in practice, but could trigger\r\n     complains from sanitizers or static analyzers.\r\n\r\nChanges\r\n   * The function mbedtls_x509_string_to_names() now requires its head argument\r\n     to point to NULL on entry. This makes it likely that existing risky uses of\r\n     this function (see the entry in the Security section) will be detected and\r\n     fixed.\r\n\r\n## Note\r\n> :grey_exclamation: `mbedtls-3.6.4.tar.bz2` and `mbedtls-3.6.4-easy-make-lib.tar.bz2` are our official release files. `source.tar.gz` and `source.zip` are automatically generated snapshot's that github is generating. They do not include external dependencies, and [can't be configured](https://github.com/orgs/community/discussions/6003). Between the `mbedtls-3.6.4*` archives, pick whichever is convenient for you, noting that `mbedtls-3.6.4.tar.bz2` has [more requirements than intended to run `make lib`](https://github.com/Mbed-TLS/mbedtls/issues/10332).\r\n\r\n## Checksum\r\n\r\nThe SHA-256 hashes for the archives are:\r\n```\r\n40d83e4040c3e548a61f6ac19b697b0380149abafd6923196a70b6067b543261  mbedtls-3.6.4-easy-make-lib.tar.bz2\r\n6a7ed66b4aca38836f0eff8d8fba72992bf0c7326337608ef01de469fd8368bd  mbedtls-3.6.4-easy-make-lib.tar.xz\r\nec35b18a6c593cf98c3e30db8b98ff93e8940a8c4e690e66b41dfc011d678110  mbedtls-3.6.4.tar.bz2\r\n```\r\n\r\nArchive history:\r\n* 2025-07-31: Replaced `mbedtls-3.6.4.tar.bz2` with a new archive that has exactly the same file content, but file timestamps have been updated to fix https://github.com/Mbed-TLS/mbedtls/issues/10332. This archive was accidentally uploaded with xz compression, despite the `.bz2` file name.\r\n* 2025-08-01: Restored the original `mbedtls-3.6.4.tar.bz2` and published the fix for #10332 with a new file name `mbedtls-3.6.4-easy-make-lib.tar.bz2`, and `mbedtls-3.6.4-easy-make-lib.tar.xz` for the xz version).\r\n"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/229433126","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/229433126/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/229433126/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-4.0.0-beta","id":229433126,"author":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4NrN8m","tag_name":"mbedtls-4.0.0-beta","target_commitish":"development","name":"Mbed TLS 4.0.0-beta","draft":false,"immutable":false,"prerelease":true,"created_at":"2025-06-30T13:23:49Z","updated_at":"2025-07-04T17:07:40Z","published_at":"2025-07-04T17:07:40Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/269972186","id":269972186,"node_id":"RA_kwDOAGYMwM4QF3La","name":"mbedtls-4.0.0-beta.sha256sum.txt","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"text/plain","state":"uploaded","size":65,"digest":"sha256:35f16c564864fbdc9ebd2bbc1cf7633ac4be19299fce3cf087d3e0e4c365fa33","download_count":2,"created_at":"2025-07-04T13:41:51Z","updated_at":"2025-07-04T13:41:52Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-4.0.0-beta/mbedtls-4.0.0-beta.sha256sum.txt"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/269972188","id":269972188,"node_id":"RA_kwDOAGYMwM4QF3Lc","name":"mbedtls-4.0.0-beta.tar.bz2","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-bzip2","state":"uploaded","size":5917179,"digest":"sha256:210ac92706a8dd57180a3fee32fbfe879426aa062e31b94f3a287fdd0db61069","download_count":302,"created_at":"2025-07-04T13:41:52Z","updated_at":"2025-07-04T13:41:54Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-4.0.0-beta/mbedtls-4.0.0-beta.tar.bz2"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/mbedtls-4.0.0-beta","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/mbedtls-4.0.0-beta","body":"## Description\r\n\r\nThe Mbed TLS 4.0.0-beta and TF-PSA-Crypto 1.0.0-beta releases introduce a major codebase restructuring:\r\n- PSA Crypto functionality now resides in its own repository Mbed-TLS/TF-PSA-Crypto.\r\n- TLS and X.509 components remain in Mbed TLS.\r\n\r\n### API Changes & Migration\r\n\r\nThese betas include significant API changes that break backward compatibility with previous releases. Please test your integration thoroughly and follow the [4.0-migration-guide](https://github.com/Mbed-TLS/mbedtls/tree/development/docs/4.0-migration-guide) to update your codebase to the new interfaces.\r\n\r\n### Please note\r\n\r\n- These beta versions **must be used together** to validate your integration against the newly split interfaces.\r\n- The [4.0 Migration Guide](https://github.com/Mbed-TLS/mbedtls/tree/development/docs/4.0-migration-guide) is currently under construction and will be continuously updated as we prepare for the full, non-beta release.\r\n\r\n## Intended audience for this beta\r\n\r\n- Integrators: To evaluate the impact of the Mbed TLS split and API changes on your codebase.\r\n- Early adopters: Anyone who wants to experiment with the upcoming interfaces and provide feedback before the formal release.\r\n\r\n**These betas are not production-ready.** For deployments requiring stability and the latest security fixes, please continue using the LTS release [Mbed TLS 3.6.4](https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-3.6.4)\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following links:\r\n- [`CTR_DRBG` prioritized over `HMAC_DRBG` as the PSA DRBG](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-08-1/)\r\n- [Stack buffer overflow in ECDSA signature conversion functions](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-08-2/)\r\n- [Limited authentication bypass in TLS 1.3 optional client authentication](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-08-3/)\r\n- [Buffer underrun in pkwrite when writing an opaque key pair](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-10-1/)\r\n- [TLS clients should generally call mbedtls_ssl_set_hostname](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-03-1/)\r\n- [Potential authentication bypass in TLS handshake](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-03-2/)\r\n- [Misleading memory management in `mbedtls_x509_string_to_names()`](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-06-7/)\r\n- [NULL pointer dereference after using `mbedtls_asn1_store_named_data()`](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-06-6/)\r\n\r\n\r\n\r\n\r\n## Release Notes\r\n\r\nAPI changes\r\n   * The experimental functions psa_generate_key_ext() and\r\n     psa_key_derivation_output_key_ext() have been replaced by\r\n     psa_generate_key_custom() and psa_key_derivation_output_key_custom().\r\n     They have almost exactly the same interface, but the variable-length\r\n     data is passed in a separate parameter instead of a flexible array\r\n     member. This resolves a build failure under C++ compilers that do not\r\n     support flexible array members (a C99 feature not adopted by C++).\r\n     Fixes #9020.\r\n   * Align the mbedtls_ssl_ticket_setup() function with the PSA Crypto API.\r\n     Instead of taking a mbedtls_cipher_type_t as an argument, this function\r\n     now takes 3 new arguments: a PSA algorithm, key type and key size, to\r\n     specify the AEAD for ticket protection.\r\n   * The PSA and Mbed TLS error spaces are now unified. mbedtls_xxx()\r\n     functions can now return PSA_ERROR_xxx values.\r\n     There is no longer a distinction between \"low-level\" and \"high-level\"\r\n     Mbed TLS error codes.\r\n     This will not affect most applications since the error values are\r\n     between -32767 and -1 as before.\r\n   * All API functions now use the PSA random generator psa_get_random()\r\n     internally. As a consequence, functions no longer take RNG parameters.\r\n     Please refer to the migration guide at :\r\n     tf-psa-crypto/docs/4.0-migration-guide.md.\r\n\r\nDefault behavior changes\r\n   * In a PSA-client-only build (i.e. MBEDTLS_PSA_CRYPTO_CLIENT &&\r\n     !MBEDTLS_PSA_CRYPTO_C), do not automatically enable local crypto when the\r\n     corresponding PSA mechanism is enabled, since the server provides the\r\n     crypto. Fixes #9126.\r\n   * The PK, X.509, PKCS7 and TLS modules now always use the PSA subsystem\r\n     to perform cryptographic operations, with a few exceptions documented\r\n     in docs/architecture/psa-migration/psa-limitations.md. This\r\n     corresponds to the behavior of Mbed TLS 3.x when\r\n     MBEDTLS_USE_PSA_CRYPTO is enabled. In effect, MBEDTLS_USE_PSA_CRYPTO\r\n     is now always enabled.\r\n   * psa_crypto_init() must be called before performing any cryptographic\r\n     operation, including indirect requests such as parsing a key or\r\n     certificate or starting a TLS handshake.\r\n   * The `PSA_WANT_XXX` symbols as defined in\r\n     tf-psa-crypto/include/psa/crypto_config.h are now always used in the\r\n     configuration of the cryptographic mechanisms exposed by the PSA API.\r\n     This corresponds to the configuration behavior of Mbed TLS 3.x when\r\n     MBEDTLS_PSA_CRYPTO_CONFIG is enabled. In effect, MBEDTLS_PSA_CRYPTO_CONFIG\r\n     is now always enabled and the configuration option has been removed.\r\n   * In TLS clients, if mbedtls_ssl_set_hostname() has not been called,\r\n     mbedtls_ssl_handshake() now fails with\r\n     MBEDTLS_ERR_SSL_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME\r\n     if certificate-based authentication of the server is attempted.\r\n     This is because authenticating a server without knowing what name\r\n     to expect is usually insecure.\r\n\r\nRemovals\r\n   * Drop support for VIA Padlock. Removes MBEDTLS_PADLOCK_C.\r\n     Fixes #5903.\r\n   * Drop support for crypto alt interface. Removes MBEDTLS_XXX_ALT options\r\n     at the module and function level for crypto mechanisms only. The remaining\r\n     alt interfaces for platform, threading and timing are unchanged.\r\n     Fixes #8149.\r\n   * Remove support for the RSA-PSK key exchange in TLS 1.2.\r\n   * Remove deprecated mbedtls_x509write_crt_set_serial(). The function was\r\n     already deprecated and superseeded by\r\n     mbedtls_x509write_crt_set_serial_raw().\r\n   * Remove the function mbedtls_ssl_conf_curves() which had been deprecated\r\n     in favour of mbedtls_ssl_conf_groups() since Mbed TLS 3.1.\r\n   * Remove support for the DHE-PSK key exchange in TLS 1.2.\r\n   * Remove support for the DHE-RSA key exchange in TLS 1.2.\r\n   * Following the removal of DHM module (#9972 and TF-PSA-Crypto#175) the\r\n     following SSL functions are removed:\r\n     - mbedtls_ssl_conf_dh_param_bin\r\n     - mbedtls_ssl_conf_dh_param_ctx\r\n     - mbedtls_ssl_conf_dhm_min_bitlen\r\n   * Remove support for the RSA key exchange in TLS 1.2.\r\n   * Remove mbedtls_low_level_sterr() and mbedtls_high_level_strerr(),\r\n     since these concepts no longer exists. There is just mbedtls_strerror().\r\n    * Removal of the following sample programs:\r\n          pkey/rsa_genkey.c\r\n          pkey/pk_decrypt.c\r\n          pkey/dh_genprime.c\r\n          pkey/rsa_verify.c\r\n          pkey/mpi_demo.c\r\n          pkey/rsa_decrypt.c\r\n          pkey/key_app.c\r\n          pkey/dh_server.c\r\n          pkey/ecdh_curve25519.c\r\n          pkey/pk_encrypt.c\r\n          pkey/rsa_sign.c\r\n          pkey/key_app_writer.c\r\n          pkey/dh_client.c\r\n          pkey/ecdsa.c\r\n          pkey/rsa_encrypt.c\r\n          wince_main.c\r\n          aes/crypt_and_hash.c\r\n          random/gen_random_ctr_drbg.c\r\n          random/gen_entropy.c\r\n          hash/md_hmac_demo.c\r\n          hash/hello.c\r\n          hash/generic_sum.c\r\n          cipher/cipher_aead_demo.c\r\n   * Remove compat-2-x.h header from mbedtls.\r\n   * The library no longer offers interfaces to look up values by OID\r\n     or OID by enum values.\r\n     The header <mbedtls/oid.h> now only defines functions to convert\r\n     between binary and dotted string OID representations, and macros\r\n     for OID strings that are relevant to X.509.\r\n     The compilation option MBEDTLS_OID_C no longer\r\n     exists. OID tables are included in the build automatically as needed.\r\n\r\nFeatures\r\n   * When the new compilation option MBEDTLS_PSA_KEY_STORE_DYNAMIC is enabled,\r\n     the number of volatile PSA keys is virtually unlimited, at the expense\r\n     of increased code size. This option is off by default, but enabled in\r\n     the default mbedtls_config.h. Fixes #9216.\r\n   * Add a new psa_key_agreement() PSA API to perform key agreement and return\r\n     an identifier for the newly created key.\r\n   * Added new configuration option MBEDTLS_PSA_STATIC_KEY_SLOTS, which\r\n     uses static storage for keys, enabling malloc-less use of key slots.\r\n     The size of each buffer is given by the option\r\n     MBEDTLS_PSA_STATIC_KEY_SLOT_BUFFER_SIZE. By default it accommodates the\r\n     largest PSA key enabled in the build.\r\n   * Add an interruptible version of key agreement to the PSA interface.\r\n     See psa_key_agreement_iop_setup() and related functions.\r\n   * Add an interruptible version of generate key to the PSA interface.\r\n     See psa_generate_key_iop_setup() and related functions.\r\n   * Add the function mbedtls_ssl_export_keying_material() which allows the\r\n     client and server to extract additional shared symmetric keys from an SSL\r\n     session, according to the TLS-Exporter specification in RFC 8446 and 5705.\r\n     This requires MBEDTLS_SSL_KEYING_MATERIAL_EXPORT to be defined in\r\n     mbedtls_config.h.\r\n\r\nSecurity\r\n   * Unlike previously documented, enabling MBEDTLS_PSA_HMAC_DRBG_MD_TYPE does\r\n     not cause the PSA subsystem to use HMAC_DRBG: it uses HMAC_DRBG only when\r\n     MBEDTLS_PSA_CRYPTO_EXTERNAL_RNG and MBEDTLS_CTR_DRBG_C are disabled.\r\n     CVE-2024-45157\r\n   * Fix a stack buffer overflow in mbedtls_ecdsa_der_to_raw() and\r\n     mbedtls_ecdsa_raw_to_der() when the bits parameter is larger than the\r\n     largest supported curve. In some configurations with PSA disabled,\r\n     all values of bits are affected. This never happens in internal library\r\n     calls, but can affect applications that call these functions directly.\r\n     CVE-2024-45158\r\n   * With TLS 1.3, when a server enables optional authentication of the\r\n     client, if the client-provided certificate does not have appropriate values\r\n     in keyUsage or extKeyUsage extensions, then the return value of\r\n     mbedtls_ssl_get_verify_result() would incorrectly have the\r\n     MBEDTLS_X509_BADCERT_KEY_USAGE and MBEDTLS_X509_BADCERT_EXT_KEY_USAGE bits\r\n     clear. As a result, an attacker that had a certificate valid for uses other\r\n     than TLS client authentication could be able to use it for TLS client\r\n     authentication anyway. Only TLS 1.3 servers were affected, and only with\r\n     optional authentication (required would abort the handshake with a fatal\r\n     alert).\r\n     CVE-2024-45159\r\n   * Fix a buffer underrun in mbedtls_pk_write_key_der() when\r\n     called on an opaque key, MBEDTLS_USE_PSA_CRYPTO is enabled,\r\n     and the output buffer is smaller than the actual output.\r\n     Fix a related buffer underrun in mbedtls_pk_write_key_pem()\r\n     when called on an opaque RSA key, MBEDTLS_USE_PSA_CRYPTO is enabled\r\n     and MBEDTLS_MPI_MAX_SIZE is smaller than needed for a 4096-bit RSA key.\r\n     CVE-2024-49195\r\n   * Note that TLS clients should generally call mbedtls_ssl_set_hostname()\r\n     if they use certificate authentication (i.e. not pre-shared keys).\r\n     Otherwise, in many scenarios, the server could be impersonated.\r\n     The library will now prevent the handshake and return\r\n     MBEDTLS_ERR_SSL_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME\r\n     if mbedtls_ssl_set_hostname() has not been called.\r\n     Reported by Daniel Stenberg.\r\n     CVE-2025-27809\r\n   * Fix a vulnerability in the TLS 1.2 handshake. If memory allocation failed\r\n     or there was a cryptographic hardware failure when calculating the\r\n     Finished message, it could be calculated incorrectly. This would break\r\n     the security guarantees of the TLS handshake.\r\n     CVE-2025-27810\r\n   * Fix possible use-after-free or double-free in code calling\r\n     mbedtls_x509_string_to_names(). This was caused by the function calling\r\n     mbedtls_asn1_free_named_data_list() on its head argument, while the\r\n     documentation did no suggest it did, making it likely for callers relying\r\n     on the documented behaviour to still hold pointers to memory blocks after\r\n     they were free()d, resulting in high risk of use-after-free or double-free,\r\n     with consequences ranging up to arbitrary code execution.\r\n     In particular, the two sample programs x509/cert_write and x509/cert_req\r\n     were affected (use-after-free if the san string contains more than one DN).\r\n     Code that does not call mbedtls_string_to_names() directly is not affected.\r\n     Found by Linh Le and Ngan Nguyen from Calif.\r\n     CVE-2025-47917\r\n   * Fix a bug in mbedtls_x509_string_to_names() and the\r\n     mbedtls_x509write_{crt,csr}_set_{subject,issuer}_name() functions,\r\n     where some inputs would cause an inconsistent state to be reached, causing\r\n     a NULL dereference either in the function itself, or in subsequent\r\n     users of the output structure, such as mbedtls_x509_write_names(). This\r\n     only affects applications that create (as opposed to consume) X.509\r\n     certificates, CSRs or CRLs. Found by Linh Le and Ngan Nguyen from Calif.\r\n     CVE-2025-48965\r\n\r\nBugfix\r\n   * Fix TLS 1.3 client build and runtime when support for session tickets is\r\n     disabled (MBEDTLS_SSL_SESSION_TICKETS configuration option). Fixes #6395.\r\n   * Fix compilation error when memcpy() is a function-like macros. Fixes #8994.\r\n   * MBEDTLS_ASN1_PARSE_C and MBEDTLS_ASN1_WRITE_C are now automatically enabled\r\n     as soon as MBEDTLS_RSA_C is enabled. Fixes #9041.\r\n   * Fix undefined behaviour (incrementing a NULL pointer by zero length) when\r\n     passing in zero length additional data to multipart AEAD.\r\n   * Fix rare concurrent access bug where attempting to operate on a\r\n     non-existent key while concurrently creating a new key could potentially\r\n     corrupt the key store.\r\n   * Fix error handling when creating a key in a dynamic secure element\r\n     (feature enabled by MBEDTLS_PSA_CRYPTO_SE_C). In a low memory condition,\r\n     the creation could return PSA_SUCCESS but using or destroying the key\r\n     would not work. Fixes #8537.\r\n   * Fix issue of redefinition warning messages for _GNU_SOURCE in\r\n     entropy_poll.c and sha_256.c. There was a build warning during\r\n     building for linux platform.\r\n     Resolves #9026\r\n   * Fix a compilation warning in pk.c when PSA is enabled and RSA is disabled.\r\n   * Fix the build when MBEDTLS_PSA_CRYPTO_CONFIG is enabled and the built-in\r\n     CMAC is enabled, but no built-in unauthenticated cipher is enabled.\r\n     Fixes #9209.\r\n   * Fix redefinition warnings when SECP192R1 and/or SECP192K1 are disabled.\r\n     Fixes #9029.\r\n   * Fix psa_cipher_decrypt() with CCM* rejecting messages less than 3 bytes\r\n     long. Credit to Cryptofuzz. Fixes #9314.\r\n   * Fix interference between PSA volatile keys and built-in keys\r\n     when MBEDTLS_PSA_CRYPTO_BUILTIN_KEYS is enabled and\r\n     MBEDTLS_PSA_KEY_SLOT_COUNT is more than 4096.\r\n   * Document and enforce the limitation of mbedtls_psa_register_se_key()\r\n     to persistent keys. Resolves #9253.\r\n   * Fix Clang compilation error when MBEDTLS_USE_PSA_CRYPTO is enabled\r\n     but MBEDTLS_DHM_C is disabled. Reported by Michael Schuster in #9188.\r\n   * Fix server mode only build when MBEDTLS_SSL_SRV_C is enabled but\r\n     MBEDTLS_SSL_CLI_C is disabled. Reported by M-Bab on GitHub in #9186.\r\n   * When MBEDTLS_PSA_CRYPTO_C was disabled and MBEDTLS_ECDSA_C enabled,\r\n     some code was defining 0-size arrays, resulting in compilation errors.\r\n     Fixed by disabling the offending code in configurations without PSA\r\n     Crypto, where it never worked. Fixes #9311.\r\n   * Fixes an issue where some TLS 1.2 clients could not connect to an\r\n     Mbed TLS 3.6.0 server, due to incorrect handling of\r\n     legacy_compression_methods in the ClientHello.\r\n     fixes #8995, #9243.\r\n   * Fix a memory leak that could occur when failing to process an RSA\r\n     key through some PSA functions due to low memory conditions.\r\n   * Fixed a regression introduced in 3.6.0 where the CA callback set with\r\n     mbedtls_ssl_conf_ca_cb() would stop working when connections were\r\n     upgraded to TLS 1.3. Fixed by adding support for the CA callback with TLS\r\n     1.3.\r\n   * Fixed a regression introduced in 3.6.0 where clients that relied on\r\n     optional/none authentication mode, by calling mbedtls_ssl_conf_authmode()\r\n     with MBEDTLS_SSL_VERIFY_OPTIONAL or MBEDTLS_SSL_VERIFY_NONE, would stop\r\n     working when connections were upgraded to TLS 1.3. Fixed by adding\r\n     support for optional/none with TLS 1.3 as well. Note that the TLS 1.3\r\n     standard makes server authentication mandatory; users are advised not to\r\n     use authmode none, and to carefully check the results when using optional\r\n     mode.\r\n   * Fixed a regression introduced in 3.6.0 where context-specific certificate\r\n     verify callbacks, set with mbedtls_ssl_set_verify() as opposed to\r\n     mbedtls_ssl_conf_verify(), would stop working when connections were\r\n     upgraded to TLS 1.3. Fixed by adding support for context-specific verify\r\n     callback in TLS 1.3.\r\n   * Fix unintended performance regression when using short RSA public keys.\r\n     Fixes #9232.\r\n   * When MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE is disabled, work with\r\n     peers that have middlebox compatibility enabled, as long as no\r\n     problematic middlebox is in the way. Fixes #9551.\r\n   * Fix invalid JSON schemas for driver descriptions used by\r\n     generate_driver_wrappers.py.\r\n   * Use 'mbedtls_net_close' instead of 'close' in 'mbedtls_net_bind'\r\n     and 'mbedtls_net_connect' to prevent possible double close fd\r\n     problems. Fixes #9711.\r\n   * Fix undefined behavior in some cases when mbedtls_psa_raw_to_der() or\r\n     mbedtls_psa_der_to_raw() is called with bits=0.\r\n   * Fix compilation on MS-DOS DJGPP. Fixes #9813.\r\n   * Fix missing constraints on the AES-NI inline assembly which is used on\r\n     GCC-like compilers when building AES for generic x86_64 targets. This\r\n     may have resulted in incorrect code with some compilers, depending on\r\n     optimizations. Fixes #9819.\r\n   * Support re-assembly of fragmented handshake messages in TLS (both\r\n     1.2 and 1.3). The lack of support was causing handshake failures with\r\n     some servers, especially with TLS 1.3 in practice. There are a few\r\n     limitations, notably a fragmented ClientHello is only supported when\r\n     TLS 1.3 support is enabled. See the documentation of\r\n     mbedtls_ssl_handshake() for details.\r\n   * Fix definition of MBEDTLS_PRINTF_SIZET to prevent runtime crashes that\r\n     occurred whenever SSL debugging was enabled on a copy of Mbed TLS built\r\n     with Visual Studio 2013 or MinGW.\r\n     Fixes #10017.\r\n   * Silence spurious -Wunterminated-string-initialization warnings introduced\r\n     by GCC 15. Fixes #9944.\r\n\r\nChanges\r\n   * Warn if mbedtls/check_config.h is included manually, as this can\r\n     lead to spurious errors. Error if a *adjust*.h header is included\r\n     manually, as this can lead to silently inconsistent configurations,\r\n     potentially resulting in buffer overflows.\r\n     When migrating from Mbed TLS 2.x, if you had a custom config.h that\r\n     included check_config.h, remove this inclusion from the Mbed TLS 3.x\r\n     configuration file (renamed to mbedtls_config.h). This change was made\r\n     in Mbed TLS 3.0, but was not announced in a changelog entry at the time.\r\n   * Functions regarding numeric string conversions for OIDs have been moved\r\n     from the OID module and now reside in X.509 module. This helps to reduce\r\n     the code size as these functions are not commonly used outside of X.509.\r\n   * Improve performance of PSA key generation with ECC keys: it no longer\r\n     computes the public key (which was immediately discarded). Fixes #9732.\r\n   * Cryptography and platform configuration options have been migrated\r\n     from the Mbed TLS library configuration file mbedtls_config.h to\r\n     crypto_config.h that will become the TF-PSA-Crypto configuration file,\r\n     see config-split.md for more information. The reference and test custom\r\n     configuration files respectively in configs/ and tests/configs/ have\r\n     been updated accordingly.\r\n     To migrate custom Mbed TLS configurations where\r\n     MBEDTLS_PSA_CRYPTO_CONFIG is disabled, you should first adapt them\r\n     to the PSA configuration scheme based on PSA_WANT_XXX symbols\r\n     (see psa-conditional-inclusion-c.md for more information).\r\n     To migrate custom Mbed TLS configurations where\r\n     MBEDTLS_PSA_CRYPTO_CONFIG is enabled, you should migrate the\r\n     cryptographic and platform configuration options from mbedtls_config.h\r\n     to crypto_config.h (see config-split.md for more information and configs/\r\n     for examples).\r\n   * Move the crypto part of the library (content of tf-psa-crypto directory)\r\n     from the Mbed TLS to the TF-PSA-Crypto repository. The crypto code and\r\n     tests development will now occur in TF-PSA-Crypto, which Mbed TLS\r\n     references as a Git submodule.\r\n   * The function mbedtls_x509_string_to_names() now requires its head argument\r\n     to point to NULL on entry. This makes it likely that existing risky uses of\r\n     this function (see the entry in the Security section) will be detected and\r\n     fixed.\r\n\r\n## Note\r\n> :grey_exclamation: `mbedtls-4.0.0-beta.tar.bz2` are our official release files. `source.tar.gz` and `source.zip` are automatically generated snapshot's that github is generating. They do not include external dependencies, and [can't be configured](https://github.com/orgs/community/discussions/6003)\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n210ac92706a8dd57180a3fee32fbfe879426aa062e31b94f3a287fdd0db61069 mbedtls-4.0.0-beta.tar.bz2"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/218272682","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/218272682/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/218272682/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.6.3.1","id":218272682,"author":{"login":"yanesca","id":6871045,"node_id":"MDQ6VXNlcjY4NzEwNDU=","avatar_url":"https://avatars.githubusercontent.com/u/6871045?v=4","gravatar_id":"","url":"https://api.github.com/users/yanesca","html_url":"https://github.com/yanesca","followers_url":"https://api.github.com/users/yanesca/followers","following_url":"https://api.github.com/users/yanesca/following{/other_user}","gists_url":"https://api.github.com/users/yanesca/gists{/gist_id}","starred_url":"https://api.github.com/users/yanesca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanesca/subscriptions","organizations_url":"https://api.github.com/users/yanesca/orgs","repos_url":"https://api.github.com/users/yanesca/repos","events_url":"https://api.github.com/users/yanesca/events{/privacy}","received_events_url":"https://api.github.com/users/yanesca/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4NApOq","tag_name":"v3.6.3.1","target_commitish":"development","name":"Mbed TLS 3.6.3.1","draft":false,"immutable":false,"prerelease":false,"created_at":"2025-05-13T13:17:41Z","updated_at":"2025-05-13T13:58:46Z","published_at":"2025-05-13T13:31:27Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/254270490","id":254270490,"node_id":"RA_kwDOAGYMwM4PJ9wa","name":"mbedtls-3.6.3.1.tar.bz2","label":null,"uploader":{"login":"yanesca","id":6871045,"node_id":"MDQ6VXNlcjY4NzEwNDU=","avatar_url":"https://avatars.githubusercontent.com/u/6871045?v=4","gravatar_id":"","url":"https://api.github.com/users/yanesca","html_url":"https://github.com/yanesca","followers_url":"https://api.github.com/users/yanesca/followers","following_url":"https://api.github.com/users/yanesca/following{/other_user}","gists_url":"https://api.github.com/users/yanesca/gists{/gist_id}","starred_url":"https://api.github.com/users/yanesca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanesca/subscriptions","organizations_url":"https://api.github.com/users/yanesca/orgs","repos_url":"https://api.github.com/users/yanesca/repos","events_url":"https://api.github.com/users/yanesca/events{/privacy}","received_events_url":"https://api.github.com/users/yanesca/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-bzip2","state":"uploaded","size":5108003,"digest":null,"download_count":25241,"created_at":"2025-05-13T13:57:37Z","updated_at":"2025-05-13T13:57:40Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/v3.6.3.1/mbedtls-3.6.3.1.tar.bz2"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/254270722","id":254270722,"node_id":"RA_kwDOAGYMwM4PJ90C","name":"mbedtls-3.6.3.1.tar.bz2-sha256sum.txt","label":null,"uploader":{"login":"yanesca","id":6871045,"node_id":"MDQ6VXNlcjY4NzEwNDU=","avatar_url":"https://avatars.githubusercontent.com/u/6871045?v=4","gravatar_id":"","url":"https://api.github.com/users/yanesca","html_url":"https://github.com/yanesca","followers_url":"https://api.github.com/users/yanesca/followers","following_url":"https://api.github.com/users/yanesca/following{/other_user}","gists_url":"https://api.github.com/users/yanesca/gists{/gist_id}","starred_url":"https://api.github.com/users/yanesca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanesca/subscriptions","organizations_url":"https://api.github.com/users/yanesca/orgs","repos_url":"https://api.github.com/users/yanesca/repos","events_url":"https://api.github.com/users/yanesca/events{/privacy}","received_events_url":"https://api.github.com/users/yanesca/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"text/plain","state":"uploaded","size":65,"digest":null,"download_count":63,"created_at":"2025-05-13T13:58:15Z","updated_at":"2025-05-13T13:58:15Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/v3.6.3.1/mbedtls-3.6.3.1.tar.bz2-sha256sum.txt"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v3.6.3.1","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v3.6.3.1","body":"## Description\r\n\r\nThis release is fully identical to[ Mbed TLS 3.6.3](https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-3.6.3) in content, but without the `.gitmodules` file, which was left in by mistake and was causing difficulties for users who are getting Mbed TLS through git.\r\n\r\nMbed TLS 3.6 is a long-term support (LTS) branch. It will be supported with bug-fixes and security fixes until at least March 2027.\r\n\r\n## Note\r\n\r\n> :grey_exclamation: `mbedtls-3.6.3.1.tar.bz2` and `mbedtls-3.6.3.1.tar.bz2-sha256sum.txt` are our official release files. `source.tar.gz` and `source.zip` are automatically generated snapshot's that github is generating. They do not include external dependencies, and [can't be configured](https://github.com/orgs/community/discussions/6003)\r\n\r\n## Checksum\r\n\r\nThe SHA256 hash for the archive is:\r\n243ed496d5f88a5b3791021be2800aac821b9a4cc16e7134aa413c58b4c20e0c mbedtls-3.6.3.1.tar.bz2\r\n","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/218272682/reactions","total_count":8,"+1":0,"-1":0,"laugh":2,"hooray":0,"confused":0,"heart":6,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/207810687","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/207810687/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/207810687/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-3.6.3","id":207810687,"author":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4MYvB_","tag_name":"mbedtls-3.6.3","target_commitish":"mbedtls-3.6","name":"Mbed TLS 3.6.3","draft":false,"immutable":false,"prerelease":false,"created_at":"2025-03-21T13:56:49Z","updated_at":"2025-03-26T14:10:36Z","published_at":"2025-03-24T17:13:29Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/240284057","id":240284057,"node_id":"RA_kwDOAGYMwM4OUnGZ","name":"mbedtls-3.6.3-sha256sum.txt","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"text/plain","state":"uploaded","size":65,"digest":null,"download_count":146,"created_at":"2025-03-24T12:01:53Z","updated_at":"2025-03-24T12:01:54Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.3/mbedtls-3.6.3-sha256sum.txt"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/240284048","id":240284048,"node_id":"RA_kwDOAGYMwM4OUnGQ","name":"mbedtls-3.6.3.tar.bz2","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-compressed","state":"uploaded","size":5138248,"digest":null,"download_count":408914,"created_at":"2025-03-24T12:01:47Z","updated_at":"2025-03-24T12:01:53Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.3/mbedtls-3.6.3.tar.bz2"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/mbedtls-3.6.3","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/mbedtls-3.6.3","body":"## Description\r\n\r\nThis release of Mbed TLS provides the fix for a tls compatibility issue of handling fragmented handshake messages. This release includes fixes for security issues.\r\n\r\nMbed TLS 3.6 is a long-term support (LTS) branch. It will be supported with bug-fixes and security fixes until at least March 2027.\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following links:\r\n- [Potential authentication bypass in TLS handshake](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-03-2/)\r\n- [TLS clients should generally call mbedtls_ssl_set_hostname](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-03-1/)\r\n\r\n## Release Notes\r\n\r\nDefault behavior changes\r\n   * In TLS clients, if mbedtls_ssl_set_hostname() has not been called,\r\n     mbedtls_ssl_handshake() now fails with\r\n     MBEDTLS_ERR_SSL_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME\r\n     if certificate-based authentication of the server is attempted.\r\n     This is because authenticating a server without knowing what name\r\n     to expect is usually insecure. To restore the old behavior, either\r\n     call mbedtls_ssl_set_hostname() with NULL as the hostname, or\r\n     enable the new compile-time option\r\n     MBEDTLS_SSL_CLI_ALLOW_WEAK_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME.\r\n\r\nFeatures\r\n   * Added new configuration option MBEDTLS_PSA_STATIC_KEY_SLOTS, which\r\n     uses static storage for keys, enabling malloc-less use of key slots.\r\n     The size of each buffer is given by the option\r\n     MBEDTLS_PSA_STATIC_KEY_SLOT_BUFFER_SIZE. By default it accommodates the\r\n     largest PSA key enabled in the build.\r\n   * MD module can now perform PSA dispatching also when\r\n     `MBEDTLS_PSA_CRYPTO_CLIENT && !MBEDTLS_PSA_CRYPTO_C`, even though this\r\n     configuration is not officially supported. This requires that a\r\n     PSA Crypto provider library which:\r\n     * supports the required `PSA_WANT_ALG_xxx` and\r\n     * implements `psa_can_do_hash()` on the client interface\r\n     is linked against Mbed TLS and that `psa_crypto_init()` is called before\r\n     performing any PSA call.\r\n\r\nSecurity\r\n   * Note that TLS clients should generally call mbedtls_ssl_set_hostname()\r\n     if they use certificate authentication (i.e. not pre-shared keys).\r\n     Otherwise, in many scenarios, the server could be impersonated.\r\n     The library will now prevent the handshake and return\r\n     MBEDTLS_ERR_SSL_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME\r\n     if mbedtls_ssl_set_hostname() has not been called.\r\n     Reported by Daniel Stenberg.\r\n     CVE-2025-27809\r\n   * Zeroize a temporary heap buffer used in psa_key_derivation_output_key()\r\n     when deriving an ECC key pair.\r\n   * Zeroize temporary heap buffers used in PSA operations.\r\n   * Fix a vulnerability in the TLS 1.2 handshake. If memory allocation failed\r\n     or there was a cryptographic hardware failure when calculating the\r\n     Finished message, it could be calculated incorrectly. This would break\r\n     the security guarantees of the TLS handshake.\r\n     CVE-2025-27810\r\n\r\nBugfix\r\n   * When MBEDTLS_SSL_TLS1_3_COMPATIBILITY_MODE is disabled, work with\r\n     peers that have middlebox compatibility enabled, as long as no\r\n     problematic middlebox is in the way. Fixes #9551.\r\n   * Fix invalid JSON schemas for driver descriptions used by\r\n     generate_driver_wrappers.py.\r\n   * Use 'mbedtls_net_close' instead of 'close' in 'mbedtls_net_bind'\r\n     and 'mbedtls_net_connect' to prevent possible double close fd\r\n     problems. Fixes #9711.\r\n   * Fix undefined behavior in some cases when mbedtls_psa_raw_to_der() or\r\n     mbedtls_psa_der_to_raw() is called with bits=0.\r\n   * Fix compilation on MS-DOS DJGPP. Fixes #9813.\r\n   * Fix missing constraints on the AES-NI inline assembly which is used on\r\n     GCC-like compilers when building AES for generic x86_64 targets. This\r\n     may have resulted in incorrect code with some compilers, depending on\r\n     optimizations. Fixes #9819.\r\n   * Support re-assembly of fragmented handshake messages in TLS (both\r\n     1.2 and 1.3). The lack of support was causing handshake failures with\r\n     some servers, especially with TLS 1.3 in practice. There are a few\r\n     limitations, notably a fragmented ClientHello is only supported when\r\n     TLS 1.3 support is enabled. See the documentation of\r\n     mbedtls_ssl_handshake() for details.\r\n   * Fix definition of MBEDTLS_PRINTF_SIZET to prevent runtime crashes that\r\n     occurred whenever SSL debugging was enabled on a copy of Mbed TLS built\r\n     with Visual Studio 2013 or MinGW.\r\n     Fixes #10017.\r\n   * Remove Everest Visual Studio 2010 compatibility headers, which could\r\n     shadow standard CRT headers inttypes.h and stdbool.h with incomplete\r\n     implementatios if placed on the include path, eg. when building Mbed TLS\r\n     with the .sln file shipped with the project.\r\n   * Fix issue where psa_key_derivation_input_integer() is not detecting\r\n     bad state after an operation has been aborted.\r\n\r\nChanges\r\n   * Improve performance of PSA key generation with ECC keys: it no longer\r\n     computes the public key (which was immediately discarded). Fixes #9732.\r\n \r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Note\r\n> :grey_exclamation: `mbedtls-3.6.3.tar.bz2` are our official release files. `source.tar.gz` and `source.zip` are automatically generated snapshot's that github is generating. They do not include external dependencies, and [can't be configured](https://github.com/orgs/community/discussions/6003)\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n64cd73842cdc05e101172f7b437c65e7312e476206e1dbfd644433d11bc56327 mbedtls-3.6.3.tar.bz2","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/207810687/reactions","total_count":6,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":5,"rocket":1,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/207807065","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/207807065/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/207807065/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-2.28.10","id":207807065,"author":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4MYuJZ","tag_name":"mbedtls-2.28.10","target_commitish":"mbedtls-2.28","name":"Mbed TLS 2.28.10","draft":false,"immutable":false,"prerelease":false,"created_at":"2025-03-21T13:55:48Z","updated_at":"2025-03-26T08:20:08Z","published_at":"2025-03-24T17:13:08Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/240283508","id":240283508,"node_id":"RA_kwDOAGYMwM4OUm90","name":"mbedtls-2.28.10-sha256sum.txt","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"text/plain","state":"uploaded","size":65,"digest":null,"download_count":33,"created_at":"2025-03-24T11:59:45Z","updated_at":"2025-03-24T11:59:45Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-2.28.10/mbedtls-2.28.10-sha256sum.txt"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/240283504","id":240283504,"node_id":"RA_kwDOAGYMwM4OUm9w","name":"mbedtls-2.28.10.tar.bz2","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-compressed","state":"uploaded","size":3489179,"digest":null,"download_count":4225,"created_at":"2025-03-24T11:59:41Z","updated_at":"2025-03-24T11:59:45Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-2.28.10/mbedtls-2.28.10.tar.bz2"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/mbedtls-2.28.10","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/mbedtls-2.28.10","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\n**Mbed TLS 2.28.10 is the last release of the 2.28 LTS and won't receive bug fixes or security fixes anymore.\r\nUsers are advised to upgrade to a maintained version.**\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following links:\r\n- [Potential authentication bypass in TLS handshake](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-03-2/)\r\n- [TLS clients should generally call mbedtls_ssl_set_hostname](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2025-03-1/)\r\n\r\n## Release Notes\r\n\r\nDefault behavior changes\r\n   * In TLS clients, if mbedtls_ssl_set_hostname() has not been called,\r\n     mbedtls_ssl_handshake() now fails with\r\n     MBEDTLS_ERR_SSL_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME\r\n     if certificate-based authentication of the server is attempted.\r\n     This is because authenticating a server without knowing what name\r\n     to expect is usually insecure. To restore the old behavior, either\r\n     call mbedtls_ssl_set_hostname() with NULL as the hostname, or\r\n     enable the new compile-time option\r\n     MBEDTLS_SSL_CLI_ALLOW_WEAK_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME.\r\n     The content of ssl->hostname after mbedtls_ssl_set_hostname(ssl, NULL)\r\n     has changed, see the documentation of the hostname field in the\r\n     mbedtls_ssl_context struct type for details.\r\n\r\nSecurity\r\n   * Note that TLS clients should generally call mbedtls_ssl_set_hostname()\r\n     if they use certificate authentication (i.e. not pre-shared keys).\r\n     Otherwise, in many scenarios, the server could be impersonated.\r\n     The library will now prevent the handshake and return\r\n     MBEDTLS_ERR_SSL_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME\r\n     if mbedtls_ssl_set_hostname() has not been called.\r\n     CVE-2025-27809\r\n   * Zeroize temporary heap buffers used in PSA operations.\r\n   * Fix a vulnerability in the TLS 1.2 handshake. If memory allocation failed\r\n     or there was a cryptographic hardware failure when calculating the\r\n     Finished message, it could be calculated incorrectly. This would break\r\n     the security guarantees of the TLS handshake.\r\n     CVE-2025-27810\r\n\r\nBugfix\r\n   * Use 'mbedtls_net_close' instead of 'close' in 'mbedtls_net_bind'\r\n     and 'mbedtls_net_connect' to prevent possible double close fd\r\n     problems. Fixes #9711.\r\n   * Fix compilation on MS-DOS DJGPP. Fixes #9813.\r\n   * Fix missing constraints on the AES-NI inline assembly which is used on\r\n     GCC-like compilers when building AES for generic x86_64 targets. This\r\n     may have resulted in incorrect code with some compilers, depending on\r\n     optimizations. Fixes #9819.\r\n   * Fix issue where psa_key_derivation_input_integer() is not detecting\r\n     bad state after an operation has been aborted.\r\n   * Fix definition of MBEDTLS_PRINTF_SIZET to prevent runtime crashes that\r\n     occurred whenever SSL debugging was enabled on a copy of Mbed TLS built\r\n     with Visual Studio 2013 or MinGW.\r\n     Fixes #10017.\r\n   * Remove Everest Visual Studio 2010 compatibility headers, which could\r\n     shadow standard CRT headers inttypes.h and stdbool.h with incomplete\r\n     implementatios if placed on the include path, eg. when building Mbed TLS\r\n     with the .sln file shipped with the project.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Note\r\n> :grey_exclamation: `mbedtls-2.28.10.tar.bz2` are our official release files. `source.tar.gz` and `source.zip` are automatically generated snapshot's that github is generating. They do not include external dependencies, and [can't be configured](https://github.com/orgs/community/discussions/6003)\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n19e5b81fdac0fe22009b9e2bdcd52d7dcafbf62bc67fc59cf0a76b5b5540d149 mbedtls-2.28.10.tar.bz2"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/179581869","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/179581869/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/179581869/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-3.6.2","id":179581869,"author":{"login":"davidhorstmann-arm","id":70948878,"node_id":"MDQ6VXNlcjcwOTQ4ODc4","avatar_url":"https://avatars.githubusercontent.com/u/70948878?v=4","gravatar_id":"","url":"https://api.github.com/users/davidhorstmann-arm","html_url":"https://github.com/davidhorstmann-arm","followers_url":"https://api.github.com/users/davidhorstmann-arm/followers","following_url":"https://api.github.com/users/davidhorstmann-arm/following{/other_user}","gists_url":"https://api.github.com/users/davidhorstmann-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/davidhorstmann-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidhorstmann-arm/subscriptions","organizations_url":"https://api.github.com/users/davidhorstmann-arm/orgs","repos_url":"https://api.github.com/users/davidhorstmann-arm/repos","events_url":"https://api.github.com/users/davidhorstmann-arm/events{/privacy}","received_events_url":"https://api.github.com/users/davidhorstmann-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4KtDOt","tag_name":"mbedtls-3.6.2","target_commitish":"development","name":"Mbed TLS 3.6.2","draft":false,"immutable":false,"prerelease":false,"created_at":"2024-10-14T13:31:01Z","updated_at":"2024-10-15T13:23:35Z","published_at":"2024-10-15T12:35:06Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/198989803","id":198989803,"node_id":"RA_kwDOAGYMwM4L3Ffr","name":"mbedtls-3.6.2-sha256sum.txt","label":null,"uploader":{"login":"davidhorstmann-arm","id":70948878,"node_id":"MDQ6VXNlcjcwOTQ4ODc4","avatar_url":"https://avatars.githubusercontent.com/u/70948878?v=4","gravatar_id":"","url":"https://api.github.com/users/davidhorstmann-arm","html_url":"https://github.com/davidhorstmann-arm","followers_url":"https://api.github.com/users/davidhorstmann-arm/followers","following_url":"https://api.github.com/users/davidhorstmann-arm/following{/other_user}","gists_url":"https://api.github.com/users/davidhorstmann-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/davidhorstmann-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidhorstmann-arm/subscriptions","organizations_url":"https://api.github.com/users/davidhorstmann-arm/orgs","repos_url":"https://api.github.com/users/davidhorstmann-arm/repos","events_url":"https://api.github.com/users/davidhorstmann-arm/events{/privacy}","received_events_url":"https://api.github.com/users/davidhorstmann-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"text/plain","state":"uploaded","size":65,"digest":null,"download_count":354,"created_at":"2024-10-14T13:23:14Z","updated_at":"2024-10-14T13:23:14Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.2/mbedtls-3.6.2-sha256sum.txt"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/198989799","id":198989799,"node_id":"RA_kwDOAGYMwM4L3Ffn","name":"mbedtls-3.6.2.tar.bz2","label":null,"uploader":{"login":"davidhorstmann-arm","id":70948878,"node_id":"MDQ6VXNlcjcwOTQ4ODc4","avatar_url":"https://avatars.githubusercontent.com/u/70948878?v=4","gravatar_id":"","url":"https://api.github.com/users/davidhorstmann-arm","html_url":"https://github.com/davidhorstmann-arm","followers_url":"https://api.github.com/users/davidhorstmann-arm/followers","following_url":"https://api.github.com/users/davidhorstmann-arm/following{/other_user}","gists_url":"https://api.github.com/users/davidhorstmann-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/davidhorstmann-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidhorstmann-arm/subscriptions","organizations_url":"https://api.github.com/users/davidhorstmann-arm/orgs","repos_url":"https://api.github.com/users/davidhorstmann-arm/repos","events_url":"https://api.github.com/users/davidhorstmann-arm/events{/privacy}","received_events_url":"https://api.github.com/users/davidhorstmann-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-bzip","state":"uploaded","size":4979769,"digest":null,"download_count":580136,"created_at":"2024-10-14T13:23:12Z","updated_at":"2024-10-14T13:23:14Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.2/mbedtls-3.6.2.tar.bz2"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/mbedtls-3.6.2","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/mbedtls-3.6.2","body":"## Description\r\n\r\nThis release of Mbed TLS provides the fix for a security vulnerability.\r\n\r\nMbed TLS 3.6 is a long-term support (LTS) branch. It will be supported with bug-fixes and security fixes until at least March 2027.\r\n\r\n## Security Advisories\r\nFor full details, please see the following links:\r\n\r\n- [Buffer underrun in pkwrite when writing an opaque key pair](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-10-1/)\r\n\r\n> :grey_exclamation: **Release notes are truncated in GitHub's releases page**: Please refer to the [3.6.2](https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-3.6.2) release page.\r\n\r\n## Release Notes\r\n\r\nSecurity\r\n   * Fix a buffer underrun in mbedtls_pk_write_key_der() when\r\n     called on an opaque key, MBEDTLS_USE_PSA_CRYPTO is enabled,\r\n     and the output buffer is smaller than the actual output.\r\n     Fix a related buffer underrun in mbedtls_pk_write_key_pem()\r\n     when called on an opaque RSA key, MBEDTLS_USE_PSA_CRYPTO is enabled\r\n     and MBEDTLS_MPI_MAX_SIZE is smaller than needed for a 4096-bit RSA key.\r\n     CVE-2024-49195\r\n \r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Note\r\n> :grey_exclamation: `mbedtls-3.6.2.tar.bz2` is our official release file. `source.tar.gz` and `source.zip` are automatically generated snapshots that github generates. They do not include external dependencies, and [can't be configured](https://github.com/orgs/community/discussions/6003)\r\n\r\n## Checksum\r\n\r\nThe SHA256 hash for the archive is:\r\n\r\n8b54fb9bcf4d5a7078028e0520acddefb7900b3e66fec7f7175bb5b7d85ccdca mbedtls-3.6.2.tar.bz2","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/179581869/reactions","total_count":5,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":3,"eyes":1}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/172639722","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/172639722/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/172639722/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-3.6.1","id":172639722,"author":{"login":"davidhorstmann-arm","id":70948878,"node_id":"MDQ6VXNlcjcwOTQ4ODc4","avatar_url":"https://avatars.githubusercontent.com/u/70948878?v=4","gravatar_id":"","url":"https://api.github.com/users/davidhorstmann-arm","html_url":"https://github.com/davidhorstmann-arm","followers_url":"https://api.github.com/users/davidhorstmann-arm/followers","following_url":"https://api.github.com/users/davidhorstmann-arm/following{/other_user}","gists_url":"https://api.github.com/users/davidhorstmann-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/davidhorstmann-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidhorstmann-arm/subscriptions","organizations_url":"https://api.github.com/users/davidhorstmann-arm/orgs","repos_url":"https://api.github.com/users/davidhorstmann-arm/repos","events_url":"https://api.github.com/users/davidhorstmann-arm/events{/privacy}","received_events_url":"https://api.github.com/users/davidhorstmann-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4KSkXq","tag_name":"mbedtls-3.6.1","target_commitish":"mbedtls-3.6","name":"Mbed TLS 3.6.1","draft":false,"immutable":false,"prerelease":false,"created_at":"2024-08-30T09:17:48Z","updated_at":"2024-09-04T10:04:54Z","published_at":"2024-08-30T13:16:07Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/189350174","id":189350174,"node_id":"RA_kwDOAGYMwM4LSUEe","name":"mbedtls-3.6.1-sha256sum.txt","label":null,"uploader":{"login":"davidhorstmann-arm","id":70948878,"node_id":"MDQ6VXNlcjcwOTQ4ODc4","avatar_url":"https://avatars.githubusercontent.com/u/70948878?v=4","gravatar_id":"","url":"https://api.github.com/users/davidhorstmann-arm","html_url":"https://github.com/davidhorstmann-arm","followers_url":"https://api.github.com/users/davidhorstmann-arm/followers","following_url":"https://api.github.com/users/davidhorstmann-arm/following{/other_user}","gists_url":"https://api.github.com/users/davidhorstmann-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/davidhorstmann-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidhorstmann-arm/subscriptions","organizations_url":"https://api.github.com/users/davidhorstmann-arm/orgs","repos_url":"https://api.github.com/users/davidhorstmann-arm/repos","events_url":"https://api.github.com/users/davidhorstmann-arm/events{/privacy}","received_events_url":"https://api.github.com/users/davidhorstmann-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"text/plain","state":"uploaded","size":65,"digest":null,"download_count":90,"created_at":"2024-08-30T12:07:22Z","updated_at":"2024-08-30T12:07:22Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.1/mbedtls-3.6.1-sha256sum.txt"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/189350170","id":189350170,"node_id":"RA_kwDOAGYMwM4LSUEa","name":"mbedtls-3.6.1.tar.bz2","label":null,"uploader":{"login":"davidhorstmann-arm","id":70948878,"node_id":"MDQ6VXNlcjcwOTQ4ODc4","avatar_url":"https://avatars.githubusercontent.com/u/70948878?v=4","gravatar_id":"","url":"https://api.github.com/users/davidhorstmann-arm","html_url":"https://github.com/davidhorstmann-arm","followers_url":"https://api.github.com/users/davidhorstmann-arm/followers","following_url":"https://api.github.com/users/davidhorstmann-arm/following{/other_user}","gists_url":"https://api.github.com/users/davidhorstmann-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/davidhorstmann-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidhorstmann-arm/subscriptions","organizations_url":"https://api.github.com/users/davidhorstmann-arm/orgs","repos_url":"https://api.github.com/users/davidhorstmann-arm/repos","events_url":"https://api.github.com/users/davidhorstmann-arm/events{/privacy}","received_events_url":"https://api.github.com/users/davidhorstmann-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-bzip","state":"uploaded","size":4977592,"digest":null,"download_count":150890,"created_at":"2024-08-30T12:07:18Z","updated_at":"2024-08-30T12:07:22Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-3.6.1/mbedtls-3.6.1.tar.bz2"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/mbedtls-3.6.1","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/mbedtls-3.6.1","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nMbed TLS 3.6 is a long-term support (LTS) branch. It will be supported with bug-fixes and security fixes until at least March 2027.\r\n\r\n## Security Advisories\r\nFor full details, please see the following links:\r\n\r\n- [`CTR_DRBG` prioritized over `HMAC_DRBG` as the PSA DRBG](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-08-1/)\r\n- [Stack buffer overflow in ECDSA signature conversion functions](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-08-2/)\r\n- [Limited authentication bypass in TLS 1.3 optional client authentication](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-08-3/)\r\n\r\n> :grey_exclamation: **Release notes are truncated in GitHub's releases page**: Please refer to the [3.6.1](https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-3.6.1) release page.\r\n\r\n## Release Notes\r\n\r\nAPI changes\r\n   * The experimental functions psa_generate_key_ext() and\r\n     psa_key_derivation_output_key_ext() are no longer declared when compiling\r\n     in C++. This resolves a build failure under C++ compilers that do not\r\n     support flexible array members (a C99 feature not adopted by C++).\r\n     Fixes #9020.\r\n\r\nDefault behavior changes\r\n   * In a PSA-client-only build (i.e. MBEDTLS_PSA_CRYPTO_CLIENT &&\r\n     !MBEDTLS_PSA_CRYPTO_C), do not automatically enable local crypto when the\r\n     corresponding PSA mechanism is enabled, since the server provides the\r\n     crypto. Fixes #9126.\r\n   * A TLS handshake may now call psa_crypto_init() if TLS 1.3 is enabled.\r\n     This can happen even if TLS 1.3 is offered but eventually not selected\r\n     in the protocol version negotiation.\r\n   * By default, the handling of TLS 1.3 tickets by the Mbed TLS client is now\r\n     disabled at runtime. Applications that were using TLS 1.3 tickets\r\n     signalled by MBEDTLS_ERR_SSL_RECEIVED_NEW_SESSION_TICKET return values now\r\n     need to enable the handling of TLS 1.3 tickets through the new\r\n     mbedtls_ssl_conf_tls13_enable_signal_new_session_tickets() API.\r\n\r\nNew deprecations\r\n   * The experimental functions psa_generate_key_ext() and\r\n     psa_key_derivation_output_key_ext() are deprecated in favor of\r\n     psa_generate_key_custom() and psa_key_derivation_output_key_custom().\r\n     They have almost exactly the same interface, but the variable-length\r\n     data is passed in a separate parameter instead of a flexible array\r\n     member.\r\n   * The following cryptographic mechanisms are planned to be removed\r\n     in Mbed TLS 4.0:\r\n     - DES (including 3DES).\r\n     - PKCS#1v1.5 encryption/decryption (RSAES-PKCS1-v1_5).\r\n       (OAEP, PSS, and PKCS#1v1.5 signature are staying.)\r\n     - Finite-field Diffie-Hellman with custom groups.\r\n       (RFC 7919 groups remain supported.)\r\n     - Elliptic curves of size 225 bits or less.\r\n   * The following cipher suites are planned to be removed from (D)TLS 1.2\r\n     in Mbed TLS 4.0:\r\n     - TLS_RSA_* (including TLS_RSA_PSK_*), i.e. cipher suites using\r\n       RSA decryption.\r\n       (RSA signatures, i.e. TLS_ECDHE_RSA_*, are staying.)\r\n     - TLS_ECDH_*, i.e. cipher suites using static ECDH.\r\n       (Ephemeral ECDH, i.e. TLS_ECDHE_*, is staying.)\r\n     - TLS_DHE_*, i.e. cipher suites using finite-field Diffie-Hellman.\r\n       (Ephemeral ECDH, i.e. TLS_ECDHE_*, is staying.)\r\n     - TLS_*CBC*, i.e. all cipher suites using CBC.\r\n   * The following low-level application interfaces are planned to be removed\r\n     from the public API in Mbed TLS 4.0:\r\n     - Hashes: hkdf.h, md5.h, ripemd160.h, sha1.h, sha3.h, sha256.h, sha512.h;\r\n     - Random generation: ctr_drbg.h, hmac_drbg.h, entropy.h;\r\n     - Ciphers and modes: aes.h, aria.h, camellia.h, chacha20.h, chachapoly.h,\r\n       cipher.h, cmac.h, gcm.h, poly1305.h;\r\n     - Private key encryption mechanisms: pkcs5.h, pkcs12.h.\r\n     - Asymmetric cryptography: bignum.h, dhm.h, ecdh.h, ecdsa.h, ecjpake.h,\r\n       ecp.h, rsa.h.\r\n     The cryptographic mechanisms remain present, but they will only be\r\n     accessible via the PSA API (psa_xxx functions introduced gradually\r\n     starting with Mbed TLS 2.17) and, where relevant, `pk.h`.\r\n     For guidance on migrating application code to the PSA API, please consult\r\n     the PSA transition guide (docs/psa-transition.md).\r\n   * The following integration interfaces are planned to be removed\r\n     in Mbed TLS 4.0:\r\n     - MBEDTLS_xxx_ALT replacement of cryptographic modules and functions.\r\n       Use PSA transparent drivers instead.\r\n     - MBEDTLS_PK_RSA_ALT and MBEDTLS_PSA_CRYPTO_SE_C.\r\n       Use PSA opaque drivers instead.\r\n\r\nFeatures\r\n   * When the new compilation option MBEDTLS_PSA_KEY_STORE_DYNAMIC is enabled,\r\n     the number of volatile PSA keys is virtually unlimited, at the expense\r\n     of increased code size. This option is off by default, but enabled in\r\n     the default mbedtls_config.h. Fixes #9216.\r\n\r\nSecurity\r\n   * Unlike previously documented, enabling MBEDTLS_PSA_HMAC_DRBG_MD_TYPE does\r\n     not cause the PSA subsystem to use HMAC_DRBG: it uses HMAC_DRBG only when\r\n     MBEDTLS_PSA_CRYPTO_EXTERNAL_RNG and MBEDTLS_CTR_DRBG_C are disabled.\r\n     CVE-2024-45157\r\n   * Fix a stack buffer overflow in mbedtls_ecdsa_der_to_raw() and\r\n     mbedtls_ecdsa_raw_to_der() when the bits parameter is larger than the\r\n     largest supported curve. In some configurations with PSA disabled,\r\n     all values of bits are affected. This never happens in internal library\r\n     calls, but can affect applications that call these functions directly.\r\n     CVE-2024-45158\r\n   * With TLS 1.3, when a server enables optional authentication of the\r\n     client, if the client-provided certificate does not have appropriate values\r\n     in keyUsage or extKeyUsage extensions, then the return value of\r\n     mbedtls_ssl_get_verify_result() would incorrectly have the\r\n     MBEDTLS_X509_BADCERT_KEY_USAGE and MBEDTLS_X509_BADCERT_EXT_KEY_USAGE bits\r\n     clear. As a result, an attacker that had a certificate valid for uses other\r\n     than TLS client authentication could be able to use it for TLS client\r\n     authentication anyway. Only TLS 1.3 servers were affected, and only with\r\n     optional authentication (required would abort the handshake with a fatal\r\n     alert).\r\n     CVE-2024-45159\r\n\r\nBugfix\r\n   * Fix TLS 1.3 client build and runtime when support for session tickets is\r\n     disabled (MBEDTLS_SSL_SESSION_TICKETS configuration option). Fixes #6395.\r\n   * Fix compilation error when memcpy() is a function-like macros. Fixes #8994.\r\n   * MBEDTLS_ASN1_PARSE_C and MBEDTLS_ASN1_WRITE_C are now automatically enabled\r\n     as soon as MBEDTLS_RSA_C is enabled. Fixes #9041.\r\n   * Fix undefined behaviour (incrementing a NULL pointer by zero length) when\r\n     passing in zero length additional data to multipart AEAD.\r\n   * Fix rare concurrent access bug where attempting to operate on a\r\n     non-existent key while concurrently creating a new key could potentially\r\n     corrupt the key store.\r\n   * Fix error handling when creating a key in a dynamic secure element\r\n     (feature enabled by MBEDTLS_PSA_CRYPTO_SE_C). In a low memory condition,\r\n     the creation could return PSA_SUCCESS but using or destroying the key\r\n     would not work. Fixes #8537.\r\n   * Fix issue of redefinition warning messages for _GNU_SOURCE in\r\n     entropy_poll.c and sha_256.c. There was a build warning during\r\n     building for linux platform.\r\n     Resolves #9026\r\n   * Fix a compilation warning in pk.c when PSA is enabled and RSA is disabled.\r\n   * Fix the build when MBEDTLS_PSA_CRYPTO_CONFIG is enabled and the built-in\r\n     CMAC is enabled, but no built-in unauthenticated cipher is enabled.\r\n     Fixes #9209.\r\n   * Fix redefinition warnings when SECP192R1 and/or SECP192K1 are disabled.\r\n     Fixes #9029.\r\n   * Fix psa_cipher_decrypt() with CCM* rejecting messages less than 3 bytes\r\n     long. Credit to Cryptofuzz. Fixes #9314.\r\n   * Fix interference between PSA volatile keys and built-in keys\r\n     when MBEDTLS_PSA_CRYPTO_BUILTIN_KEYS is enabled and\r\n     MBEDTLS_PSA_KEY_SLOT_COUNT is more than 4096.\r\n   * Document and enforce the limitation of mbedtls_psa_register_se_key()\r\n     to persistent keys. Resolves #9253.\r\n   * Fix Clang compilation error when MBEDTLS_USE_PSA_CRYPTO is enabled\r\n     but MBEDTLS_DHM_C is disabled. Reported by Michael Schuster in #9188.\r\n   * Fix server mode only build when MBEDTLS_SSL_SRV_C is enabled but\r\n     MBEDTLS_SSL_CLI_C is disabled. Reported by M-Bab on GitHub in #9186.\r\n   * When MBEDTLS_PSA_CRYPTO_C was disabled and MBEDTLS_ECDSA_C enabled,\r\n     some code was defining 0-size arrays, resulting in compilation errors.\r\n     Fixed by disabling the offending code in configurations without PSA\r\n     Crypto, where it never worked. Fixes #9311.\r\n   * Fix unintended performance regression when using short RSA public keys.\r\n     Fixes #9232.\r\n   * Fixes an issue where some TLS 1.2 clients could not connect to an\r\n     Mbed TLS 3.6.0 server, due to incorrect handling of\r\n     legacy_compression_methods in the ClientHello.\r\n     Fixes #8995, #9243.\r\n   * Fix TLS connections failing when the handshake selects TLS 1.3\r\n     in an application that does not call psa_crypto_init().\r\n     Fixes #9072.\r\n   * Fix TLS connection failure in applications using an Mbed TLS client in\r\n     the default configuration connecting to a TLS 1.3 server sending tickets.\r\n     See the documentation of\r\n     mbedtls_ssl_conf_tls13_enable_signal_new_session_tickets() for more\r\n     information.\r\n     Fixes #8749.\r\n   * Fix a memory leak that could occur when failing to process an RSA\r\n     key through some PSA functions due to low memory conditions.\r\n   * Fixed a regression introduced in 3.6.0 where the CA callback set with\r\n     mbedtls_ssl_conf_ca_cb() would stop working when connections were\r\n     upgraded to TLS 1.3. Fixed by adding support for the CA callback with TLS\r\n     1.3.\r\n   * Fixed a regression introduced in 3.6.0 where clients that relied on\r\n     optional/none authentication mode, by calling mbedtls_ssl_conf_authmode()\r\n     with MBEDTLS_SSL_VERIFY_OPTIONAL or MBEDTLS_SSL_VERIFY_NONE, would stop\r\n     working when connections were upgraded to TLS 1.3. Fixed by adding\r\n     support for optional/none with TLS 1.3 as well. Note that the TLS 1.3\r\n     standard makes server authentication mandatory; users are advised not to\r\n     use authmode none, and to carefully check the results when using optional\r\n     mode.\r\n   * Fixed a regression introduced in 3.6.0 where context-specific certificate\r\n     verify callbacks, set with mbedtls_ssl_set_verify() as opposed to\r\n     mbedtls_ssl_conf_verify(), would stop working when connections were\r\n     upgraded to TLS 1.3. Fixed by adding support for context-specific verify\r\n     callback in TLS 1.3.\r\n\r\nChanges\r\n   * Warn if mbedtls/check_config.h is included manually, as this can\r\n     lead to spurious errors. Error if a *adjust*.h header is included\r\n     manually, as this can lead to silently inconsistent configurations,\r\n     potentially resulting in buffer overflows.\r\n     When migrating from Mbed TLS 2.x, if you had a custom config.h that\r\n     included check_config.h, remove this inclusion from the Mbed TLS 3.x\r\n     configuration file (renamed to mbedtls_config.h). This change was made\r\n     in Mbed TLS 3.0, but was not announced in a changelog entry at the time.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Note\r\n> :grey_exclamation: `mbedtls-3.6.1.tar.bz2` are our official release files. `source.tar.gz` and `source.zip` are automatically generated snapshot's that github is generating. They do not include external dependencies, and [can't be configured](https://github.com/orgs/community/discussions/6003)\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\nfc8bef0991b43629b7e5319de6f34f13359011105e08e3e16eed3a9fe6ffd3a3 mbedtls-3.6.1.tar.bz2","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/172639722/reactions","total_count":5,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":1}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/172638472","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/172638472/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/172638472/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-2.28.9","id":172638472,"author":{"login":"davidhorstmann-arm","id":70948878,"node_id":"MDQ6VXNlcjcwOTQ4ODc4","avatar_url":"https://avatars.githubusercontent.com/u/70948878?v=4","gravatar_id":"","url":"https://api.github.com/users/davidhorstmann-arm","html_url":"https://github.com/davidhorstmann-arm","followers_url":"https://api.github.com/users/davidhorstmann-arm/followers","following_url":"https://api.github.com/users/davidhorstmann-arm/following{/other_user}","gists_url":"https://api.github.com/users/davidhorstmann-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/davidhorstmann-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidhorstmann-arm/subscriptions","organizations_url":"https://api.github.com/users/davidhorstmann-arm/orgs","repos_url":"https://api.github.com/users/davidhorstmann-arm/repos","events_url":"https://api.github.com/users/davidhorstmann-arm/events{/privacy}","received_events_url":"https://api.github.com/users/davidhorstmann-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4KSkEI","tag_name":"mbedtls-2.28.9","target_commitish":"mbedtls-2.28","name":"Mbed TLS 2.28.9","draft":false,"immutable":false,"prerelease":false,"created_at":"2024-08-29T16:55:43Z","updated_at":"2024-08-30T13:46:43Z","published_at":"2024-08-30T13:15:19Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/189350048","id":189350048,"node_id":"RA_kwDOAGYMwM4LSUCg","name":"mbedtls-2.28.9-sha256sum.txt","label":null,"uploader":{"login":"davidhorstmann-arm","id":70948878,"node_id":"MDQ6VXNlcjcwOTQ4ODc4","avatar_url":"https://avatars.githubusercontent.com/u/70948878?v=4","gravatar_id":"","url":"https://api.github.com/users/davidhorstmann-arm","html_url":"https://github.com/davidhorstmann-arm","followers_url":"https://api.github.com/users/davidhorstmann-arm/followers","following_url":"https://api.github.com/users/davidhorstmann-arm/following{/other_user}","gists_url":"https://api.github.com/users/davidhorstmann-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/davidhorstmann-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidhorstmann-arm/subscriptions","organizations_url":"https://api.github.com/users/davidhorstmann-arm/orgs","repos_url":"https://api.github.com/users/davidhorstmann-arm/repos","events_url":"https://api.github.com/users/davidhorstmann-arm/events{/privacy}","received_events_url":"https://api.github.com/users/davidhorstmann-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"text/plain","state":"uploaded","size":65,"digest":null,"download_count":53,"created_at":"2024-08-30T12:06:30Z","updated_at":"2024-08-30T12:06:30Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-2.28.9/mbedtls-2.28.9-sha256sum.txt"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/189350042","id":189350042,"node_id":"RA_kwDOAGYMwM4LSUCa","name":"mbedtls-2.28.9.tar.bz2","label":null,"uploader":{"login":"davidhorstmann-arm","id":70948878,"node_id":"MDQ6VXNlcjcwOTQ4ODc4","avatar_url":"https://avatars.githubusercontent.com/u/70948878?v=4","gravatar_id":"","url":"https://api.github.com/users/davidhorstmann-arm","html_url":"https://github.com/davidhorstmann-arm","followers_url":"https://api.github.com/users/davidhorstmann-arm/followers","following_url":"https://api.github.com/users/davidhorstmann-arm/following{/other_user}","gists_url":"https://api.github.com/users/davidhorstmann-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/davidhorstmann-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidhorstmann-arm/subscriptions","organizations_url":"https://api.github.com/users/davidhorstmann-arm/orgs","repos_url":"https://api.github.com/users/davidhorstmann-arm/repos","events_url":"https://api.github.com/users/davidhorstmann-arm/events{/privacy}","received_events_url":"https://api.github.com/users/davidhorstmann-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/x-bzip","state":"uploaded","size":3357068,"digest":null,"download_count":62628,"created_at":"2024-08-30T12:06:27Z","updated_at":"2024-08-30T12:06:30Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/mbedtls-2.28.9/mbedtls-2.28.9.tar.bz2"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/mbedtls-2.28.9","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/mbedtls-2.28.9","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nMbed TLS 2.28 is a long-time support branch. It will be supported with bug-fixes and security fixes until end of 2024.\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following links:\r\n- [`CTR_DRBG` prioritized over `HMAC_DRBG` as the PSA DRBG](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-08-1/)\r\n\r\n## Release Notes\r\n\r\nSecurity\r\n   * Unlike previously documented, enabling MBEDTLS_PSA_HMAC_DRBG_MD_TYPE does\r\n     not cause the PSA subsystem to use HMAC_DRBG: it uses HMAC_DRBG only when\r\n     MBEDTLS_PSA_CRYPTO_EXTERNAL_RNG and MBEDTLS_CTR_DRBG_C are disabled.\r\n     CVE-2024-45157\r\n\r\nBugfix\r\n   * Fix the build in some configurations when check_config.h is not included.\r\n     Fix #9152.\r\n   * Fix issue of redefinition warning messages for _GNU_SOURCE in\r\n     entropy_poll.c and sha_256.c. There was a build warning during\r\n     building for linux platform.\r\n     Resolves #9026\r\n   * Fix error handling when creating a key in a dynamic secure element\r\n     (feature enabled by MBEDTLS_PSA_CRYPTO_SE_C). In a low memory condition,\r\n     the creation could return PSA_SUCCESS but using or destroying the key\r\n     would not work. Fixes #8537.\r\n   * Fix a memory leak that could occur when failing to process an RSA\r\n     key through some PSA functions due to low memory conditions.\r\n   * Document and enforce the limitation of mbedtls_psa_register_se_key()\r\n     to persistent keys. Resolves #9253.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Note\r\n> :grey_exclamation: `mbedtls-2.28.9.tar.bz2` are our official release files. `source.tar.gz` and `source.zip` are automatically generated snapshot's that github is generating. They do not include external dependencies, and [can't be configured](https://github.com/orgs/community/discussions/6003)\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\ne85ea97aaf78dd6c0a5ba2e54dd5932ffa15f39abfc189c26beef7684630c02b mbedtls-2.28.9.tar.bz2","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/172638472/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/148843401","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/148843401/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/148843401/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.6.0","id":148843401,"author":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4I3yuJ","tag_name":"v3.6.0","target_commitish":"development","name":"Mbed TLS 3.6.0 LTS","draft":false,"immutable":false,"prerelease":false,"created_at":"2024-03-27T16:16:21Z","updated_at":"2024-04-29T18:00:38Z","published_at":"2024-03-28T15:05:10Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/159107006","id":159107006,"node_id":"RA_kwDOAGYMwM4Je8e-","name":"mbedtls-3.6.0.tar.bz2","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/octet-stream","state":"uploaded","size":4811255,"digest":null,"download_count":554429,"created_at":"2024-03-28T14:41:22Z","updated_at":"2024-03-28T14:41:24Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/v3.6.0/mbedtls-3.6.0.tar.bz2"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v3.6.0","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v3.6.0","body":"## Description\r\n\r\nThis release of Mbed TLS provides new features, bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nThis release brings in improved multithreaded operations, record-size-limit, and early-data support and other TLS1.3 improvements. TLS1.3 support is now enabled by default.\r\n\r\n## Long-term support\r\n\r\nMbed TLS 3.6 is a long-term support (LTS) branch. It will be supported with bug-fixes and security fixes until at least March 2027.\r\n\r\n## Security Advisories\r\nFor full details, please see the following link:\r\n\r\n- [PSA Crypto API with parameters in shared memory\r\n](https://github.com/Mbed-TLS/mbedtls-docs/blob/main/security-advisories/mbedtls-security-advisory-2024-03.md)\r\n\r\n> :grey_exclamation: **Release notes are trunctuated in GitHub's releases page**: Please refer to the [3.6.0](https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.6.0) release page.\r\n\r\n## Release Notes\r\n\r\nAPI changes\r\n   * Remove `tls13_` in mbedtls_ssl_tls13_conf_early_data() and\r\n     mbedtls_ssl_tls13_conf_max_early_data_size() API names. Early data\r\n     feature may not be TLS 1.3 specific in the future. Fixes #6909.\r\n\r\nDefault behavior changes\r\n   * psa_import_key() now only accepts RSA keys in the PSA standard formats.\r\n     The undocumented ability to import other formats (PKCS#8, SubjectPublicKey,\r\n     PEM) accepted by the pkparse module has been removed. Applications that\r\n     need these formats can call mbedtls_pk_parse_{public,}key() followed by\r\n     mbedtls_pk_import_into_psa().\r\n\r\nRequirement changes\r\n   * Drop support for Visual Studio 2013 and 2015, and Arm Compiler 5.\r\n\r\nNew deprecations\r\n   * Rename the MBEDTLS_SHA256_USE_A64_CRYPTO_xxx config options to\r\n     MBEDTLS_SHA256_USE_ARMV8_A_CRYPTO_xxx. The old names may still\r\n     be used, but are deprecated.\r\n   * In the PSA API, domain parameters are no longer used for anything.\r\n     They are deprecated and will be removed in a future version of the\r\n     library.\r\n   * mbedtls_ecp_write_key() is deprecated in favor of\r\n     mbedtls_ecp_write_key_ext().\r\n\r\nRemovals\r\n   * In the PSA API, the experimental way to encode the public exponent of\r\n     an RSA key as a domain parameter is no longer supported. Use\r\n     psa_generate_key_ext() instead.\r\n   * Temporary function mbedtls_pk_wrap_as_opaque() is removed. To mimic the\r\n     same behavior mbedtls_pk_get_psa_attributes() and\r\n     mbedtls_pk_import_into_psa() can be used to import a PK key into PSA,\r\n     while mbedtls_pk_setup_opaque() can be used to wrap a PSA key into a opaque\r\n     PK context.\r\n\r\nFeatures\r\n   * Added an example program showing how to hash with the PSA API.\r\n   * Support Armv8-A Crypto Extension acceleration for SHA-256\r\n     when compiling for Thumb (T32) or 32-bit Arm (A32).\r\n   * AES-NI is now supported in Windows builds with clang and clang-cl.\r\n     Resolves #8372.\r\n   * Add new mbedtls_x509_csr_parse_der_with_ext_cb() routine which allows\r\n     parsing unsupported certificate extensions via user provided callback.\r\n   * Enable the new option MBEDTLS_BLOCK_CIPHER_NO_DECRYPT to omit\r\n     the decryption direction of block ciphers (AES, ARIA, Camellia).\r\n     This affects both the low-level modules and the high-level APIs\r\n     (the cipher and PSA interfaces). This option is incompatible with modes\r\n     that use the decryption direction (ECB in PSA, CBC, XTS, KW) and with DES.\r\n   * Support use of Armv8-A Cryptographic Extensions for hardware acclerated\r\n     AES when compiling for Thumb (T32) or 32-bit Arm (A32).\r\n   * If a cipher or AEAD mechanism has a PSA driver, you can now build the\r\n     library without the corresponding built-in implementation. Generally\r\n     speaking that requires both the key type and algorithm to be accelerated\r\n     or they'll both be built in. However, for CCM and GCM the built-in\r\n     implementation is able to take advantage of a driver that only\r\n     accelerates the key type (that is, the block cipher primitive). See\r\n     docs/driver-only-builds.md for full details and current limitations.\r\n   * The CTR_DRBG module will now use AES from a PSA driver if MBEDTLS_AES_C is\r\n     disabled. This requires PSA_WANT_ALG_ECB_NO_PADDING in addition to\r\n     MBEDTLS_PSA_CRYPTO_C and PSA_WANT_KEY_TYPE_AES.\r\n   * Fewer modules depend on MBEDTLS_CIPHER_C, making it possible to save code\r\n     size by disabling it in more circumstances. In particular, the CCM and\r\n     GCM modules no longer depend on MBEDTLS_CIPHER_C. Also,\r\n     MBEDTLS_PSA_CRYPTO can now be enabled without MBEDTLS_CIPHER_C if all\r\n     unauthenticated (non-AEAD) ciphers are disabled, or if they're all\r\n     fully provided by drivers. See docs/driver-only-builds.md for full\r\n     details and current limitations; in particular, NIST_KW and PKCS5/PKCS12\r\n     decryption still unconditionally depend on MBEDTLS_CIPHER_C.\r\n   * Add support for record size limit extension as defined by RFC 8449\r\n     and configured with MBEDTLS_SSL_RECORD_SIZE_LIMIT.\r\n     Application data sent and received will be fragmented according to\r\n     Record size limits negotiated during handshake.\r\n   * Improve performance of AES-GCM, AES-CTR and CTR-DRBG when\r\n     hardware accelerated AES is not present (around 13-23% on 64-bit Arm).\r\n   * Add functions mbedtls_ecc_group_to_psa() and mbedtls_ecc_group_from_psa()\r\n     to convert between Mbed TLS and PSA curve identifiers.\r\n   * Add utility functions to manipulate mbedtls_ecp_keypair objects, filling\r\n     gaps made by making its fields private: mbedtls_ecp_set_public_key(),\r\n     mbedtls_ecp_write_public_key(), mbedtls_ecp_keypair_calc_public(),\r\n     mbedtls_ecp_keypair_get_group_id(). Fixes #5017, #5441, #8367, #8652.\r\n   * Add functions mbedtls_md_psa_alg_from_type() and\r\n     mbedtls_md_type_from_psa_alg() to convert between mbedtls_md_type_t and\r\n     psa_algorithm_t.\r\n   * Add partial platform support for z/OS.\r\n   * Improve performance for gcc (versions older than 9.3.0) and IAR.\r\n   * Add functions mbedtls_ecdsa_raw_to_der() and mbedtls_ecdsa_der_to_raw() to\r\n     convert ECDSA signatures between raw and DER (ASN.1) formats.\r\n   * Add support for using AES-CBC 128, 192, and 256 bit schemes\r\n     with PKCS#5 PBES2. Keys encrypted this way can now be parsed by PK parse.\r\n   * The new function mbedtls_rsa_get_bitlen() returns the length of the modulus\r\n     in bits, i.e. the key size for an RSA key.\r\n   * Add pc files for pkg-config, e.g.:\r\n     pkg-config --cflags --libs (mbedtls|mbedcrypto|mbedx509)\r\n   * Add getter (mbedtls_ssl_session_get_ticket_creation_time()) to access\r\n     `mbedtls_ssl_session.ticket_creation_time`.\r\n   * The new functions mbedtls_pk_get_psa_attributes() and\r\n     mbedtls_pk_import_into_psa() provide a uniform way to create a PSA\r\n     key from a PK key.\r\n   * The benchmark program now reports times for both ephemeral and static\r\n     ECDH in all ECDH configurations.\r\n   * Add support for 8-bit GCM tables for Shoup's algorithm to speedup GCM\r\n     operations when hardware accelerated AES is not present. Improves\r\n     performance by around 30% on 64-bit Intel; 125% on Armv7-M.\r\n   * The new function psa_generate_key_ext() allows generating an RSA\r\n     key pair with a custom public exponent.\r\n   * The new function mbedtls_ecp_write_key_ext() is similar to\r\n     mbedtls_ecp_write_key(), but can be used without separately calculating\r\n     the output length.\r\n   * Add new accessor to expose the private group id member of\r\n     `mbedtls_ecdh_context` structure.\r\n   * Add new accessor to expose the `MBEDTLS_PRIVATE(ca_istrue)` member of\r\n     `mbedtls_x509_crt` structure. This requires setting\r\n     the MBEDTLS_X509_EXT_BASIC_CONSTRAINTS bit in the certificate's\r\n     ext_types field.\r\n   * mbedtls_psa_get_random() is always available as soon as\r\n     MBEDTLS_PSA_CRYPTO_CLIENT is enabled at build time and psa_crypto_init() is\r\n     called at runtime. This together with MBEDTLS_PSA_RANDOM_STATE can be\r\n     used as random number generator function (f_rng) and context (p_rng) in\r\n     legacy functions.\r\n   * The new functions mbedtls_pk_copy_from_psa() and\r\n     mbedtls_pk_copy_public_from_psa() provide ways to set up a PK context\r\n     with the same content as a PSA key.\r\n   * Add new accessors to expose the private session-id,\r\n     session-id length, and ciphersuite-id members of\r\n     `mbedtls_ssl_session` structure.\r\n     Add new accessor to expose the ciphersuite-id of\r\n     `mbedtls_ssl_ciphersuite_t` structure.Design ref: #8529\r\n   * Mbed TLS now supports the writing and reading of TLS 1.3 early data (see\r\n     docs/tls13-early-data.md). The support enablement is controlled at build\r\n     time by the MBEDTLS_SSL_EARLY_DATA configuration option and at runtime by\r\n     the mbedtls_ssl_conf_early_data() API (by default disabled in both cases).\r\n   * Add protection for multithreaded access to the PSA keystore and protection\r\n     for multithreaded access to the the PSA global state, including\r\n     concurrently calling psa_crypto_init() when MBEDTLS_THREADING_C and\r\n     MBEDTLS_THREADING_PTHREAD are defined. See\r\n     docs/architecture/psa-thread-safety/psa-thread-safety.md for more details.\r\n     Resolves issues #3263 and #7945.\r\n\r\nSecurity\r\n   * Fix a stack buffer overread (less than 256 bytes) when parsing a TLS 1.3\r\n     ClientHello in a TLS 1.3 server supporting some PSK key exchange mode. A\r\n     malicious client could cause information disclosure or a denial of service.\r\n   * Passing buffers that are stored in untrusted memory as arguments\r\n     to PSA functions is now secure by default.\r\n     The PSA core now protects against modification of inputs or exposure\r\n     of intermediate outputs during operations. This is currently implemented\r\n     by copying buffers.\r\n     This feature increases code size and memory usage. If buffers passed to\r\n     PSA functions are owned exclusively by the PSA core for the duration of\r\n     the function call (i.e. no buffer parameters are in shared memory),\r\n     copying may be disabled by setting MBEDTLS_PSA_ASSUME_EXCLUSIVE_BUFFERS.\r\n     Note that setting this option will cause input-output buffer overlap to\r\n     be only partially supported (#3266).\r\n     Fixes CVE-2024-28960.\r\n   * Restore the maximum TLS version to be negotiated to the configured one\r\n     when an SSL context is reset with the mbedtls_ssl_session_reset() API.\r\n     An attacker was able to prevent an Mbed TLS server from establishing any\r\n     TLS 1.3 connection potentially resulting in a Denial of Service or forced\r\n     version downgrade from TLS 1.3 to TLS 1.2. Fixes #8654 reported by hey3e.\r\n     Fixes CVE-2024-28755.\r\n   * When negotiating TLS version on server side, do not fall back to the\r\n     TLS 1.2 implementation of the protocol if it is disabled.\r\n     - If the TLS 1.2 implementation was disabled at build time, a TLS 1.2\r\n       client could put the TLS 1.3-only server in an infinite loop processing\r\n       a TLS 1.2 ClientHello, resulting in a denial of service. Reported by\r\n       Matthias Mucha and Thomas Blattmann, SICK AG.\r\n     - If the TLS 1.2 implementation was disabled at runtime, a TLS 1.2 client\r\n       was able to successfully establish a TLS 1.2 connection with the server.\r\n       Reported by alluettiv on GitHub.\r\n    Fixes CVE-2024-28836.\r\n\r\nBugfix\r\n   * Fix the build with CMake when Everest or P256-m is enabled through\r\n     a user configuration file or the compiler command line. Fixes #8165.\r\n   * Fix compilation error in C++ programs when MBEDTLS_ASN1_PARSE_C is\r\n     disabled.\r\n   * Fix possible NULL dereference issue in X509 cert_req program if an entry\r\n     in the san parameter is not separated by a colon.\r\n   * Fix possible NULL dereference issue in X509 cert_write program if an entry\r\n     in the san parameter is not separated by a colon.\r\n   * Fix an inconsistency between implementations and usages of `__cpuid`,\r\n     which mainly causes failures when building Windows target using\r\n     mingw or clang. Fixes #8334 & #8332.\r\n   * Fix build failure in conda-forge.  Fixes #8422.\r\n   * Fix parsing of CSRs with critical extensions.\r\n   * Switch to milliseconds as the unit for ticket creation and reception time\r\n     instead of seconds. That avoids rounding errors when computing the age of\r\n     tickets compared to peer using a millisecond clock (observed with GnuTLS).\r\n     Fixes #6623.\r\n   * Fix TLS server accepting TLS 1.2 handshake while TLS 1.2\r\n     is disabled at runtime. Fixes #8593.\r\n   * Remove accidental introduction of RSA signature algorithms\r\n     in TLS Suite B Profile. Fixes #8221.\r\n   * Fix unsupported PSA asymmetric encryption and decryption\r\n     (psa_asymmetric_[en|de]crypt) with opaque keys.\r\n     Resolves #8461.\r\n   * On Linux on ARMv8, fix a build error with SHA-256 and SHA-512\r\n     acceleration detection when the libc headers do not define the\r\n     corresponding constant. Reported by valord577.\r\n   * Correct initial capacities for key derivation algorithms:TLS12_PRF,\r\n     TLS12_PSK_TO_MS, PBKDF2-HMAC, PBKDF2-CMAC\r\n   * Fix mbedtls_pk_get_bitlen() for RSA keys whose size is not a\r\n     multiple of 8. Fixes #868.\r\n   * Avoid segmentation fault caused by releasing not initialized\r\n     entropy resource in gen_key example. Fixes #8809.\r\n   * mbedtls_pem_read_buffer() now performs a check on the padding data of\r\n     decrypted keys and it rejects invalid ones.\r\n   * Fix mbedtls_pk_sign(), mbedtls_pk_verify(), mbedtls_pk_decrypt() and\r\n     mbedtls_pk_encrypt() on non-opaque RSA keys to honor the padding mode in\r\n     the RSA context. Before, if MBEDTLS_USE_PSA_CRYPTO was enabled and the\r\n     RSA context was configured for PKCS#1 v2.1 (PSS/OAEP), the sign/verify\r\n     functions performed a PKCS#1 v1.5 signature instead and the\r\n     encrypt/decrypt functions returned an error. Fixes #8824.\r\n   * Fix missing bitflags in SSL session serialization headers. Their absence\r\n     allowed SSL sessions saved in one configuration to be loaded in a\r\n     different, incompatible configuration.\r\n   * In TLS 1.3 clients, fix an interoperability problem due to the client\r\n     generating a new random after a HelloRetryRequest. Fixes #8669.\r\n   * Fix the restoration of the ALPN when loading serialized connection with\r\n     the mbedtls_ssl_context_load() API.\r\n   * Fix NULL pointer dereference in mbedtls_pk_verify_ext() when called using\r\n     an opaque RSA context and specifying MBEDTLS_PK_RSASSA_PSS as key type.\r\n   * Fix RSA opaque keys always using PKCS1 v1.5 algorithms instead of the\r\n     primary algorithm of the wrapped PSA key.\r\n   * Fully support arbitrary overlap between inputs and outputs of PSA\r\n     functions. Note that overlap is still only partially supported when\r\n     MBEDTLS_PSA_ASSUME_EXCLUSIVE_BUFFERS is set (#3266).\r\n\r\nChanges\r\n   * Use heap memory to allocate DER encoded public/private key.\r\n     This reduces stack usage significantly for writing a public/private\r\n     key to a PEM string.\r\n   * PSA_WANT_ALG_CCM and PSA_WANT_ALG_CCM_STAR_NO_TAG are no more synonyms and\r\n     they are now treated separately. This means that they should be\r\n     individually enabled in order to enable respective support; also the\r\n     corresponding MBEDTLS_PSA_ACCEL symbol should be defined in case\r\n     acceleration is required.\r\n   * Moved declaration of functions mbedtls_ecc_group_to_psa and\r\n     mbedtls_ecc_group_of_psa from psa/crypto_extra.h to mbedtls/psa_util.h\r\n   * mbedtls_pk_sign_ext() is now always available, not just when\r\n     PSA (MBEDTLS_PSA_CRYPTO_C) is enabled.\r\n   * Extended PSA Crypto configurations options for FFDH by making it possible\r\n     to select only some of the parameters / groups, with the macros\r\n     PSA_WANT_DH_RFC7919_XXXX. You now need to defined the corresponding macro\r\n     for each size you want to support. Also, if you have an FFDH accelerator,\r\n     you'll need to define the appropriate MBEDTLS_PSA_ACCEL macros to signal\r\n     support for these domain parameters.\r\n   * RSA support in PSA no longer auto-enables the pkparse and pkwrite modules,\r\n     saving code size when those are not otherwise enabled.\r\n   * mbedtls_mpi_exp_mod and code that uses it, notably RSA and DHM operations,\r\n     have changed their speed/memory compromise as part of a proactive security\r\n     improvement. The new default value of MBEDTLS_MPI_WINDOW_SIZE roughly\r\n     preserves the current speed, at the expense of increasing memory\r\n     consumption.\r\n   * Rename directory containing Visual Studio files from visualc/VS2013 to\r\n     visualc/VS2017.\r\n   * The TLS 1.3 protocol is now enabled in the default configuration.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Note\r\n> :grey_exclamation: `mbedtls-3.6.0.tar.bz2` are our official release files. `source.tar.gz` and `source.zip` are automatically generated snapshot's that github is generating. They do not include external depedencies, and [can't be configured](https://github.com/orgs/community/discussions/6003)\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\n3ecf94fcfdaacafb757786a01b7538a61750ebd85c4b024f56ff8ba1490fcd38 mbedtls-3.6.0.tar.bz2","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/148843401/reactions","total_count":3,"+1":1,"-1":0,"laugh":0,"hooray":2,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/148842896","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/148842896/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/148842896/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v2.28.8","id":148842896,"author":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4I3ymQ","tag_name":"v2.28.8","target_commitish":"mbedtls-2.28","name":"Mbed TLS 2.28.8","draft":false,"immutable":false,"prerelease":false,"created_at":"2024-03-27T16:16:06Z","updated_at":"2024-03-30T21:59:50Z","published_at":"2024-03-28T15:04:56Z","assets":[{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/assets/159107173","id":159107173,"node_id":"RA_kwDOAGYMwM4Je8hl","name":"mbedtls-2.28.8.tar.bz2","label":null,"uploader":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/octet-stream","state":"uploaded","size":3343796,"digest":null,"download_count":128971,"created_at":"2024-03-28T14:42:19Z","updated_at":"2024-03-28T14:42:19Z","browser_download_url":"https://github.com/Mbed-TLS/mbedtls/releases/download/v2.28.8/mbedtls-2.28.8.tar.bz2"}],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v2.28.8","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v2.28.8","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nMbed TLS 2.28 is a long-time support branch. It will be supported with bug-fixes and security fixes until end of 2024.\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following links:\r\n- [PSA Crypto API with parameters in shared memory](https://github.com/Mbed-TLS/mbedtls-docs/blob/main/security-advisories/mbedtls-security-advisory-2024-03.md)\r\n\r\n## Release Notes\r\n\r\nFeatures\r\n   * AES-NI is now supported in Windows builds with clang and clang-cl.\r\n     Resolves #8372.\r\n   * Add pc files for pkg-config, e.g.:\r\n     pkg-config --cflags --libs (mbedtls|mbedcrypto|mbedx509)\r\n\r\nSecurity\r\n   * Passing buffers that are stored in untrusted memory as arguments\r\n     to PSA functions is now secure by default.\r\n     The PSA core now protects against modification of inputs or exposure\r\n     of intermediate outputs during operations. This is currently implemented\r\n     by copying buffers.\r\n     This feature increases code size and memory usage. If buffers passed to\r\n     PSA functions are owned exclusively by the PSA core for the duration of\r\n     the function call (i.e. no buffer parameters are in shared memory),\r\n     copying may be disabled by setting MBEDTLS_PSA_ASSUME_EXCLUSIVE_BUFFERS.\r\n     Note that setting this option will cause input-output buffer overlap to\r\n     be only partially supported (#3266).\r\n     Fixes CVE-2024-28960.\r\n\r\nBugfix\r\n   * Fix the build with CMake when Everest is enabled through\r\n     a user configuration file or the compiler command line. Fixes #8165.\r\n   * Fix an inconsistency between implementations and usages of `__cpuid`,\r\n     which mainly causes failures when building Windows target using\r\n     mingw or clang. Fixes #8334 & #8332.\r\n   * Correct initial capacities for key derivation algorithms: TLS12_PRF,\r\n     TLS12_PSK_TO_MS.\r\n   * Fix mbedtls_pk_get_bitlen() for RSA keys whose size is not a\r\n     multiple of 8. Fixes #868.\r\n   * Avoid segmentation fault caused by releasing not initialized\r\n     entropy resource in gen_key example. Fixes #8809.\r\n   * Fix missing bitflags in SSL session serialization headers. Their absence\r\n     allowed SSL sessions saved in one configuration to be loaded in a\r\n     different, incompatible configuration.\r\n   * Fix the restoration of the ALPN when loading serialized connection with\r\n     the mbedtls_ssl_context_load() API.\r\n   * Fully support arbitrary overlap between inputs and outputs of PSA\r\n     functions. Note that overlap is still only partially supported when\r\n     MBEDTLS_PSA_ASSUME_EXCLUSIVE_BUFFERS is set (#3266).\r\n\r\nChanges\r\n   * Use heap memory to allocate DER encoded public/private key.\r\n     This reduces stack usage significantly for writing a public/private\r\n     key to a PEM string.\r\n   * cmake: Use GnuInstallDirs to customize install directories\r\n     Replace custom LIB_INSTALL_DIR variable with standard CMAKE_INSTALL_LIBDIR\r\n     variable. For backward compatibility, set CMAKE_INSTALL_LIBDIR if\r\n     LIB_INSTALL_DIR is set.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Note\r\n> :grey_exclamation: `mbedtls-2.28.8.tar.bz2` are our official release files. `source.tar.gz` and `source.zip` are automatically generated snapshot's that github is generating. They do not include external depedencies, and [can't be configured](https://github.com/orgs/community/discussions/6003)\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n241c68402cef653e586be3ce28d57da24598eb0df13fcdea9d99bfce58717132 mbedtls-2.28.8.tar.bz2"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/138369651","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/138369651/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/138369651/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.5.2","id":138369651,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4IP1pz","tag_name":"v3.5.2","target_commitish":"development","name":"Mbed TLS 3.5.2","draft":false,"immutable":false,"prerelease":false,"created_at":"2024-01-24T16:12:13Z","updated_at":"2024-02-08T11:08:58Z","published_at":"2024-01-26T10:18:29Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v3.5.2","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v3.5.2","body":"## Description\r\n\r\nThis release of Mbed TLS provides fixes for security issues.\r\n\r\n## Security Advisories\r\nFor full details, please see the following link:\r\n\r\n- [Timing side channel in private key RSA operations](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-01-1).\r\n- [Buffer overflow in mbedtls_x509_set_extension](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-01-2).\r\n\r\n## Release Notes\r\n\r\nSecurity\r\n   * Fix a timing side channel in private key RSA operations. This side channel\r\n     could be sufficient for an attacker to recover the plaintext. A local\r\n     attacker or a remote attacker who is close to the victim on the network\r\n     might have precise enough timing measurements to exploit this. It requires\r\n     the attacker to send a large number of messages for decryption. For\r\n     details, see \"Everlasting ROBOT: the Marvin Attack\", Hubert Kario. Reported\r\n     by Hubert Kario, Red Hat.\r\n   * Fix a failure to validate input when writing x509 extensions lengths which\r\n     could result in an integer overflow, causing a zero-length buffer to be\r\n     allocated to hold the extension. The extension would then be copied into\r\n     the buffer, causing a heap buffer overflow.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle. \r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\n35890edf1a2c7a7e29eac3118d43302c3e1173e0df0ebaf5db56126dabe5bb05 v3.5.2.tar.gz\r\needecc468b3f8d052ef05a9d42bf63f04c8a1c50d1c5a94c251c681365a2c723  mbedtls-3.5.2.tar.gz\r\n\r\n55c1525e7d5de18b84a1d1e5540950b4a3bac70e02889cf309919b2877cba63b  v3.5.2.zip\r\nfea0c12622044ef0d594361e83b2c2b5e4ca56bc1b44126ccca50872c7d6d4f6  mbedtls-3.5.2.zip\r\n\r\nThe URLs below point to the archives named `vX.Y.Z...`. When checking hashes, please be aware that due to GitHub's use of the Content-Disposition header, some clients will download the `vX.Y.Z...` archive and save it with the filename `mbedtls-X.Y.Z...`.","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/138369651/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/138369234","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/138369234/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/138369234/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v2.28.7","id":138369234,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4IP1jS","tag_name":"v2.28.7","target_commitish":"mbedtls-2.28","name":"Mbed TLS 2.28.7","draft":false,"immutable":false,"prerelease":false,"created_at":"2024-01-24T16:10:22Z","updated_at":"2024-02-08T11:27:04Z","published_at":"2024-01-26T10:18:25Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v2.28.7","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v2.28.7","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nMbed TLS 2.28 is a long-time support branch. It will be supported with bug-fixes and security fixes until end of 2024.\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following links:\r\n\r\n- [Timing side channel in private key RSA operations](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-01-1).\r\n- [Buffer overflow in mbedtls_x509_set_extension](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2024-01-2).\r\n\r\n## Release Notes\r\n\r\nSecurity\r\n   * Fix a timing side channel in private key RSA operations. This side channel\r\n     could be sufficient for an attacker to recover the plaintext. A local\r\n     attacker or a remote attacker who is close to the victim on the network\r\n     might have precise enough timing measurements to exploit this. It requires\r\n     the attacker to send a large number of messages for decryption. For\r\n     details, see \"Everlasting ROBOT: the Marvin Attack\", Hubert Kario. Reported\r\n     by Hubert Kario, Red Hat.\r\n   * Fix a failure to validate input when writing x509 extensions lengths which\r\n     could result in an integer overflow, causing a zero-length buffer to be\r\n     allocated to hold the extension. The extension would then be copied into\r\n     the buffer, causing a heap buffer overflow.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\n4390bc4ab1ea9a1ddf3725f540d0f80838c656d1d7987a1cee8b4da43e4571de  mbedtls-2.28.7.tar.gz\r\n1df6073f0cf6a4e1953890bf5e0de2a8c7e6be50d6d6c69fa9fefcb1d14e981a  v2.28.7.tar.gz\r\n\r\n12f6e95435aa7510f74938fb1464d58c569c4b298b7044b7940758bbf6d5da04  mbedtls-2.28.7.zip\r\n527ff2472f6c51436808242f4b626500555145a472ca0a2f30a3e68d52d9806e  v2.28.7.zip\r\n\r\nThe URLs below point to the archives named `vX.Y.Z...`. When checking hashes, please be aware that due to GitHub's use of the Content-Disposition header, some clients will download the `vX.Y.Z...` archive and save it with the filename `mbedtls-X.Y.Z...`."},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/128575193","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/128575193/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/128575193/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.5.1","id":128575193,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4HqebZ","tag_name":"v3.5.1","target_commitish":"development","name":"Mbed TLS 3.5.1","draft":false,"immutable":false,"prerelease":false,"created_at":"2023-11-08T12:00:02Z","updated_at":"2023-11-08T18:11:25Z","published_at":"2023-11-08T18:00:51Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v3.5.1","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v3.5.1","body":"## Description\r\n\r\nThis release of Mbed TLS provides a license update, and a bugfix.\r\n\r\n## Release Notes\r\n\r\nChanges\r\n   *  Mbed TLS is now released under a dual Apache-2.0 OR GPL-2.0-or-later\r\n      license. Users may choose which license they take the code under.\r\n\r\nBugfix\r\n   * Fix accidental omission of MBEDTLS_TARGET_PREFIX in 3rdparty modules\r\n     in CMake.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n2597419f1a4a79dd28e6f5edc5180aff7e83bd85548437e07dcf9f808ceccb76  mbedtls-3.5.1.tar.gz\r\n959a492721ba036afc21f04d1836d874f93ac124cf47cf62c9bcd3a753e49bdb  mbedtls-3.5.1.zip\r\n"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/128574711","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/128574711/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/128574711/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v2.28.6","id":128574711,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4HqeT3","tag_name":"v2.28.6","target_commitish":"mbedtls-2.28","name":"Mbed TLS 2.28.6","draft":false,"immutable":false,"prerelease":false,"created_at":"2023-11-08T11:46:01Z","updated_at":"2023-11-08T18:12:11Z","published_at":"2023-11-08T18:00:25Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v2.28.6","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v2.28.6","body":"## Description\r\nThis release of Mbed TLS updates the license, but contains no other changes from 2.28.5.\r\n\r\n## Changes\r\n   *  Mbed TLS is now released under a dual Apache-2.0 OR GPL-2.0-or-later\r\n      license. Users may choose which license they take the code under.\r\n\r\n## Who should update\r\nWe recommend users who need to take Mbed TLS under a GPL-2.0-or-later license should update.\r\n\r\n## Checksum\r\nThe SHA256 hashes for the archives are:\r\n737b088bb8877ff8f0fc404ebbc48f82486df3da4bfd5b28fa208a5967e42fb3 mbedtls-2.28.6.tar.gz\r\n79e7679a1e88db56ee7c6e352ae6d24d67db2c2d102443343ea8938baa578d59 mbedtls-2.28.6.zip"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/123865284","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/123865284/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/123865284/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-3.5.0","id":123865284,"author":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4HYgjE","tag_name":"mbedtls-3.5.0","target_commitish":"development","name":"Mbed TLS 3.5.0","draft":false,"immutable":false,"prerelease":false,"created_at":"2023-10-05T11:40:23Z","updated_at":"2023-10-09T17:22:55Z","published_at":"2023-10-05T17:14:41Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/mbedtls-3.5.0","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/mbedtls-3.5.0","body":"## Description\r\n\r\nThis release of Mbed TLS provides new features, bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nThis release brings in significant code-size reductions, partly depending on configuration. In particular, the new options `MBEDTLS_AES_ONLY_128_BIT_KEY_LENGTH` and `MBEDTLS_PSA_P256M_DRIVER_ENABLED` may help you save code size.\r\n\r\n## Security Advisories\r\nFor full details, please see the following links:\r\n\r\n- [Buffer overread in TLS stream cipher suites](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2023-10-1/)\r\n- [Buffer overflow in TLS handshake parsing with ECDH](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2023-10-2/)\r\n\r\n## Release Notes\r\nAPI changes\r\n   * Mbed TLS 3.4 introduced support for omitting the built-in implementation\r\n     of ECDSA and/or EC J-PAKE when those are provided by a driver. However,\r\n     there was a flaw in the logic checking if the built-in implementation, in\r\n     that it failed to check if all the relevant curves were supported by the\r\n     accelerator. As a result, it was possible to declare no curves as\r\n     accelerated and still have the built-in implementation compiled out.\r\n     Starting with this release, it is necessary to declare which curves are\r\n     accelerated (using MBEDTLS_PSA_ACCEL_ECC_xxx macros), or they will be\r\n     considered not accelerated, and the built-in implementation of the curves\r\n     and any algorithm possible using them will be included in the build.\r\n   * Add new millisecond time type `mbedtls_ms_time_t` and `mbedtls_ms_time()`\r\n     function, needed for TLS 1.3 ticket lifetimes. Alternative implementations\r\n     can be created using an ALT interface.\r\n\r\nRequirement changes\r\n   * Officially require Python 3.8 now that earlier versions are out of support.\r\n   * Minimum required Windows version is now Windows Vista, or\r\n     Windows Server 2008.\r\n\r\nNew deprecations\r\n   * PSA_WANT_KEY_TYPE_xxx_KEY_PAIR and\r\n     MBEDTLS_PSA_ACCEL_KEY_TYPE_xxx_KEY_PAIR, where xxx is either ECC or RSA,\r\n     are now being deprecated in favor of PSA_WANT_KEY_TYPE_xxx_KEY_PAIR_yyy and\r\n     MBEDTLS_PSA_ACCEL_KEY_TYPE_xxx_KEY_PAIR_yyy. Here yyy can be: BASIC,\r\n     IMPORT, EXPORT, GENERATE, DERIVE. The goal is to have a finer detail about\r\n     the capabilities of the PSA side for either key.\r\n   * MBEDTLS_CIPHER_BLKSIZE_MAX is deprecated in favor of\r\n     MBEDTLS_MAX_BLOCK_LENGTH (if you intended what the name suggests:\r\n     maximum size of any supported block cipher) or the new name\r\n     MBEDTLS_CMAC_MAX_BLOCK_SIZE (if you intended the actual semantics:\r\n     maximum size of a block cipher supported by the CMAC module).\r\n   * mbedtls_pkcs5_pbes2() and mbedtls_pkcs12_pbe() functions are now\r\n     deprecated in favor of mbedtls_pkcs5_pbes2_ext() and\r\n     mbedtls_pkcs12_pbe_ext() as they offer more security by checking\r\n     for overflow of the output buffer and reporting the actual length\r\n     of the output.\r\n\r\nFeatures\r\n   * All modules that use hashes or HMAC can now take advantage of PSA Crypto\r\n     drivers when MBEDTLS_PSA_CRYPTO_C is enabled and psa_crypto_init() has\r\n     been called. Previously (in 3.3), this was restricted to a few modules,\r\n     and only in builds where MBEDTLS_MD_C was disabled; in particular the\r\n     entropy module was not covered which meant an external RNG had to be\r\n     provided - these limitations are lifted in this version. A new set of\r\n     feature macros, MBEDTLS_MD_CAN_xxx, has been introduced that can be used\r\n     to check for availability of hash algorithms, regardless of whether\r\n     they're provided by a built-in implementation, a driver or both. See\r\n     docs/driver-only-builds.md.\r\n   * When a PSA driver for ECDH is present, it is now possible to disable\r\n     MBEDTLS_ECDH_C in the build in order to save code size. For TLS 1.2\r\n     key exchanges based on ECDH(E) to work, this requires\r\n     MBEDTLS_USE_PSA_CRYPTO. Restartable/interruptible ECDHE operations in\r\n     TLS 1.2 (ECDHE-ECDSA key exchange) are not supported in those builds yet,\r\n     as PSA does not have an API for restartable ECDH yet.\r\n   * When all of ECDH, ECDSA and EC J-PAKE are either disabled or provided by\r\n     a driver, it is possible to disable MBEDTLS_ECP_C (and MBEDTLS_BIGNUM_C\r\n     if not required by another module) and still get support for ECC keys and\r\n     algorithms in PSA, with some limitations. See docs/driver-only-builds.txt\r\n     for details.\r\n   * Add parsing of directoryName subtype for subjectAltName extension in\r\n     x509 certificates.\r\n   * Add support for server-side TLS version negotiation. If both TLS 1.2 and\r\n     TLS 1.3 protocols are enabled, the TLS server now selects TLS 1.2 or\r\n     TLS 1.3 depending on the capabilities and preferences of TLS clients.\r\n     Fixes #6867.\r\n   * X.509 hostname verification now supports IPAddress Subject Alternate Names.\r\n   * Add support for reading and writing X25519 and X448\r\n     public and private keys in RFC 8410 format using the existing PK APIs.\r\n   * When parsing X.509 certificates, support the extensions\r\n     SignatureKeyIdentifier and AuthorityKeyIdentifier.\r\n   * Don't include the PSA dispatch functions for PAKEs (psa_pake_setup() etc)\r\n     if no PAKE algorithms are requested\r\n   * Add support for the FFDH algorithm and DH key types in PSA, with\r\n     parameters from RFC 7919. This includes a built-in implementation based\r\n     on MBEDTLS_BIGNUM_C, and a driver dispatch layer enabling alternative\r\n     implementations of FFDH through the driver entry points.\r\n   * It is now possible to generate certificates with SubjectAltNames.\r\n     Currently supported subtypes: DnsName, UniformResourceIdentifier,\r\n     IP address, OtherName, and DirectoryName, as defined in RFC 5280.\r\n     See mbedtls_x509write_crt_set_subject_alternative_name for\r\n     more information.\r\n   * X.509 hostname verification now partially supports URI Subject Alternate\r\n     Names. Only exact matching, without any normalization procedures\r\n     described in 7.4 of RFC5280, will result in a positive URI verification.\r\n   * Add function mbedtls_oid_from_numeric_string() to parse an OID from a\r\n     string to a DER-encoded mbedtls_asn1_buf.\r\n   * Add SHA-3 family hash functions.\r\n   * Add support to restrict AES to 128-bit keys in order to save code size.\r\n     A new configuration option, MBEDTLS_AES_ONLY_128_BIT_KEY_LENGTH, can be\r\n     used to enable this feature.\r\n   * AES performance improvements. Uplift varies by platform,\r\n     toolchain, optimisation flags and mode.\r\n     Aarch64, gcc -Os and CCM, GCM and XTS benefit the most.\r\n     On Aarch64, uplift is typically around 20 - 110%.\r\n     When compiling with gcc -Os on Aarch64, AES-XTS improves\r\n     by 4.5x.\r\n   * Add support for PBKDF2-HMAC through the PSA API.\r\n   * New symbols PSA_WANT_KEY_TYPE_xxx_KEY_PAIR_yyy and\r\n     MBEDTLS_PSA_ACCEL_KEY_TYPE_xxx_KEY_PAIR_yyy (where xxx is either ECC, RSA\r\n     or DH) were introduced in order to have finer accuracy in defining the\r\n     PSA capabilities for each key. These capabilities, named yyy above, can be\r\n     any of: BASIC, IMPORT, EXPORT, GENERATE, DERIVE.\r\n     - DERIVE is only available for ECC keys, not for RSA or DH ones.\r\n     - implementations are free to enable more than what it was strictly\r\n       requested. For example BASIC internally enables IMPORT and EXPORT\r\n       (useful for testing purposes), but this might change in the future.\r\n   * Add support for FFDH key exchange in TLS 1.3.\r\n     This is automatically enabled as soon as PSA_WANT_ALG_FFDH\r\n     and the ephemeral or psk-ephemeral key exchange mode are enabled.\r\n     By default, all groups are offered; the list of groups can be\r\n     configured using the existing API function mbedtls_ssl_conf_groups().\r\n   * Improve mbedtls_x509_time performance and reduce memory use.\r\n   * Reduce syscalls to time() during certificate verification.\r\n   * Allow MBEDTLS_CONFIG_FILE and MBEDTLS_USER_CONFIG_FILE to be set by\r\n     setting the CMake variable of the same name at configuration time.\r\n   * Add getter (mbedtls_ssl_cache_get_timeout()) to access\r\n     `mbedtls_ssl_cache_context.timeout`.\r\n   * Add getter (mbedtls_ssl_get_hostname()) to access\r\n     `mbedtls_ssl_context.hostname`.\r\n   * Add getter (mbedtls_ssl_conf_get_endpoint()) to access\r\n     `mbedtls_ssl_config.endpoint`.\r\n   * Support for \"opaque\" (PSA-held) ECC keys in the PK module has been\r\n     extended: it is now possible to use mbedtls_pk_write_key_der(),\r\n     mbedtls_pk_write_key_pem(), mbedtls_pk_check_pair(), and\r\n     mbedtls_pk_verify() with opaque ECC keys (provided the PSA attributes\r\n     allow it).\r\n   * The documentation of mbedtls_ecp_group now describes the optimized\r\n     representation of A for some curves. Fixes #8045.\r\n   * Add a possibility to generate CSR's with RCF822 and directoryName subtype\r\n     of subjectAltName extension in x509 certificates.\r\n   * Add support for PBKDF2-CMAC through the PSA API.\r\n   * New configuration option MBEDTLS_AES_USE_HARDWARE_ONLY introduced. When\r\n     using CPU-accelerated AES (e.g., Arm Crypto Extensions), this option\r\n     disables the plain C implementation and the run-time detection for the\r\n     CPU feature, which reduces code size and avoids the vulnerability of the\r\n     plain C implementation.\r\n   * Accept arbitrary AttributeType and AttributeValue in certificate\r\n     Distinguished Names using RFC 4514 syntax.\r\n   * Applications using ECC over secp256r1 through the PSA API can use a\r\n     new implementation with a much smaller footprint, but some minor\r\n     usage restrictions. See the documentation of the new configuration\r\n     option MBEDTLS_PSA_P256M_DRIVER_ENABLED for details.\r\n\r\nSecurity\r\n   * Fix a case where potentially sensitive information held in memory would not\r\n     be completely zeroized during TLS 1.2 handshake, in both server and client\r\n     configurations.\r\n   * In configurations with ARIA or Camellia but not AES, the value of\r\n     MBEDTLS_CIPHER_BLKSIZE_MAX was 8, rather than 16 as the name might\r\n     suggest. This did not affect any library code, because this macro was\r\n     only used in relation with CMAC which does not support these ciphers.\r\n     This may affect application code that uses this macro.\r\n   * Developers using mbedtls_pkcs5_pbes2() or mbedtls_pkcs12_pbe() should\r\n     review the size of the output buffer passed to this function, and note\r\n     that the output after decryption may include CBC padding. Consider moving\r\n     to the new functions mbedtls_pkcs5_pbes2_ext() or mbedtls_pkcs12_pbe_ext()\r\n     which checks for overflow of the output buffer and reports the actual\r\n     length of the output.\r\n   * Improve padding calculations in CBC decryption, NIST key unwrapping and\r\n     RSA OAEP decryption. With the previous implementation, some compilers\r\n     (notably recent versions of Clang and IAR) could produce non-constant\r\n     time code, which could allow a padding oracle attack if the attacker\r\n     has access to precise timing measurements.\r\n   * Updates to constant-time C code so that compilers are less likely to use\r\n     conditional instructions, which can have an observable difference in\r\n     timing. (Clang has been seen to do this.) Also introduce assembly\r\n     implementations for 32- and 64-bit Arm and for x86 and x86-64, which are\r\n     guaranteed not to use conditional instructions.\r\n   * Fix definition of MBEDTLS_MD_MAX_BLOCK_SIZE, which was too\r\n     small when MBEDTLS_SHA384_C was defined and MBEDTLS_SHA512_C was\r\n     undefined. Mbed TLS itself was unaffected by this, but user code\r\n     which used MBEDTLS_MD_MAX_BLOCK_SIZE could be affected. The only\r\n     release containing this bug was Mbed TLS 3.4.0.\r\n   * Fix a buffer overread when parsing short TLS application data records in\r\n     null-cipher cipher suites. Credit to OSS-Fuzz.\r\n   * Fix a remotely exploitable heap buffer overflow in TLS handshake parsing.\r\n     In TLS 1.3, all configurations are affected except PSK-only ones, and\r\n     both clients and servers are affected.\r\n     In TLS 1.2, the affected configurations are those with\r\n     MBEDTLS_USE_PSA_CRYPTO and ECDH enabled but DHM and RSA disabled,\r\n     and only servers are affected, not clients.\r\n     Credit to OSS-Fuzz.\r\n\r\nBugfix\r\n   * Fix proper sizing for PSA_EXPORT_[KEY_PAIR/PUBLIC_KEY]_MAX_SIZE and\r\n     PSA_SIGNATURE_MAX_SIZE buffers when at least one accelerated EC is bigger\r\n     than all built-in ones and RSA is disabled.\r\n     Resolves #6622.\r\n   * Add missing md.h includes to some of the external programs from\r\n     the programs directory. Without this, even though the configuration\r\n     was sufficient for a particular program to work, it would only print\r\n     a message that one of the required defines is missing.\r\n   * Fix declaration of mbedtls_ecdsa_sign_det_restartable() function\r\n     in the ecdsa.h header file. There was a build warning when the\r\n     configuration macro MBEDTLS_ECDSA_SIGN_ALT was defined.\r\n     Resolves #7407.\r\n   * Fix an error when MBEDTLS_ECDSA_SIGN_ALT is defined but not\r\n     MBEDTLS_ECDSA_VERIFY_ALT, causing ecdsa verify to fail. Fixes #7498.\r\n   * Fix missing PSA initialization in sample programs when\r\n     MBEDTLS_USE_PSA_CRYPTO is enabled.\r\n   * Fix the J-PAKE driver interface for user and peer to accept any values\r\n     (previously accepted values were limited to \"client\" or \"server\").\r\n   * Fix clang and armclang compilation error when targeting certain Arm\r\n     M-class CPUs (Cortex-M0, Cortex-M0+, Cortex-M1, Cortex-M23,\r\n     SecurCore SC000). Fixes #1077.\r\n   * Fix \"unterminated '#pragma clang attribute push'\" in sha256/sha512.c when\r\n     built with MBEDTLS_SHAxxx_USE_A64_CRYPTO_IF_PRESENT but don't have a\r\n     way to detect the crypto extensions required. A warning is still issued.\r\n   * Fixed an issue that caused compile errors when using CMake and the IAR\r\n     toolchain.\r\n   * Fix very high stack usage in SSL debug code. Reported by Maximilian\r\n     Gerhardt in #7804.\r\n   * Fix a compilation failure in the constant_time module when\r\n     building for arm64_32 (e.g., for watchos). Reported by Paulo\r\n     Coutinho in #7787.\r\n   * Fix crypt_and_hash decryption fail when used with a stream cipher\r\n     mode of operation due to the input not being multiple of block size.\r\n     Resolves #7417.\r\n   * Fix a bug in which mbedtls_x509_string_to_names() would return success\r\n     when given a invalid name string if it did not contain '=' or ','.\r\n   * Fix compilation warnings in aes.c, which prevented the\r\n     example TF-M configuration in configs/ from building cleanly:\r\n     tfm_mbedcrypto_config_profile_medium.h with\r\n     crypto_config_profile_medium.h.\r\n   * In TLS 1.3, fix handshake failure when a client in its ClientHello\r\n     proposes an handshake based on PSK only key exchange mode or at least\r\n     one of the key exchange modes using ephemeral keys to a server that\r\n     supports only the PSK key exchange mode.\r\n   * Fix CCM* with no tag being not supported in a build with CCM as the only\r\n     symmetric encryption algorithm and the PSA configuration enabled.\r\n   * Fix the build with MBEDTLS_PSA_INJECT_ENTROPY. Fixes #7516.\r\n   * Fix a compilation error on some platforms when including mbedtls/ssl.h\r\n     with all TLS support disabled. Fixes #6628.\r\n   * Fix x509 certificate generation to conform to RFC 5480 / RFC 5758 when\r\n     using ECC key. The certificate was rejected by some crypto frameworks.\r\n     Fixes #2924.\r\n   * Fix a potential corruption of the passed-in IV when mbedtls_aes_crypt_cbc()\r\n     is called with zero length and padlock is not enabled.\r\n   * Fix compile failure due to empty enum in cipher_wrap.c, when building\r\n     with a very minimal configuration. Fixes #7625.\r\n   * Fix some cases where mbedtls_mpi_mod_exp, RSA key construction or ECDSA\r\n     signature can silently return an incorrect result in low memory conditions.\r\n   * Don't try to include MBEDTLS_PSA_CRYPTO_USER_CONFIG_FILE when\r\n     MBEDTLS_PSA_CRYPTO_CONFIG is disabled.\r\n   * Fix IAR compiler warnings.\r\n   * Fix an issue when parsing an otherName subject alternative name into a\r\n     mbedtls_x509_san_other_name struct. The type-id of the otherName was not\r\n     copied to the struct. This meant that the struct had incomplete\r\n     information about the otherName SAN and contained uninitialized memory.\r\n   * Fix the detection of HardwareModuleName otherName SANs. These were being\r\n     detected by comparing the wrong field and the check was erroneously\r\n     inverted.\r\n   * Fix a build error in some configurations with MBEDTLS_PSA_CRYPTO_CONFIG\r\n     enabled, where some low-level modules required by requested PSA crypto\r\n     features were not getting automatically enabled. Fixes #7420.\r\n   * Fix undefined symbols in some builds using TLS 1.3 with a custom\r\n     configuration file.\r\n   * Fix log level for the got supported group message. Fixes #6765\r\n   * Functions in the ssl_cache module now return a negative MBEDTLS_ERR_xxx\r\n     error code on failure. Before, they returned 1 to indicate failure in\r\n     some cases involving a missing entry or a full cache.\r\n   * mbedtls_pk_parse_key() now rejects trailing garbage in encrypted keys.\r\n   * Fix the build with CMake when Everest or P256-m is enabled through\r\n     a user configuration file or the compiler command line. Fixes #8165.\r\n\r\nChanges\r\n   * Enable Arm / Thumb bignum assembly for most Arm platforms when\r\n     compiling with gcc, clang or armclang and -O0.\r\n   * Enforce minimum RSA key size when generating a key\r\n     to avoid accidental misuse.\r\n   * Use heap memory to allocate DER encoded RSA private key.\r\n     This reduces stack usage significantly for RSA signature\r\n     operations when MBEDTLS_PSA_CRYPTO_C is defined.\r\n   * Update Windows code to use BCryptGenRandom and wcslen, and\r\n     ensure that conversions between size_t, ULONG, and int are\r\n     always done safely.  Original contribution by Kevin Kane #635, #730\r\n     followed by Simon Butcher #1453.\r\n   * Users integrating their own PSA drivers should be aware that\r\n     the file library/psa_crypto_driver_wrappers.c has been renamed\r\n     to psa_crypto_driver_wrappers_no_static.c.\r\n   * When using CBC with the cipher module, the requirement to call\r\n     mbedtls_cipher_set_padding_mode() is now enforced. Previously, omitting\r\n     this call accidentally applied a default padding mode chosen at compile\r\n     time.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n02311fc8bd032d89ff9aee535dddb55458108dc0d4c5280638fc611aea7c5e4a  mbedtls-3.5.0.tar.gz\r\nafa5e4474b5769380f84e64860ad3a37269f661bdc8b3f781767c63f7632e04f  mbedtls-3.5.0.zip\r\n"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/123866439","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/123866439/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/123866439/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/mbedtls-2.28.5","id":123866439,"author":{"login":"minosgalanakis","id":30719586,"node_id":"MDQ6VXNlcjMwNzE5NTg2","avatar_url":"https://avatars.githubusercontent.com/u/30719586?v=4","gravatar_id":"","url":"https://api.github.com/users/minosgalanakis","html_url":"https://github.com/minosgalanakis","followers_url":"https://api.github.com/users/minosgalanakis/followers","following_url":"https://api.github.com/users/minosgalanakis/following{/other_user}","gists_url":"https://api.github.com/users/minosgalanakis/gists{/gist_id}","starred_url":"https://api.github.com/users/minosgalanakis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/minosgalanakis/subscriptions","organizations_url":"https://api.github.com/users/minosgalanakis/orgs","repos_url":"https://api.github.com/users/minosgalanakis/repos","events_url":"https://api.github.com/users/minosgalanakis/events{/privacy}","received_events_url":"https://api.github.com/users/minosgalanakis/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4HYg1H","tag_name":"mbedtls-2.28.5","target_commitish":"development","name":"Mbedtls 2.28.5","draft":false,"immutable":false,"prerelease":false,"created_at":"2023-10-04T23:06:25Z","updated_at":"2023-10-09T17:23:15Z","published_at":"2023-10-05T17:15:58Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/mbedtls-2.28.5","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/mbedtls-2.28.5","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nMbed TLS 2.28 is a long-time support branch. It will be supported with bug-fixes and security fixes until end of 2024.\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following links:\r\n\r\n- [Buffer overread in TLS stream cipher suites](https://mbed-tls.readthedocs.io/en/latest/security-advisories/mbedtls-security-advisory-2023-10-1/)\r\n\r\n## Release Notes\r\n\r\nFeatures\r\n   * The documentation of mbedtls_ecp_group now describes the optimized\r\n     representation of A for some curves. Fixes #8045.\r\n\r\nSecurity\r\n   * Developers using mbedtls_pkcs5_pbes2() or mbedtls_pkcs12_pbe() should\r\n     review the size of the output buffer passed to this function, and note\r\n     that the output after decryption may include CBC padding. Consider moving\r\n     to the new functions mbedtls_pkcs5_pbes2_ext() or mbedtls_pkcs12_pbe_ext()\r\n     which checks for overflow of the output buffer and reports the actual\r\n     length of the output.\r\n   * Improve padding calculations in CBC decryption, NIST key unwrapping and\r\n     RSA OAEP decryption. With the previous implementation, some compilers\r\n     (notably recent versions of Clang and IAR) could produce non-constant\r\n     time code, which could allow a padding oracle attack if the attacker\r\n     has access to precise timing measurements.\r\n   * Fix a buffer overread when parsing short TLS application data records in\r\n     ARC4 or null-cipher cipher suites. Credit to OSS-Fuzz.\r\n\r\nBugfix\r\n   * Fix x509 certificate generation to conform to RFC 5480 / RFC 5758 when\r\n     using ECC key. The certificate was rejected by some crypto frameworks.\r\n     Fixes #2924.\r\n   * Fix some cases where mbedtls_mpi_mod_exp, RSA key construction or ECDSA\r\n     signature can silently return an incorrect result in low memory conditions.\r\n   * Fix IAR compiler warnings. Fixes #7873, #4300.\r\n   * Fix an issue when parsing an otherName subject alternative name into a\r\n     mbedtls_x509_san_other_name struct. The type-id of the otherName was not\r\n     copied to the struct. This meant that the struct had incomplete\r\n     information about the otherName SAN and contained uninitialized memory.\r\n   * Fix the detection of HardwareModuleName otherName SANs. These were being\r\n     detected by comparing the wrong field and the check was erroneously\r\n     inverted.\r\n   * Fix an error when MBEDTLS_ECDSA_SIGN_ALT is defined but not\r\n     MBEDTLS_ECDSA_VERIFY_ALT, causing ecdsa verify to fail. Fixes #7498.\r\n   * Functions in the ssl_cache module now return a negative MBEDTLS_ERR_xxx\r\n     error code on failure. Before, they returned 1 to indicate failure in\r\n     some cases involving a missing entry or a full cache.\r\n\r\nChanges\r\n   * In configurations with ARIA or Camellia but not AES, the value of\r\n     MBEDTLS_CIPHER_BLKSIZE_MAX was 8, rather than 16 as the name might\r\n     suggest. This did not affect any library code, because this macro was\r\n     only used in relation with CMAC which does not support these ciphers.\r\n     Its value is now 16 if ARIA or Camellia are present. This may affect\r\n     application code that uses this macro.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\ndbd42a11c26143aa8de1c07fd6ec6765395e86b06f583f051cfa60e8f0b23125  mbedtls-2.28.5.tar.gz\r\nd3a6c0a9746ccae0e36ab914064ce37b0e2d92ccca909e4fd5f8015b51f34456  mbedtls-2.28.5.zip\r\n","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/123866439/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/114960750","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/114960750/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/114960750/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.4.1","id":114960750,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4G2ilu","tag_name":"v3.4.1","target_commitish":"development","name":"Mbed TLS 3.4.1","draft":false,"immutable":false,"prerelease":false,"created_at":"2023-08-03T13:56:03Z","updated_at":"2023-08-03T17:43:31Z","published_at":"2023-08-03T17:42:10Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v3.4.1","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v3.4.1","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements.\r\n\r\n## Security Advisories\r\n\r\nThere are no security advisories for this release.\r\n\r\n## Release Notes\r\n\r\nBugfix\r\n   * Fix builds on Windows with clang\r\n\r\nChanges\r\n   * Update test data to avoid failures of unit tests after 2023-08-07.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\na420fcf7103e54e775c383e3751729b8fb2dcd087f6165befd13f28315f754f5 mbedtls-3.4.1.tar.gz\r\nad10adf1f0b093302f9e74b02a5a5412274359a1f6b39034940934054ec3c7c6 mbedtls-3.4.1.zip","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/114960750/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/114950899","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/114950899/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/114950899/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v2.28.4","id":114950899,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4G2gLz","tag_name":"v2.28.4","target_commitish":"mbedtls-2.28","name":"Mbed TLS 2.28.4","draft":false,"immutable":false,"prerelease":false,"created_at":"2023-08-03T13:03:03Z","updated_at":"2023-08-03T17:44:15Z","published_at":"2023-08-03T17:41:50Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v2.28.4","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v2.28.4","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements.\r\n\r\nMbed TLS 2.28 is a long-time support branch. It will be supported with bug-fixes and security fixes until end of 2024.\r\n\r\n## Security Advisories\r\n\r\nThere are no security advisories for this release.\r\n\r\n## Release Notes\r\n\r\nFeatures\r\n   * Allow MBEDTLS_CONFIG_FILE and MBEDTLS_USER_CONFIG_FILE to be set by\r\n     setting the CMake variable of the same name at configuration time.\r\n\r\nBugfix\r\n   * Fix crypt_and_hash decryption fail when used with a stream cipher\r\n     mode of operation, due to the input not being a multiple of the block\r\n     size. Resolves #7417.\r\n   * Fix a bug where mbedtls_x509_string_to_names() would return success\r\n     when given a invalid name string, if it did not contain '=' or ','.\r\n   * Fix missing PSA initialization in sample programs when\r\n     MBEDTLS_USE_PSA_CRYPTO is enabled.\r\n   * Fix clang and armclang compilation error when targeting certain Arm\r\n     M-class CPUs (Cortex-M0, Cortex-M0+, Cortex-M1, Cortex-M23,\r\n     SecurCore SC000). Fixes #1077.\r\n   * Fixed an issue that caused compile errors when using CMake and the IAR\r\n     toolchain.\r\n   * Fix the build with MBEDTLS_PSA_INJECT_ENTROPY. Fixes #7516.\r\n   * Fix builds on Windows with clang.\r\n   * Fix compilation warnings in aes.c for certain combinations\r\n     of configuration options.\r\n   * Fix a compilation error on some platforms when including mbedtls/ssl.h\r\n     with all TLS support disabled. Fixes #6628.\r\n\r\nChanges\r\n   * Update test data to avoid failures of unit tests after 2023-08-07, and\r\n     update expiring certififcates in the certs module.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\n578c4dcd15bbff3f5cd56aa07cd4f850fc733634e3d5947be4f7157d5bfd81ac mbedtls-2.28.4.tar.gz\r\nc325bce754bcd26ae45af8fa38f67dcd45d2e23784cf818c4c97694903add530 mbedtls-2.28.4.zip"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/97167521","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/97167521/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/97167521/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.4.0","id":97167521,"author":{"login":"paul-elliott-arm","id":62069445,"node_id":"MDQ6VXNlcjYyMDY5NDQ1","avatar_url":"https://avatars.githubusercontent.com/u/62069445?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-elliott-arm","html_url":"https://github.com/paul-elliott-arm","followers_url":"https://api.github.com/users/paul-elliott-arm/followers","following_url":"https://api.github.com/users/paul-elliott-arm/following{/other_user}","gists_url":"https://api.github.com/users/paul-elliott-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-elliott-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-elliott-arm/subscriptions","organizations_url":"https://api.github.com/users/paul-elliott-arm/orgs","repos_url":"https://api.github.com/users/paul-elliott-arm/repos","events_url":"https://api.github.com/users/paul-elliott-arm/events{/privacy}","received_events_url":"https://api.github.com/users/paul-elliott-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4Fyqih","tag_name":"v3.4.0","target_commitish":"development","name":"Mbed TLS 3.4.0","draft":false,"immutable":false,"prerelease":false,"created_at":"2023-03-27T17:07:56Z","updated_at":"2023-03-28T12:54:33Z","published_at":"2023-03-28T12:50:51Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v3.4.0","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v3.4.0","body":"## Description\r\n\r\nThis release of Mbed TLS provides new features, bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\n## Security Advisories\r\n\r\nThere are no security advisories for this release.\r\n\r\n## Release Notes\r\n\r\nDefault behavior changes\r\n   * The default priority order of TLS 1.3 cipher suites has been modified to\r\n     follow the same rules as the TLS 1.2 cipher suites (see\r\n     ssl_ciphersuites.c). The preferred cipher suite is now\r\n     TLS_CHACHA20_POLY1305_SHA256.\r\n\r\nNew deprecations\r\n   * mbedtls_x509write_crt_set_serial() is now being deprecated in favor of\r\n     mbedtls_x509write_crt_set_serial_raw(). The goal here is to remove any\r\n     direct dependency of X509 on BIGNUM_C.\r\n   * PSA to mbedtls error translation is now unified in psa_util.h,\r\n     deprecating mbedtls_md_error_from_psa. Each file that performs error\r\n     translation should define its own version of PSA_TO_MBEDTLS_ERR,\r\n     optionally providing file-specific error pairs. Please see psa_util.h for\r\n     more details.\r\n\r\nFeatures\r\n   * Added partial support for parsing the PKCS #7 Cryptographic Message\r\n     Syntax, as defined in RFC 2315. Currently, support is limited to the\r\n     following:\r\n     - Only the signed-data content type, version 1 is supported.\r\n     - Only DER encoding is supported.\r\n     - Only a single digest algorithm per message is supported.\r\n     - Certificates must be in X.509 format. A message must have either 0\r\n       or 1 certificates.\r\n     - There is no support for certificate revocation lists.\r\n     - The authenticated and unauthenticated attribute fields of SignerInfo\r\n       must be empty.\r\n     Many thanks to Daniel Axtens, Nayna Jain, and Nick Child from IBM for\r\n     contributing this feature, and to Demi-Marie Obenour for contributing\r\n     various improvements, tests and bug fixes.\r\n   * General performance improvements by accessing multiple bytes at a time.\r\n     Fixes #1666.\r\n   * Improvements to use of unaligned and byte-swapped memory, reducing code\r\n     size and improving performance (depending on compiler and target\r\n     architecture).\r\n   * Add support for reading points in compressed format\r\n     (MBEDTLS_ECP_PF_COMPRESSED) with mbedtls_ecp_point_read_binary()\r\n     (and callers) for Short Weierstrass curves with prime p where p = 3 mod 4\r\n     (all mbedtls MBEDTLS_ECP_DP_SECP* and MBEDTLS_ECP_DP_BP* curves\r\n      except MBEDTLS_ECP_DP_SECP224R1 and MBEDTLS_ECP_DP_SECP224K1)\r\n   * SHA224_C/SHA384_C are now independent from SHA384_C/SHA512_C respectively.\r\n     This helps in saving code size when some of the above hashes are not\r\n     required.\r\n   * Add parsing of V3 extensions (key usage, Netscape cert-type,\r\n     Subject Alternative Names) in x509 Certificate Sign Requests.\r\n   * Use HOSTCC (if it is set) when compiling C code during generation of the\r\n     configuration-independent files. This allows them to be generated when\r\n     CC is set for cross compilation.\r\n   * Add parsing of uniformResourceIdentifier subtype for subjectAltName\r\n     extension in x509 certificates.\r\n   * Add an interruptible version of sign and verify hash to the PSA interface,\r\n     backed by internal library support for ECDSA signing and verification.\r\n   * Add parsing of rfc822Name subtype for subjectAltName\r\n     extension in x509 certificates.\r\n   * The configuration macros MBEDTLS_PSA_CRYPTO_PLATFORM_FILE and\r\n     MBEDTLS_PSA_CRYPTO_STRUCT_FILE specify alternative locations for\r\n     the headers \"psa/crypto_platform.h\" and \"psa/crypto_struct.h\".\r\n   * When a PSA driver for ECDSA is present, it is now possible to disable\r\n     MBEDTLS_ECDSA_C in the build in order to save code size. For PK, X.509\r\n     and TLS to fully work, this requires MBEDTLS_USE_PSA_CRYPTO to be enabled.\r\n     Restartable/interruptible ECDSA operations in PK, X.509 and TLS are not\r\n     supported in those builds yet, as driver support for interruptible ECDSA\r\n     operations is not present yet.\r\n   * Add a driver dispatch layer for EC J-PAKE, enabling alternative\r\n     implementations of EC J-PAKE through the driver entry points.\r\n   * Add new API mbedtls_ssl_cache_remove for cache entry removal by\r\n     its session id.\r\n   * Add support to include the SubjectAltName extension to a CSR.\r\n   * Add support for AES with the Armv8-A Cryptographic Extension on\r\n     64-bit Arm. A new configuration option, MBEDTLS_AESCE_C, can\r\n     be used to enable this feature. Run-time detection is supported\r\n     under Linux only.\r\n   * When a PSA driver for EC J-PAKE is present, it is now possible to disable\r\n     MBEDTLS_ECJPAKE_C in the build in order to save code size. For the\r\n     corresponding TLS 1.2 key exchange to work, MBEDTLS_USE_PSA_CRYPTO needs\r\n     to be enabled.\r\n   * Add functions mbedtls_rsa_get_padding_mode() and mbedtls_rsa_get_md_alg()\r\n     to read non-public fields for padding mode and hash id from\r\n     an mbedtls_rsa_context, as requested in #6917.\r\n   * AES-NI is now supported with Visual Studio.\r\n   * AES-NI is now supported in 32-bit builds, or when MBEDTLS_HAVE_ASM\r\n     is disabled, when compiling with GCC or Clang or a compatible compiler\r\n     for a target CPU that supports the requisite instructions (for example\r\n     gcc -m32 -msse2 -maes -mpclmul). (Generic x86 builds with GCC-like\r\n     compilers still require MBEDTLS_HAVE_ASM and a 64-bit target.)\r\n   * It is now possible to use a PSA-held (opaque) password with the TLS 1.2\r\n     ECJPAKE key exchange, using the new API function\r\n     mbedtls_ssl_set_hs_ecjpake_password_opaque().\r\n\r\nSecurity\r\n   * Use platform-provided secure zeroization function where possible, such as\r\n     explicit_bzero().\r\n   * Zeroize SSL cache entries when they are freed.\r\n   * Fix a potential heap buffer overread in TLS 1.3 client-side when\r\n     MBEDTLS_DEBUG_C is enabled. This may result in an application crash.\r\n   * Add support for AES with the Armv8-A Cryptographic Extension on 64-bit\r\n     Arm, so that these systems are no longer vulnerable to timing side-channel\r\n     attacks. This is configured by MBEDTLS_AESCE_C, which is on by default.\r\n     Reported by Demi Marie Obenour.\r\n   * MBEDTLS_AESNI_C, which is enabled by default, was silently ignored on\r\n     builds that couldn't compile the GCC-style assembly implementation\r\n     (most notably builds with Visual Studio), leaving them vulnerable to\r\n     timing side-channel attacks. There is now an intrinsics-based AES-NI\r\n     implementation as a fallback for when the assembly one cannot be used.\r\n\r\nBugfix\r\n   * Fix possible integer overflow in mbedtls_timing_hardclock(), which\r\n     could cause a crash in programs/test/benchmark.\r\n   * Fix IAR compiler warnings. Fixes #6924.\r\n   * Fix a bug in the build where directory names containing spaces were\r\n     causing generate_errors.pl to error out resulting in a build failure.\r\n     Fixes issue #6879.\r\n   * In TLS 1.3, when using a ticket for session resumption, tweak its age\r\n     calculation on the client side. It prevents a server with more accurate\r\n     ticket timestamps (typically timestamps in milliseconds) compared to the\r\n     Mbed TLS ticket timestamps (in seconds) to compute a ticket age smaller\r\n     than the age computed and transmitted by the client and thus potentially\r\n     reject the ticket. Fix #6623.\r\n   * Fix compile error where MBEDTLS_RSA_C and MBEDTLS_X509_CRT_WRITE_C are\r\n     defined, but MBEDTLS_PK_RSA_ALT_SUPPORT is not defined. Fixes #3174.\r\n   * List PSA_WANT_ALG_CCM_STAR_NO_TAG in psa/crypto_config.h so that it can\r\n     be toggled with config.py.\r\n   * The key derivation algorithm PSA_ALG_TLS12_ECJPAKE_TO_PMS cannot be\r\n     used on a shared secret from a key agreement since its input must be\r\n     an ECC public key. Reject this properly.\r\n   * mbedtls_x509write_crt_set_serial() now explicitly rejects serial numbers\r\n     whose binary representation is longer than 20 bytes. This was already\r\n     forbidden by the standard (RFC5280 - section 4.1.2.2) and now it's being\r\n     enforced also at code level.\r\n   * Fix potential undefined behavior in mbedtls_mpi_sub_abs().  Reported by\r\n     Pascal Cuoq using TrustInSoft Analyzer in #6701; observed independently by\r\n     Aaron Ucko under Valgrind.\r\n   * Fix behavior of certain sample programs which could, when run with no\r\n     arguments, access uninitialized memory in some cases. Fixes #6700 (which\r\n     was found by TrustInSoft Analyzer during REDOCS'22) and #1120.\r\n   * Fix parsing of X.509 SubjectAlternativeName extension. Previously,\r\n     malformed alternative name components were not caught during initial\r\n     certificate parsing, but only on subsequent calls to\r\n     mbedtls_x509_parse_subject_alt_name(). Fixes #2838.\r\n   * Make the fields of mbedtls_pk_rsassa_pss_options public. This makes it\r\n     possible to verify RSA PSS signatures with the pk module, which was\r\n     inadvertently broken since Mbed TLS 3.0.\r\n   * Fix bug in conversion from OID to string in\r\n     mbedtls_oid_get_numeric_string(). OIDs such as 2.40.0.25 are now printed\r\n     correctly.\r\n   * Reject OIDs with overlong-encoded subidentifiers when converting\r\n     them to a string.\r\n   * Reject OIDs with subidentifier values exceeding UINT_MAX.  Such\r\n     subidentifiers can be valid, but Mbed TLS cannot currently handle them.\r\n   * Reject OIDs that have unterminated subidentifiers, or (equivalently)\r\n     have the most-significant bit set in their last byte.\r\n   * Silence warnings from clang -Wdocumentation about empty \\retval\r\n     descriptions, which started appearing with Clang 15. Fixes #6960.\r\n   * Fix the handling of renegotiation attempts in TLS 1.3. They are now\r\n     systematically rejected.\r\n   * Fix an unused-variable warning in TLS 1.3-only builds if\r\n     MBEDTLS_SSL_RENEGOTIATION was enabled. Fixes #6200.\r\n   * Fix undefined behavior in mbedtls_ssl_read() and mbedtls_ssl_write() if\r\n     len argument is 0 and buffer is NULL.\r\n   * Allow setting user and peer identifiers for EC J-PAKE operation\r\n     instead of role in PAKE PSA Crypto API as described in the specification.\r\n     This is a partial fix that allows only \"client\" and \"server\" identifiers.\r\n   * Fix a compilation error when PSA Crypto is built with support for\r\n     TLS12_PRF but not TLS12_PSK_TO_MS. Reported by joerchan in #7125.\r\n   * In the TLS 1.3 server, select the preferred client cipher suite, not the\r\n     least preferred. The selection error was introduced in Mbed TLS 3.3.0.\r\n   * Fix TLS 1.3 session resumption when the established pre-shared key is\r\n     384 bits long. That is the length of pre-shared keys created under a\r\n     session where the cipher suite is TLS_AES_256_GCM_SHA384.\r\n   * Fix an issue when compiling with MBEDTLS_SHA512_USE_A64_CRYPTO_IF_PRESENT\r\n     enabled, which required specifying compiler flags enabling SHA3 Crypto\r\n     Extensions, where some compilers would emit EOR3 instructions in other\r\n     modules, which would then fail if run on a CPU without the SHA3\r\n     extensions. Fixes #5758.\r\n\r\nChanges\r\n   * Install the .cmake files into CMAKE_INSTALL_LIBDIR/cmake/MbedTLS,\r\n     typically /usr/lib/cmake/MbedTLS.\r\n   * Mixed-endian systems are explicitly not supported any more.\r\n   * When MBEDTLS_USE_PSA_CRYPTO and MBEDTLS_ECDSA_DETERMINISTIC are both\r\n     defined, mbedtls_pk_sign() now use deterministic ECDSA for ECDSA\r\n     signatures. This aligns the behaviour with MBEDTLS_USE_PSA_CRYPTO to\r\n     the behaviour without it, where deterministic ECDSA was already used.\r\n   * Visual Studio: Rename the directory containing Visual Studio files from\r\n     visualc/VS2010 to visualc/VS2013 as we do not support building with versions\r\n     older than 2013. Update the solution file to specify VS2013 as a minimum.\r\n   * programs/x509/cert_write:\r\n     - now it accepts the serial number in 2 different formats: decimal and\r\n       hex. They cannot be used simultaneously\r\n     - \"serial\" is used for the decimal format and it's limted in size to\r\n       unsigned long long int\r\n     - \"serial_hex\" is used for the hex format; max length here is\r\n       MBEDTLS_X509_RFC5280_MAX_SERIAL_LEN*2\r\n   * The C code follows a new coding style. This is transparent for users but\r\n     affects contributors and maintainers of local patches. For more\r\n     information, see\r\n     https://mbed-tls.readthedocs.io/en/latest/kb/how-to/rewrite-branch-for-coding-style/\r\n   * Changed the default MBEDTLS_ECP_WINDOW_SIZE from 6 to 2.\r\n     As tested in issue 6790, the correlation between this define and\r\n     RSA decryption performance has changed lately due to security fixes.\r\n     To fix the performance degradation when using default values the\r\n     window was reduced from 6 to 2, a value that gives the best or close\r\n     to best results when tested on Cortex-M4 and Intel i7.\r\n   * When enabling MBEDTLS_SHA256_USE_A64_CRYPTO_* or\r\n     MBEDTLS_SHA512_USE_A64_CRYPTO_*, it is no longer necessary to specify\r\n     compiler target flags on the command line; the library now sets target\r\n     options within the appropriate modules.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\n1b899f355022e8d02c4d313196a0a16af86c5a692456fa99d302915b8cf0320a  mbedtls-3.4.0.tar.gz\r\n9969088c86eb89f6f0a131e699c46ff57058288410f2087bd0d308f65e9fccb5 mbedtls-3.4.0.zip","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/97167521/reactions","total_count":11,"+1":8,"-1":0,"laugh":0,"hooray":3,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/97050006","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/97050006/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/97050006/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v2.28.3","id":97050006,"author":{"login":"paul-elliott-arm","id":62069445,"node_id":"MDQ6VXNlcjYyMDY5NDQ1","avatar_url":"https://avatars.githubusercontent.com/u/62069445?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-elliott-arm","html_url":"https://github.com/paul-elliott-arm","followers_url":"https://api.github.com/users/paul-elliott-arm/followers","following_url":"https://api.github.com/users/paul-elliott-arm/following{/other_user}","gists_url":"https://api.github.com/users/paul-elliott-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-elliott-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-elliott-arm/subscriptions","organizations_url":"https://api.github.com/users/paul-elliott-arm/orgs","repos_url":"https://api.github.com/users/paul-elliott-arm/repos","events_url":"https://api.github.com/users/paul-elliott-arm/events{/privacy}","received_events_url":"https://api.github.com/users/paul-elliott-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4FyN2W","tag_name":"v2.28.3","target_commitish":"mbedtls-2.28","name":"Mbed TLS 2.28.3","draft":false,"immutable":false,"prerelease":false,"created_at":"2023-03-27T14:52:57Z","updated_at":"2023-03-28T12:57:26Z","published_at":"2023-03-28T12:50:22Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v2.28.3","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v2.28.3","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nMbed TLS 2.28 is a long-time support branch. It will be supported with bug-fixes and security fixes until end of 2024.\r\n\r\n## Security Advisories\r\n\r\nThere are no security advisories for this release.\r\n\r\n## Release Notes\r\n\r\nFeatures\r\n   * Use HOSTCC (if it is set) when compiling C code during generation of the\r\n     configuration-independent files. This allows them to be generated when\r\n     CC is set for cross compilation.\r\n   * AES-NI is now supported with Visual Studio.\r\n   * AES-NI is now supported in 32-bit builds, or when MBEDTLS_HAVE_ASM\r\n     is disabled, when compiling with GCC or Clang or a compatible compiler\r\n     for a target CPU that supports the requisite instructions (for example\r\n     gcc -m32 -msse2 -maes -mpclmul). (Generic x86 builds with GCC-like\r\n     compilers still require MBEDTLS_HAVE_ASM and a 64-bit target.)\r\n\r\nSecurity\r\n   * MBEDTLS_AESNI_C, which is enabled by default, was silently ignored on\r\n     builds that couldn't compile the GCC-style assembly implementation\r\n     (most notably builds with Visual Studio), leaving them vulnerable to\r\n     timing side-channel attacks. There is now an intrinsics-based AES-NI\r\n     implementation as a fallback for when the assembly one cannot be used.\r\n\r\nBugfix\r\n   * Fix a build issue on Windows where the source and build directory could\r\n     not be on different drives (#5751).\r\n   * Fix possible integer overflow in mbedtls_timing_hardclock(), which\r\n     could cause a crash for certain platforms & compiler options.\r\n   * Fix IAR compiler warnings. Fixes #6924.\r\n   * Fix a bug in the build where directory names containing spaces were\r\n     causing generate_errors.pl to error out resulting in a build failure.\r\n     Fixes issue #6879.\r\n   * Fix compile error where MBEDTLS_RSA_C and MBEDTLS_X509_CRT_WRITE_C are\r\n     defined, but MBEDTLS_PK_RSA_ALT_SUPPORT is not defined. Fixes #3174.\r\n   * Fix a build issue when defining MBEDTLS_TIMING_ALT and MBEDTLS_SELF_TEST.\r\n     The library would not link if the user didn't provide an external self-test\r\n     function. The self-test is now provided regardless of the choice of\r\n     internal/alternative timing implementation. Fixes #6923.\r\n   * mbedtls_x509write_crt_set_serial() now explicitly rejects serial numbers\r\n     whose binary representation is longer than 20 bytes. This was already\r\n     forbidden by the standard (RFC5280 - section 4.1.2.2) and now it's being\r\n     enforced also at code level.\r\n   * Fix potential undefined behavior in mbedtls_mpi_sub_abs().  Reported by\r\n     Pascal Cuoq using TrustInSoft Analyzer in #6701; observed independently by\r\n     Aaron Ucko under Valgrind.\r\n   * Fix behavior of certain sample programs which could, when run with no\r\n     arguments, access uninitialized memory in some cases. Fixes #6700 (which\r\n     was found by TrustInSoft Analyzer during REDOCS'22) and #1120.\r\n   * Fix build errors in test programs when MBEDTLS_CERTS_C is disabled.\r\n     Fixes #6243.\r\n   * Fix parsing of X.509 SubjectAlternativeName extension. Previously,\r\n     malformed alternative name components were not caught during initial\r\n     certificate parsing, but only on subsequent calls to\r\n     mbedtls_x509_parse_subject_alt_name(). Fixes #2838.\r\n   * Fix bug in conversion from OID to string in\r\n     mbedtls_oid_get_numeric_string(). OIDs such as 2.40.0.25 are now printed\r\n     correctly.\r\n   * Reject OIDs with overlong-encoded subidentifiers when converting\r\n     them to a string.\r\n   * Reject OIDs with subidentifier values exceeding UINT_MAX.  Such\r\n     subidentifiers can be valid, but Mbed TLS cannot currently handle them.\r\n   * Reject OIDs that have unterminated subidentifiers, or (equivalently)\r\n     have the most-significant bit set in their last byte.\r\n   * Silence a warning about an unused local variable in bignum.c on\r\n     some architectures. Fixes #7166.\r\n   * Silence warnings from clang -Wdocumentation about empty \\retval\r\n     descriptions, which started appearing with Clang 15. Fixes #6960.\r\n   * Fix undefined behavior in mbedtls_ssl_read() and mbedtls_ssl_write() if\r\n     len argument is 0 and buffer is NULL.\r\n\r\nChanges\r\n   * The C code follows a new coding style. This is transparent for users but\r\n     affects contributors and maintainers of local patches. For more\r\n     information, see\r\n     https://mbed-tls.readthedocs.io/en/latest/kb/how-to/rewrite-branch-for-coding-style/\r\n   * Changed the default MBEDTLS_ECP_WINDOW_SIZE from 6 to 2.\r\n     As tested in issue 6790, the correlation between this define and\r\n     RSA decryption performance has changed lately due to security fixes.\r\n     To fix the performance degradation when using default values the\r\n     window was reduced from 6 to 2, a value that gives the best or close\r\n     to best results when tested on Cortex-M4 and Intel i7.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\nbdf7c5bbdc338da3edad89b2885d4f8668f9a6fffeba6ec17a60333e36dade6f mbedtls-2.28.3.tar.gz\r\n0c0abbd6e33566c5c3c15af4fc19466c8edb62fa483d4ce98f1ba3f656656d2d mbedtls-2.28.3.zip","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/97050006/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/85753252","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/85753252/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/85753252/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.3.0","id":85753252,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4FHH2k","tag_name":"v3.3.0","target_commitish":"development","name":"Mbed TLS 3.3.0","draft":false,"immutable":false,"prerelease":false,"created_at":"2022-12-14T19:10:09Z","updated_at":"2022-12-14T19:31:00Z","published_at":"2022-12-14T19:28:25Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v3.3.0","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v3.3.0","body":"## Description\r\n\r\nThis release of Mbed TLS provides new features, bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\n## Security Advisories\r\n\r\nThere are no security advisories for this release.\r\n\r\n## Release Notes\r\n\r\nDefault behavior changes\r\n   * Previously the macro MBEDTLS_SSL_DTLS_CONNECTION_ID implemented version 05\r\n     of the IETF draft, and was marked experimental and disabled by default.\r\n     It is now no longer experimental, and implements the final version from\r\n     RFC 9146, which is not interoperable with the draft-05 version.\r\n     If you need to communicate with peers that use earlier versions of\r\n     Mbed TLS, then you need to define MBEDTLS_SSL_DTLS_CONNECTION_ID_COMPAT\r\n     to 1, but then you won't be able to communicate with peers that use the\r\n     standard (non-draft) version.\r\n     If you need to interoperate with both classes of peers with the\r\n     same build of Mbed TLS, please let us know about your situation on the\r\n     mailing list or GitHub.\r\n\r\nRequirement changes\r\n   * When building with PSA drivers using generate_driver_wrappers.py, or\r\n     when building the library from the development branch rather than\r\n     from a release, the Python module jsonschema is now necessary, in\r\n     addition to jinja2. The official list of required Python modules is\r\n     maintained in scripts/basic.requirements.txt and may change again\r\n     in the future.\r\n\r\nNew deprecations\r\n   * Deprecate mbedtls_asn1_free_named_data().\r\n     Use mbedtls_asn1_free_named_data_list()\r\n     or mbedtls_asn1_free_named_data_list_shallow().\r\n\r\nFeatures\r\n   * Support rsa_pss_rsae_* signature algorithms in TLS 1.2.\r\n   * make: enable building unversioned shared library, with e.g.:\r\n     \"SHARED=1 SOEXT_TLS=so SOEXT_X509=so SOEXT_CRYPTO=so make lib\"\r\n     resulting in library names like \"libmbedtls.so\" rather than\r\n     \"libmbedcrypto.so.11\".\r\n   * Expose the EC J-PAKE functionality through the Draft PSA PAKE Crypto API.\r\n     Only the ECC primitive with secp256r1 curve and SHA-256 hash algorithm\r\n     are supported in this implementation.\r\n   * Some modules can now use PSA drivers for hashes, including with no\r\n     built-in implementation present, but only in some configurations.\r\n     - RSA OAEP and PSS (PKCS#1 v2.1), PKCS5, PKCS12 and EC J-PAKE now use\r\n       hashes from PSA when (and only when) MBEDTLS_MD_C is disabled.\r\n     - PEM parsing of encrypted files now uses MD-5 from PSA when (and only\r\n       when) MBEDTLS_MD5_C is disabled.\r\n     See the documentation of the corresponding macros in mbedtls_config.h for\r\n     details.\r\n     Note that some modules are not able to use hashes from PSA yet, including\r\n     the entropy module. As a consequence, for now the only way to build with\r\n     all hashes only provided by drivers (no built-in hash) is to use\r\n     MBEDTLS_PSA_CRYPTO_EXTERNAL_RNG.\r\n   * When MBEDTLS_USE_PSA_CRYPTO is enabled, X.509, TLS 1.2 and TLS 1.3 now\r\n     properly negotiate/accept hashes based on their availability in PSA.\r\n     As a consequence, they now work in configurations where the built-in\r\n     implementations of (some) hashes are excluded and those hashes are only\r\n     provided by PSA drivers. (See previous entry for limitation on RSA-PSS\r\n     though: that module only use hashes from PSA when MBEDTLS_MD_C is off).\r\n   * Add support for opaque keys as the private keys associated to certificates\r\n     for authentication in TLS 1.3.\r\n   * Add the LMS post-quantum-safe stateful-hash asymmetric signature scheme.\r\n     Signature verification is production-ready, but generation is for testing\r\n     purposes only. This currently only supports one parameter set\r\n     (LMS_SHA256_M32_H10), meaning that each private key can be used to sign\r\n     1024 messages. As such, it is not intended for use in TLS, but instead\r\n     for verification of assets transmitted over an insecure channel,\r\n     particularly firmware images.\r\n   * Add the LM-OTS post-quantum-safe one-time signature scheme, which is\r\n     required for LMS. This can be used independently, but each key can only\r\n     be used to sign one message so is impractical for most circumstances.\r\n   * Mbed TLS now supports TLS 1.3 key establishment via pre-shared keys.\r\n     The pre-shared keys can be provisioned externally or via the ticket\r\n     mechanism (session resumption).\r\n     The ticket mechanism is supported when the configuration option\r\n     MBEDTLS_SSL_SESSION_TICKETS is enabled.\r\n     New options MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_xxx_ENABLED\r\n     control the support for the three possible TLS 1.3 key exchange modes.\r\n   * cert_write: support for setting extended key usage attributes. A\r\n     corresponding new public API call has been added in the library,\r\n     mbedtls_x509write_crt_set_ext_key_usage().\r\n   * cert_write: support for writing certificate files in either PEM\r\n     or DER format.\r\n   * The PSA driver wrapper generator generate_driver_wrappers.py now\r\n     supports a subset of the driver description language, including\r\n     the following entry points: import_key, export_key, export_public_key,\r\n     get_builtin_key, copy_key.\r\n   * The new functions mbedtls_asn1_free_named_data_list() and\r\n     mbedtls_asn1_free_named_data_list_shallow() simplify the management\r\n     of memory in named data lists in X.509 structures.\r\n   * The TLS 1.2 EC J-PAKE key exchange can now use the PSA Crypto API.\r\n     Additional PSA key slots will be allocated in the process of such key\r\n     exchange for builds that enable MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED and\r\n     MBEDTLS_USE_PSA_CRYPTO.\r\n   * Add support for DTLS Connection ID as defined by RFC 9146, controlled by\r\n     MBEDTLS_SSL_DTLS_CONNECTION_ID (enabled by default) and configured with\r\n     mbedtls_ssl_set_cid().\r\n   * Add a driver dispatch layer for raw key agreement, enabling alternative\r\n     implementations of raw key agreement through the key_agreement driver\r\n     entry point. This entry point is specified in the proposed PSA driver\r\n     interface, but had not yet been implemented.\r\n   * Add an ad-hoc key derivation function handling EC J-PAKE to PMS\r\n     calculation that can be used to derive the session secret in TLS 1.2,\r\n     as described in draft-cragie-tls-ecjpake-01. This can be achieved by\r\n     using PSA_ALG_TLS12_ECJPAKE_TO_PMS as the key derivation algorithm.\r\n\r\nSecurity\r\n   * Fix potential heap buffer overread and overwrite in DTLS if\r\n     MBEDTLS_SSL_DTLS_CONNECTION_ID is enabled and\r\n     MBEDTLS_SSL_CID_IN_LEN_MAX > 2 * MBEDTLS_SSL_CID_OUT_LEN_MAX.\r\n   * An adversary with access to precise enough information about memory\r\n     accesses (typically, an untrusted operating system attacking a secure\r\n     enclave) could recover an RSA private key after observing the victim\r\n     performing a single private-key operation if the window size used for the\r\n     exponentiation was 3 or smaller. Found and reported by Zili KOU,\r\n     Wenjian HE, Sharad Sinha, and Wei ZHANG. See \"Cache Side-channel Attacks\r\n     and Defenses of the Sliding Window Algorithm in TEEs\" - Design, Automation\r\n     and Test in Europe 2023.\r\n\r\nBugfix\r\n   * Refactor mbedtls_aes_context to support shallow-copying. Fixes #2147.\r\n   * Fix an issue with in-tree CMake builds in releases with GEN_FILES\r\n     turned off: if a shipped file was missing from the working directory,\r\n     it could be turned into a symbolic link to itself.\r\n   * Fix a long-standing build failure when building x86 PIC code with old\r\n     gcc (4.x). The code will be slower, but will compile. We do however\r\n     recommend upgrading to a more recent compiler instead. Fixes #1910.\r\n   * Fix support for little-endian Microblaze when MBEDTLS_HAVE_ASM is defined.\r\n     Contributed by Kazuyuki Kimura to fix #2020.\r\n   * Use double quotes to include private header file psa_crypto_cipher.h.\r\n     Fixes 'file not found with <angled> include' error\r\n     when building with Xcode.\r\n   * Fix handling of broken symlinks when loading certificates using\r\n     mbedtls_x509_crt_parse_path(). Instead of returning an error as soon as a\r\n     broken link is encountered, skip the broken link and continue parsing\r\n     other certificate files. Contributed by Eduardo Silva in #2602.\r\n   * Fix an interoperability failure between an Mbed TLS client with both\r\n     TLS 1.2 and TLS 1.3 support, and a TLS 1.2 server that supports\r\n     rsa_pss_rsae_* signature algorithms. This failed because Mbed TLS\r\n     advertised support for PSS in both TLS 1.2 and 1.3, but only\r\n     actually supported PSS in TLS 1.3.\r\n   * Fix a compilation error when using CMake with an IAR toolchain.\r\n     Fixes #5964.\r\n   * Fix a build error due to a missing prototype warning when\r\n     MBEDTLS_DEPRECATED_REMOVED is enabled.\r\n   * Fix mbedtls_ctr_drbg_free() on an initialized but unseeded context. When\r\n     MBEDTLS_AES_ALT is enabled, it could call mbedtls_aes_free() on an\r\n     uninitialized context.\r\n   * Fix a build issue on Windows using CMake where the source and build\r\n     directories could not be on different drives. Fixes #5751.\r\n   * Fix bugs and missing dependencies when building and testing\r\n     configurations with only one encryption type enabled in TLS 1.2.\r\n   * Provide the missing definition of mbedtls_setbuf() in some configurations\r\n     with MBEDTLS_PLATFORM_C disabled. Fixes #6118, #6196.\r\n   * Fix compilation errors when trying to build with\r\n     PSA drivers for AEAD (GCM, CCM, Chacha20-Poly1305).\r\n   * Fix memory leak in ssl_parse_certificate_request() caused by\r\n     mbedtls_x509_get_name() not freeing allocated objects in case of error.\r\n     Change mbedtls_x509_get_name() to clean up allocated objects on error.\r\n   * Fix build failure with MBEDTLS_RSA_C and MBEDTLS_PSA_CRYPTO_C but not\r\n     MBEDTLS_USE_PSA_CRYPTO or MBEDTLS_PK_WRITE_C. Fixes #6408.\r\n   * Fix build failure with MBEDTLS_RSA_C and MBEDTLS_PSA_CRYPTO_C but not\r\n     MBEDTLS_PK_PARSE_C. Fixes #6409.\r\n   * Fix ECDSA verification, where it was not always validating the\r\n     public key. This bug meant that it was possible to verify a\r\n     signature with an invalid public key, in some cases. Reported by\r\n     Guido Vranken using Cryptofuzz in #4420.\r\n   * Fix a possible null pointer dereference if a memory allocation fails\r\n     in TLS PRF code. Reported by Michael Madsen in #6516.\r\n   * Fix TLS 1.3 session resumption. Fixes #6488.\r\n   * Add a configuration check to exclude optional client authentication\r\n     in TLS 1.3 (where it is forbidden).\r\n   * Fix a bug in which mbedtls_x509_crt_info() would produce non-printable\r\n     bytes when parsing certificates containing a binary RFC 4108\r\n     HardwareModuleName as a Subject Alternative Name extension. Hardware\r\n     serial numbers are now rendered in hex format. Fixes #6262.\r\n   * Fix bug in error reporting in dh_genprime.c where upon failure,\r\n     the error code returned by mbedtls_mpi_write_file() is overwritten\r\n     and therefore not printed.\r\n   * In the bignum module, operations of the form (-A) - (+A) or (-A) - (-A)\r\n     with A > 0 created an unintended representation of the value 0 which was\r\n     not processed correctly by some bignum operations. Fix this. This had no\r\n     consequence on cryptography code, but might affect applications that call\r\n     bignum directly and use negative numbers.\r\n   * Fix a bug whereby the list of signature algorithms sent as part of\r\n     the TLS 1.2 server certificate request would get corrupted, meaning the\r\n     first algorithm would not get sent and an entry consisting of two random\r\n     bytes would be sent instead. Found by Serban Bejan and Dudek Sebastian.\r\n   * Fix undefined behavior (typically harmless in practice) of\r\n     mbedtls_mpi_add_mpi(), mbedtls_mpi_add_abs() and mbedtls_mpi_add_int()\r\n     when both operands are 0 and the left operand is represented with 0 limbs.\r\n   * Fix undefined behavior (typically harmless in practice) when some bignum\r\n     functions receive the most negative value of mbedtls_mpi_sint. Credit\r\n     to OSS-Fuzz. Fixes #6597.\r\n   * Fix undefined behavior (typically harmless in practice) in PSA ECB\r\n     encryption and decryption.\r\n   * Move some SSL-specific code out of libmbedcrypto where it had been placed\r\n     accidentally.\r\n   * Fix a build error when compiling the bignum module for some Arm platforms.\r\n     Fixes #6089, #6124, #6217.\r\n\r\nChanges\r\n   * Add the ability to query PSA_WANT_xxx macros to query_compile_time_config.\r\n   * Calling AEAD tag-specific functions for non-AEAD algorithms (which\r\n     should not be done - they are documented for use only by AES-GCM and\r\n     ChaCha20+Poly1305) now returns MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE\r\n     instead of success (0).\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\n113fa84bc3cf862d56e7be0a656806a5d02448215d1e22c98176b1c372345d33  mbedtls-3.3.0.tar.gz\r\nc217b670d83f45144f8d9790151b6827ebafac5fdeedd0323571e36a02624792  mbedtls-3.3.0.zip","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/85753252/reactions","total_count":6,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":5,"rocket":1,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/85752511","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/85752511/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/85752511/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v2.28.2","id":85752511,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4FHHq_","tag_name":"v2.28.2","target_commitish":"mbedtls-2.28","name":"Mbed TLS 2.28.2","draft":false,"immutable":false,"prerelease":false,"created_at":"2022-12-12T15:34:06Z","updated_at":"2022-12-14T19:31:29Z","published_at":"2022-12-14T19:27:40Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v2.28.2","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v2.28.2","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nMbed TLS 2.28 is a long-time support branch. It will be supported with bug-fixes and security fixes until end of 2024.\r\n\r\n## Security Advisories\r\n\r\nThere are no security advisories for this release.\r\n\r\n## Release Notes\r\n\r\nSecurity\r\n   * Fix potential heap buffer overread and overwrite in DTLS if\r\n     MBEDTLS_SSL_DTLS_CONNECTION_ID is enabled and\r\n     MBEDTLS_SSL_CID_IN_LEN_MAX > 2 * MBEDTLS_SSL_CID_OUT_LEN_MAX.\r\n   * An adversary with access to precise enough information about memory\r\n     accesses (typically, an untrusted operating system attacking a secure\r\n     enclave) could recover an RSA private key after observing the victim\r\n     performing a single private-key operation if the window size used for the\r\n     exponentiation was 3 or smaller. Found and reported by Zili KOU,\r\n     Wenjian HE, Sharad Sinha, and Wei ZHANG. See \"Cache Side-channel Attacks\r\n     and Defenses of the Sliding Window Algorithm in TEEs\" - Design, Automation\r\n     and Test in Europe 2023.\r\n\r\nBugfix\r\n   * Fix a long-standing build failure when building x86 PIC code with old\r\n     gcc (4.x). The code will be slower, but will compile. We do however\r\n     recommend upgrading to a more recent compiler instead. Fixes #1910.\r\n   * Fix support for little-endian Microblaze when MBEDTLS_HAVE_ASM is defined.\r\n     Contributed by Kazuyuki Kimura to fix #2020.\r\n   * Use double quotes to include private header file psa_crypto_cipher.h.\r\n     Fixes 'file not found with <angled> include' error\r\n     when building with Xcode.\r\n   * Fix handling of broken symlinks when loading certificates using\r\n     mbedtls_x509_crt_parse_path(). Instead of returning an error as soon as a\r\n     broken link is encountered, skip the broken link and continue parsing\r\n     other certificate files. Contributed by Eduardo Silva in #2602.\r\n   * Fix a compilation error when using CMake with an IAR toolchain.\r\n     Fixes #5964.\r\n   * Fix bugs and missing dependencies when building and testing\r\n     configurations with only one encryption type enabled in TLS 1.2.\r\n   * Provide the missing definition of mbedtls_setbuf() in some configurations\r\n     with MBEDTLS_PLATFORM_C disabled. Fixes #6118, #6196.\r\n   * Fix compilation errors when trying to build with\r\n     PSA drivers for AEAD (GCM, CCM, Chacha20-Poly1305).\r\n   * Fix memory leak in ssl_parse_certificate_request() caused by\r\n     mbedtls_x509_get_name() not freeing allocated objects in case of error.\r\n     Change mbedtls_x509_get_name() to clean up allocated objects on error.\r\n   * Fix checks on PK in check_config.h for builds with PSA and RSA. This does\r\n     not change which builds actually work, only moving a link-time error to\r\n     an early check.\r\n   * Fix ECDSA verification, where it was not always validating the\r\n     public key. This bug meant that it was possible to verify a\r\n     signature with an invalid public key, in some cases. Reported by\r\n     Guido Vranken using Cryptofuzz in #4420.\r\n   * Fix a possible null pointer dereference if a memory allocation fails\r\n     in TLS PRF code. Reported by Michael Madsen in #6516.\r\n   * Fix a bug in which mbedtls_x509_crt_info() would produce non-printable\r\n     bytes when parsing certificates containing a binary RFC 4108\r\n     HardwareModuleName as a Subject Alternative Name extension. Hardware\r\n     serial numbers are now rendered in hex format. Fixes #6262.\r\n   * Fix bug in error reporting in dh_genprime.c where upon failure,\r\n     the error code returned by mbedtls_mpi_write_file() is overwritten\r\n     and therefore not printed.\r\n   * In the bignum module, operations of the form (-A) - (+A) or (-A) - (-A)\r\n     with A > 0 created an unintended representation of the value 0 which was\r\n     not processed correctly by some bignum operations. Fix this. This had no\r\n     consequence on cryptography code, but might affect applications that call\r\n     bignum directly and use negative numbers.\r\n   * Fix undefined behavior (typically harmless in practice) of\r\n     mbedtls_mpi_add_mpi(), mbedtls_mpi_add_abs() and mbedtls_mpi_add_int()\r\n     when both operands are 0 and the left operand is represented with 0 limbs.\r\n   * Fix undefined behavior (typically harmless in practice) when some bignum\r\n     functions receive the most negative value of mbedtls_mpi_sint. Credit\r\n     to OSS-Fuzz. Fixes #6597.\r\n   * Fix undefined behavior (typically harmless in practice) in PSA ECB\r\n     encryption and decryption.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\nbc55232bf71fd66045122ba9050a29ea7cb2e8f99b064a9e6334a82f715881a0 mbedtls-2.28.2.tar.gz\r\n4e4c4d5fd062dc29160edb916fb969878682221a142bda2be5db40e60125912c mbedtls-2.28.2.zip"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/71797730","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/71797730/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/71797730/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.2.1","id":71797730,"author":{"login":"paul-elliott-arm","id":62069445,"node_id":"MDQ6VXNlcjYyMDY5NDQ1","avatar_url":"https://avatars.githubusercontent.com/u/62069445?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-elliott-arm","html_url":"https://github.com/paul-elliott-arm","followers_url":"https://api.github.com/users/paul-elliott-arm/followers","following_url":"https://api.github.com/users/paul-elliott-arm/following{/other_user}","gists_url":"https://api.github.com/users/paul-elliott-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-elliott-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-elliott-arm/subscriptions","organizations_url":"https://api.github.com/users/paul-elliott-arm/orgs","repos_url":"https://api.github.com/users/paul-elliott-arm/repos","events_url":"https://api.github.com/users/paul-elliott-arm/events{/privacy}","received_events_url":"https://api.github.com/users/paul-elliott-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4ER4vi","tag_name":"v3.2.1","target_commitish":"development","name":"Mbed TLS 3.2.1","draft":false,"immutable":false,"prerelease":false,"created_at":"2022-07-12T09:56:56Z","updated_at":"2022-08-15T15:34:50Z","published_at":"2022-07-12T15:27:29Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v3.2.1","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v3.2.1","body":"## Description\r\n\r\nThis release is functionally identical to 3.2.0, but includes a file that was missing from the 3.2.0 release (see #6084). It includes all of the changes that went into 3.2.0, which are described here: https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.2.0\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following link:\r\n\r\nhttps://mbed-tls.readthedocs.io/en/latest/security-advisories/advisories/mbedtls-security-advisory-2022-07.html\r\n\r\n## Release Notes\r\n\r\nBugfix\r\n   *  Add missing generated file library/ssl_debug_helpers_generated.c\r\n\r\n## Visual Studio build issue\r\nThis release does not build out of the box on Visual Studio, because the project file is missing a reference to a file (see #6198 for details on the issue and how to address it).\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\nd0e77a020f69ad558efc660d3106481b75bd3056d6301c31564e04a0faae88cc  mbedtls-3.2.1.tar.gz\r\nefeac7fb687d19a7c7dc60f5e60265edd528244856cf3db2e2aecacece08b23f     mbedtls-3.2.1.zip","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/71797730/reactions","total_count":6,"+1":6,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/71722388","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/71722388/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/71722388/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.2.0","id":71722388,"author":{"login":"paul-elliott-arm","id":62069445,"node_id":"MDQ6VXNlcjYyMDY5NDQ1","avatar_url":"https://avatars.githubusercontent.com/u/62069445?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-elliott-arm","html_url":"https://github.com/paul-elliott-arm","followers_url":"https://api.github.com/users/paul-elliott-arm/followers","following_url":"https://api.github.com/users/paul-elliott-arm/following{/other_user}","gists_url":"https://api.github.com/users/paul-elliott-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-elliott-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-elliott-arm/subscriptions","organizations_url":"https://api.github.com/users/paul-elliott-arm/orgs","repos_url":"https://api.github.com/users/paul-elliott-arm/repos","events_url":"https://api.github.com/users/paul-elliott-arm/events{/privacy}","received_events_url":"https://api.github.com/users/paul-elliott-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4ERmWU","tag_name":"v3.2.0","target_commitish":"development","name":"Mbed TLS 3.2.0","draft":false,"immutable":false,"prerelease":false,"created_at":"2022-07-11T16:29:07Z","updated_at":"2022-07-14T18:00:54Z","published_at":"2022-07-11T19:14:04Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v3.2.0","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v3.2.0","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\n## Cmake build error\r\n\r\nThere is a minor issue building with Cmake relating to a missing generated file (as per #6084). To work around this, please build once with make before running cmake. We are currently preparing 3.2.1, which will fix this (with no other changes).\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following link:\r\n\r\nhttps://mbed-tls.readthedocs.io/en/latest/security-advisories/advisories/mbedtls-security-advisory-2022-07.html\r\n\r\n## Release Notes\r\n\r\nDefault behavior changes\r\n   * mbedtls_cipher_set_iv will now fail with ChaCha20 and ChaCha20+Poly1305\r\n     for IV lengths other than 12. The library was silently overwriting this\r\n     length with 12, but did not inform the caller about it. Fixes #4301.\r\n\r\nRequirement changes\r\n   * The library will no longer compile out of the box on a platform without\r\n     setbuf(). If your platform does not have setbuf(), you can configure an\r\n     alternative function by enabling MBEDTLS_PLATFORM_SETBUF_ALT or\r\n     MBEDTLS_PLATFORM_SETBUF_MACRO.\r\n\r\nNew deprecations\r\n   * Deprecate mbedtls_ssl_conf_max_version() and\r\n     mbedtls_ssl_conf_min_version() in favor of\r\n     mbedtls_ssl_conf_max_tls_version() and\r\n     mbedtls_ssl_conf_min_tls_version().\r\n   * Deprecate mbedtls_cipher_setup_psa(). Use psa_aead_xxx() or\r\n     psa_cipher_xxx() directly instead.\r\n   * Secure element drivers enabled by MBEDTLS_PSA_CRYPTO_SE_C are deprecated.\r\n     This was intended as an experimental feature, but had not been explicitly\r\n     documented as such. Use opaque drivers with the interface enabled by\r\n     MBEDTLS_PSA_CRYPTO_DRIVERS instead.\r\n   * Deprecate mbedtls_ssl_conf_sig_hashes() in favor of the more generic\r\n     mbedtls_ssl_conf_sig_algs(). Signature algorithms for the TLS 1.2 and\r\n     TLS 1.3 handshake should now be configured with\r\n     mbedtls_ssl_conf_sig_algs().\r\n\r\nFeatures\r\n   * Add accessor to obtain ciphersuite id from ssl context.\r\n   * Add accessors to get members from ciphersuite info.\r\n   * Add mbedtls_ssl_ticket_rotate() for external ticket rotation.\r\n   * Add accessor to get the raw buffer pointer from a PEM context.\r\n   * The structures mbedtls_ssl_config and mbedtls_ssl_context now store\r\n     a piece of user data which is reserved for the application. The user\r\n     data can be either a pointer or an integer.\r\n   * Add an accessor function to get the configuration associated with\r\n     an SSL context.\r\n   * Add a function to access the protocol version from an SSL context in a\r\n     form that's easy to compare. Fixes #5407.\r\n   * Add function mbedtls_md_info_from_ctx() to recall the message digest\r\n     information that was used to set up a message digest context.\r\n   * Add ALPN support in TLS 1.3 clients.\r\n   * Add server certificate selection callback near end of Client Hello.\r\n     Register callback with mbedtls_ssl_conf_cert_cb().\r\n   * Provide mechanism to reset handshake cert list by calling\r\n     mbedtls_ssl_set_hs_own_cert() with NULL value for own_cert param.\r\n   * Add accessor mbedtls_ssl_get_hs_sni() to retrieve SNI from within\r\n     cert callback (mbedtls_ssl_conf_cert_cb()) during handshake.\r\n   * The X.509 module now uses PSA hash acceleration if present.\r\n   * Add support for psa crypto key derivation for elliptic curve\r\n     keys. Fixes #3260.\r\n   * Add function mbedtls_timing_get_final_delay() to access the private\r\n     final delay field in an mbedtls_timing_delay_context, as requested in\r\n     #5183.\r\n    * Add mbedtls_pk_sign_ext() which allows generating RSA-PSS signatures when\r\n      PSA Crypto is enabled.\r\n   * Add function mbedtls_ecp_export() to export ECP key pair parameters.\r\n     Fixes #4838.\r\n   * Add function mbedtls_ssl_is_handshake_over() to enable querying if the SSL\r\n     Handshake has completed or not, and thus whether to continue calling\r\n     mbedtls_ssl_handshake_step(), requested in #4383.\r\n   * Add the function mbedtls_ssl_get_own_cid() to access our own connection id\r\n     within mbedtls_ssl_context, as requested in #5184.\r\n   * Introduce mbedtls_ssl_hs_cb_t typedef for use with\r\n     mbedtls_ssl_conf_cert_cb() and perhaps future callbacks\r\n     during TLS handshake.\r\n   * Add functions mbedtls_ssl_conf_max_tls_version() and\r\n     mbedtls_ssl_conf_min_tls_version() that use a single value to specify\r\n     the protocol version.\r\n    * Extend the existing PSA_ALG_TLS12_PSK_TO_MS() algorithm to support\r\n      mixed-PSK. Add an optional input PSA_KEY_DERIVATION_INPUT_OTHER_SECRET\r\n      holding the other secret.\r\n   * When MBEDTLS_PSA_CRYPTO_CONFIG is enabled, you may list the PSA crypto\r\n     feature requirements in the file named by the new macro\r\n     MBEDTLS_PSA_CRYPTO_CONFIG_FILE instead of the default psa/crypto_config.h.\r\n     Furthermore you may name an additional file to include after the main\r\n     file with the macro MBEDTLS_PSA_CRYPTO_USER_CONFIG_FILE.\r\n   * Add the function mbedtls_x509_crt_has_ext_type() to access the ext types\r\n     field within mbedtls_x509_crt context, as requested in #5585.\r\n   * Add HKDF-Expand and HKDF-Extract as separate algorithms in the PSA API.\r\n   * Add support for the ARMv8 SHA-2 acceleration instructions when building\r\n     for Aarch64.\r\n   * Add support for authentication of TLS 1.3 clients by TLS 1.3 servers.\r\n   * Add support for server HelloRetryRequest message. The TLS 1.3 client is\r\n     now capable of negotiating another shared secret if the one sent in its\r\n     first ClientHello was not suitable to the server.\r\n   * Add support for client-side TLS version negotiation. If both TLS 1.2 and\r\n     TLS 1.3 protocols are enabled in the build of Mbed TLS, the TLS client now\r\n     negotiates TLS 1.3 or TLS 1.2 with TLS servers.\r\n   * Enable building of Mbed TLS with TLS 1.3 protocol support but without TLS\r\n     1.2 protocol support.\r\n   * Mbed TLS provides an implementation of a TLS 1.3 server (ephemeral key\r\n     establishment only). See docs/architecture/tls13-support.md for a\r\n     description of the support. The MBEDTLS_SSL_PROTO_TLS1_3 and\r\n     MBEDTLS_SSL_SRV_C configuration options control this.\r\n   * Add accessors to configure DN hints for certificate request:\r\n     mbedtls_ssl_conf_dn_hints() and mbedtls_ssl_set_hs_dn_hints()\r\n   * The configuration option MBEDTLS_USE_PSA_CRYPTO, which previously\r\n     affected only a limited subset of crypto operations in TLS, X.509 and PK,\r\n     now causes most of them to be done using PSA Crypto; see\r\n     docs/use-psa-crypto.md for the list of exceptions.\r\n   * The function mbedtls_pk_setup_opaque() now supports RSA key pairs as well.\r\n     Opaque keys can now be used everywhere a private key is expected in the\r\n     TLS and X.509 modules.\r\n   * Opaque pre-shared keys for TLS, provisioned with\r\n     mbedtls_ssl_conf_psk_opaque() or mbedtls_ssl_set_hs_psk_opaque(), which\r\n     previously only worked for \"pure\" PSK key exchange, now can also be used\r\n     for the \"mixed\" PSK key exchanges as well: ECDHE-PSK, DHE-PSK, RSA-PSK.\r\n   * cmake now detects if it is being built as a sub-project, and in that case\r\n     disables the target export/installation and package configuration.\r\n   * Make USE_PSA_CRYPTO compatible with KEY_ID_ENCODES_OWNER. Fixes #5259.\r\n   * Add example programs cipher_aead_demo.c, md_hmac_demo.c, aead_demo.c\r\n     and hmac_demo.c, which use PSA and the md/cipher interfaces side\r\n     by side in order to illustrate how the operation is performed in PSA.\r\n     Addresses #5208.\r\n\r\nSecurity\r\n   * Zeroize dynamically-allocated buffers used by the PSA Crypto key storage\r\n     module before freeing them. These buffers contain secret key material, and\r\n     could thus potentially leak the key through freed heap.\r\n   * Fix potential memory leak inside mbedtls_ssl_cache_set() with\r\n     an invalid session id length.\r\n   * Add the platform function mbedtls_setbuf() to allow buffering to be\r\n     disabled on stdio files, to stop secrets loaded from said files being\r\n     potentially left in memory after file operations. Reported by\r\n     Glenn Strauss.\r\n   * Fix a potential heap buffer overread in TLS 1.2 server-side when\r\n     MBEDTLS_USE_PSA_CRYPTO is enabled, an opaque key (created with\r\n     mbedtls_pk_setup_opaque()) is provisioned, and a static ECDH ciphersuite\r\n     is selected. This may result in an application crash or potentially an\r\n     information leak.\r\n   * Fix a buffer overread in DTLS ClientHello parsing in servers with\r\n     MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE enabled. An unauthenticated client\r\n     or a man-in-the-middle could cause a DTLS server to read up to 255 bytes\r\n     after the end of the SSL input buffer. The buffer overread only happens\r\n     when MBEDTLS_SSL_IN_CONTENT_LEN is less than a threshold that depends on\r\n     the exact configuration: 258 bytes if using mbedtls_ssl_cookie_check(),\r\n     and possibly up to 571 bytes with a custom cookie check function.\r\n     Reported by the Cybeats PSI Team.\r\n   * Fix a buffer overread in TLS 1.3 Certificate parsing. An unauthenticated\r\n      client or server could cause an MbedTLS server or client to overread up\r\n      to 64 kBytes of data and potentially overread the input buffer by that\r\n      amount minus the size of the input buffer. As overread data undergoes\r\n      various checks, the likelihood of reaching the boundary of the input\r\n      buffer is rather small but increases as its size\r\n      MBEDTLS_SSL_IN_CONTENT_LEN decreases.\r\n   * Fix check of certificate key usage in TLS 1.3. The usage of the public key\r\n     provided by a client or server certificate for authentication was not\r\n     checked properly when validating the certificate. This could cause a\r\n     client or server to be able to authenticate itself through a certificate\r\n     to an Mbed TLS TLS 1.3 server or client while it does not own a proper\r\n     certificate to do so.\r\n\r\nBugfix\r\n   * Declare or use PSA_WANT_ALG_CCM_STAR_NO_TAG following the general\r\n     pattern for PSA_WANT_xxx symbols. Previously you had to specify\r\n     PSA_WANT_ALG_CCM for PSA_ALG_CCM_STAR_NO_TAG.\r\n   * Fix a memory leak if mbedtls_ssl_config_defaults() is called twice.\r\n   * Fixed swap of client and server random bytes when exporting them alongside\r\n     TLS 1.3 handshake and application traffic secret.\r\n   * Fix several bugs (warnings, compiler and linker errors, test failures)\r\n     in reduced configurations when MBEDTLS_USE_PSA_CRYPTO is enabled.\r\n   * Fix a bug in (D)TLS curve negotiation: when MBEDTLS_USE_PSA_CRYPTO was\r\n     enabled and an ECDHE-ECDSA or ECDHE-RSA key exchange was used, the\r\n     client would fail to check that the curve selected by the server for\r\n     ECDHE was indeed one that was offered. As a result, the client would\r\n     accept any curve that it supported, even if that curve was not allowed\r\n     according to its configuration. Fixes #5291.\r\n   * The TLS 1.3 implementation is now compatible with the\r\n     MBEDTLS_USE_PSA_CRYPTO configuration option.\r\n   * Fix unit tests that used 0 as the file UID. This failed on some\r\n     implementations of PSA ITS. Fixes #3838.\r\n   * Fix mbedtls_ssl_get_version() not reporting TLSv1.3. Fixes #5406.\r\n   * Fix API violation in mbedtls_md_process() test by adding a call to\r\n     mbedtls_md_starts(). Fixes #2227.\r\n   * Fix compile errors when MBEDTLS_HAVE_TIME is not defined. Add tests\r\n     to catch bad uses of time.h.\r\n   * Fix a race condition in out-of-source builds with CMake when generated data\r\n     files are already present. Fixes #5374.\r\n   * Fix the library search path when building a shared library with CMake\r\n     on Windows.\r\n   * Fix bug in the alert sending function mbedtls_ssl_send_alert_message()\r\n     potentially leading to corrupted alert messages being sent in case\r\n     the function needs to be re-called after initially returning\r\n     MBEDTLS_SSL_WANT_WRITE. Fixes #1916.\r\n   * In configurations with MBEDTLS_SSL_DTLS_CONNECTION_ID enabled but not\r\n     MBEDTLS_DEBUG_C, DTLS handshakes using CID would crash due to a null\r\n     pointer dereference. Fix this. Fixes #3998.\r\n     The fix was released, but not announced, in Mbed TLS 3.1.0.\r\n   * Fix incorrect documentation of mbedtls_x509_crt_profile. The previous\r\n     documentation stated that the `allowed_pks` field applies to signatures\r\n     only, but in fact it does apply to the public key type of the end entity\r\n     certificate, too. Fixes #1992.\r\n   * Fix undefined behavior in mbedtls_asn1_find_named_data(), where val is\r\n     not NULL and val_len is zero.\r\n   * Fix compilation error with mingw32. Fixed by Cameron Cawley in #4211.\r\n   * Fix compilation error when using C++ Builder on Windows. Reported by\r\n     Miroslav Mastny in #4015.\r\n   * psa_raw_key_agreement() now returns PSA_ERROR_BUFFER_TOO_SMALL when\r\n     applicable. Fixes #5735.\r\n   * Fix a bug in the x25519 example program where the removal of\r\n     MBEDTLS_ECDH_LEGACY_CONTEXT caused the program not to run. Fixes #4901 and\r\n     #3191.\r\n   * Fix a TLS 1.3 handshake failure when the peer Finished message has not\r\n     been received yet when we first try to fetch it.\r\n   * Encode X.509 dates before 1/1/2000 as UTCTime rather than\r\n     GeneralizedTime. Fixes #5465.\r\n   * Add mbedtls_x509_dn_get_next function to return the next relative DN in\r\n     an X509 name, to allow walking the name list. Fixes #5431.\r\n    * Fix order value of curve x448.\r\n   * Fix string representation of DNs when outputting values containing commas\r\n     and other special characters, conforming to RFC 1779. Fixes #769.\r\n   * Silence a warning from GCC 12 in the selftest program. Fixes #5974.\r\n   * Fix check_config.h to check that we have MBEDTLS_SSL_KEEP_PEER_CERTIFICATE\r\n     when MBEDTLS_SSL_PROTO_TLS1_3 is specified, and make this and other\r\n     dependencies explicit in the documentation. Fixes #5610.\r\n   * Fix mbedtls_asn1_write_mpi() writing an incorrect encoding of 0.\r\n   * Fix a TLS 1.3 handshake failure when the first attempt to send the client\r\n     Finished message on the network cannot be satisfied. Fixes #5499.\r\n   * Fix resource leaks in mbedtls_pk_parse_public_key() in low\r\n     memory conditions.\r\n   * Fix server connection identifier setting for outgoing encrypted records\r\n     on DTLS 1.2 session resumption. After DTLS 1.2 session resumption with\r\n     connection identifier, the Mbed TLS client now properly sends the server\r\n     connection identifier in encrypted record headers. Fix #5872.\r\n   * Fix a null pointer dereference when performing some operations on zero\r\n     represented with 0 limbs (specifically mbedtls_mpi_mod_int() dividing\r\n     by 2, and mbedtls_mpi_write_string() in base 2).\r\n   * Fix record sizes larger than 16384 being sometimes accepted despite being\r\n     non-compliant. This could not lead to a buffer overflow. In particular,\r\n     application data size was already checked correctly.\r\n   * Fix MBEDTLS_SVC_KEY_ID_GET_KEY_ID() and MBEDTLS_SVC_KEY_ID_GET_OWNER_ID()\r\n     which have been broken, resulting in compilation errors, since Mbed TLS\r\n     3.0.\r\n   * Ensure that TLS 1.2 ciphersuite/certificate and key selection takes into\r\n     account not just the type of the key (RSA vs EC) but also what it can\r\n     actually do. Resolves #5831.\r\n   * Fix CMake windows host detection, especially when cross compiling.\r\n   * Fix an error in make where the absence of a generated file caused\r\n     make to break on a clean checkout. Fixes #5340.\r\n   * Work around an MSVC ARM64 compiler bug causing incorrect behaviour\r\n     in mbedtls_mpi_exp_mod(). Reported by Tautvydas Žilys in #5467.\r\n   * Removed the prompt to exit from all windows build programs that was causing\r\n     issues in CI/CD environments.\r\n\r\nChanges\r\n   * The file library/psa_crypto_driver_wrappers.c is now generated\r\n     from a template. In the future, the generation will support\r\n     driver descriptions. For the time being, to customize this file,\r\n     see docs/proposed/psa-driver-wrappers-codegen-migration-guide.md\r\n   * Return PSA_ERROR_INVALID_ARGUMENT if the algorithm passed to one-shot\r\n     AEAD functions is not an AEAD algorithm. This aligns them with the\r\n     multipart functions, and the PSA Crypto API 1.1 specification.\r\n   * In mbedtls_pk_parse_key(), if no password is provided, don't allocate a\r\n     temporary variable on the heap. Suggested by Sergey Kanatov in #5304.\r\n   * Assume source files are in UTF-8 when using MSVC with CMake.\r\n   * Fix runtime library install location when building with CMake and MinGW.\r\n     DLLs are now installed in the bin directory instead of lib.\r\n   * cmake: Use GnuInstallDirs to customize install directories\r\n     Replace custom LIB_INSTALL_DIR variable with standard CMAKE_INSTALL_LIBDIR\r\n     variable. For backward compatibility, set CMAKE_INSTALL_LIBDIR if\r\n     LIB_INSTALL_DIR is set.\r\n   * Add a CMake option that enables static linking of the runtime library\r\n     in Microsoft Visual C++ compiler. Contributed by Microplankton.\r\n   * In CMake builds, add aliases for libraries so that the normal MbedTLS::*\r\n     targets work when MbedTLS is built as a subdirectory. This allows the\r\n     use of FetchContent, as requested in #5688.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\n53201dbe4f44446b983970cafc9bdc49a2e5a3b505ec4d871d17bcf274e189e2  mbedtls-3.2.0.tar.gz\r\nb54bec8cf6584a71774428768d099636bd2db2faa6452352492d9c5c69c2f8cb  mbedtls-3.2.0.zip","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/71722388/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/71706233","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/71706233/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/71706233/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v2.28.1","id":71706233,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4ERiZ5","tag_name":"v2.28.1","target_commitish":"mbedtls-2.28","name":"Mbed TLS 2.28.1","draft":false,"immutable":false,"prerelease":false,"created_at":"2022-07-11T13:44:02Z","updated_at":"2022-07-14T18:01:35Z","published_at":"2022-07-11T19:09:15Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v2.28.1","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v2.28.1","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nMbed TLS 2.28 is a long-time support branch. It will be supported with bug-fixes and security fixes until end of 2024.\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following link:\r\n\r\nhttps://mbed-tls.readthedocs.io/en/latest/security-advisories/advisories/mbedtls-security-advisory-2022-07.html\r\n\r\n## Release Notes\r\n\r\nDefault behavior changes\r\n   * mbedtls_cipher_set_iv will now fail with ChaCha20 and ChaCha20+Poly1305\r\n     for IV lengths other than 12. The library was silently overwriting this\r\n     length with 12, but did not inform the caller about it. Fixes #4301.\r\n\r\nFeatures\r\n   * When MBEDTLS_PSA_CRYPTO_CONFIG is enabled, you may list the PSA crypto\r\n     feature requirements in the file named by the new macro\r\n     MBEDTLS_PSA_CRYPTO_CONFIG_FILE instead of the default psa/crypto_config.h.\r\n     Furthermore you may name an additional file to include after the main\r\n     file with the macro MBEDTLS_PSA_CRYPTO_USER_CONFIG_FILE.\r\n\r\nSecurity\r\n   * Zeroize dynamically-allocated buffers used by the PSA Crypto key storage\r\n     module before freeing them. These buffers contain secret key material, and\r\n     could thus potentially leak the key through freed heap.\r\n   * Fix a potential heap buffer overread in TLS 1.2 server-side when\r\n     MBEDTLS_USE_PSA_CRYPTO is enabled, an opaque key (created with\r\n     mbedtls_pk_setup_opaque()) is provisioned, and a static ECDH ciphersuite\r\n     is selected. This may result in an application crash or potentially an\r\n     information leak.\r\n   * Fix a buffer overread in DTLS ClientHello parsing in servers with\r\n     MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE enabled. An unauthenticated client\r\n     or a man-in-the-middle could cause a DTLS server to read up to 255 bytes\r\n     after the end of the SSL input buffer. The buffer overread only happens\r\n     when MBEDTLS_SSL_IN_CONTENT_LEN is less than a threshold that depends on\r\n     the exact configuration: 258 bytes if using mbedtls_ssl_cookie_check(),\r\n     and possibly up to 571 bytes with a custom cookie check function.\r\n     Reported by the Cybeats PSI Team.\r\n\r\nBugfix\r\n   * Fix a memory leak if mbedtls_ssl_config_defaults() is called twice.\r\n   * Fix several bugs (warnings, compiler and linker errors, test failures)\r\n     in reduced configurations when MBEDTLS_USE_PSA_CRYPTO is enabled.\r\n   * Fix a bug in (D)TLS curve negotiation: when MBEDTLS_USE_PSA_CRYPTO was\r\n     enabled and an ECDHE-ECDSA or ECDHE-RSA key exchange was used, the\r\n     client would fail to check that the curve selected by the server for\r\n     ECDHE was indeed one that was offered. As a result, the client would\r\n     accept any curve that it supported, even if that curve was not allowed\r\n     according to its configuration. Fixes #5291.\r\n   * Fix unit tests that used 0 as the file UID. This failed on some\r\n     implementations of PSA ITS. Fixes #3838.\r\n   * Fix API violation in mbedtls_md_process() test by adding a call to\r\n     mbedtls_md_starts(). Fixes #2227.\r\n   * Fix compile errors when MBEDTLS_HAVE_TIME is not defined. Add tests\r\n     to catch bad uses of time.h.\r\n   * Fix the library search path when building a shared library with CMake\r\n     on Windows.\r\n   * Fix bug in the alert sending function mbedtls_ssl_send_alert_message()\r\n     potentially leading to corrupted alert messages being sent in case\r\n     the function needs to be re-called after initially returning\r\n     MBEDTLS_SSL_WANT_WRITE. Fixes #1916.\r\n   * In configurations with MBEDTLS_SSL_DTLS_CONNECTION_ID enabled but none of\r\n     MBEDTLS_SSL_HW_RECORD_ACCEL, MBEDTLS_SSL_EXPORT_KEYS or MBEDTLS_DEBUG_C,\r\n     DTLS handshakes using CID would crash due to a null pointer dereference.\r\n     Fix this. Fixes #3998.\r\n   * Fix incorrect documentation of mbedtls_x509_crt_profile. The previous\r\n     documentation stated that the `allowed_pks` field applies to signatures\r\n     only, but in fact it does apply to the public key type of the end entity\r\n     certificate, too. Fixes #1992.\r\n   * Fix PSA cipher multipart operations using ARC4. Previously, an IV was\r\n     required but discarded. Now, an IV is rejected, as it should be.\r\n   * Fix undefined behavior in mbedtls_asn1_find_named_data(), where val is\r\n     not NULL and val_len is zero.\r\n   * psa_raw_key_agreement() now returns PSA_ERROR_BUFFER_TOO_SMALL when\r\n     applicable. Fixes #5735.\r\n   * Fix a bug in the x25519 example program where the removal of\r\n     MBEDTLS_ECDH_LEGACY_CONTEXT caused the program not to run. Fixes #4901 and\r\n     #3191.\r\n   * Encode X.509 dates before 1/1/2000 as UTCTime rather than\r\n     GeneralizedTime. Fixes #5465.\r\n   * Fix order value of curve x448.\r\n   * Fix string representation of DNs when outputting values containing commas\r\n     and other special characters, conforming to RFC 1779. Fixes #769.\r\n   * Silence a warning from GCC 12 in the selftest program. Fixes #5974.\r\n   * Fix mbedtls_asn1_write_mpi() writing an incorrect encoding of 0.\r\n   * Fix resource leaks in mbedtls_pk_parse_public_key() in low\r\n     memory conditions.\r\n   * Fix server connection identifier setting for outgoing encrypted records\r\n     on DTLS 1.2 session resumption. After DTLS 1.2 session resumption with\r\n     connection identifier, the Mbed TLS client now properly sends the server\r\n     connection identifier in encrypted record headers. Fix #5872.\r\n   * Fix a null pointer dereference when performing some operations on zero\r\n     represented with 0 limbs (specifically mbedtls_mpi_mod_int() dividing\r\n     by 2, and mbedtls_mpi_write_string() in base 2).\r\n   * Fix record sizes larger than 16384 being sometimes accepted despite being\r\n     non-compliant. This could not lead to a buffer overflow. In particular,\r\n     application data size was already checked correctly.\r\n\r\nChanges\r\n   * Assume source files are in UTF-8 when using MSVC with CMake.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\n\r\nThe SHA256 hashes for the archives are:\r\n\r\n6797a7b6483ef589deeab8d33d401ed235d7be25eeecda1be8ddfed406d40ff4  mbedtls-2.28.1.tar.gz\r\nb67866fc781934d9c6a322489a1efdc79ef545bf242a3bfa7cffd3c393d377c1  mbedtls-2.28.1.zip","reactions":{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/71706233/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/55383969","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/55383969/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/55383969/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v3.1.0","id":55383969,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4DTReh","tag_name":"v3.1.0","target_commitish":"development","name":"Mbed TLS 3.1.0","draft":false,"immutable":false,"prerelease":false,"created_at":"2021-12-16T10:32:43Z","updated_at":"2022-01-06T14:12:52Z","published_at":"2021-12-17T11:39:56Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v3.1.0","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v3.1.0","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following links:\r\n\r\nhttps://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2021-12\r\n\r\n## Release Notes\r\n\r\nAPI changes\r\n   * New error code for GCM: MBEDTLS_ERR_GCM_BUFFER_TOO_SMALL.\r\n     Alternative GCM implementations are expected to verify\r\n     the length of the provided output buffers and to return the\r\n     MBEDTLS_ERR_GCM_BUFFER_TOO_SMALL in case the buffer length is too small.\r\n   * You can configure groups for a TLS key exchange with the new function\r\n     mbedtls_ssl_conf_groups(). It extends mbedtls_ssl_conf_curves().\r\n   * Declare a number of structure fields as public: the fields of\r\n     mbedtls_ecp_curve_info, the fields describing the result of ASN.1 and\r\n     X.509 parsing, and finally the field fd of mbedtls_net_context on\r\n     POSIX/Unix-like platforms.\r\n\r\nRequirement changes\r\n   * Sign-magnitude and one's complement representations for signed integers are\r\n     not supported. Two's complement is the only supported representation.\r\n\r\nNew deprecations\r\n   * Deprecate mbedtls_ssl_conf_curves() in favor of the more generic\r\n     mbedtls_ssl_conf_groups().\r\n\r\nRemovals\r\n   * Remove the partial support for running unit tests via Greentea on Mbed OS,\r\n     which had been unmaintained since 2018.\r\n\r\nFeatures\r\n   * Enable support for Curve448 via the PSA API. Contributed by\r\n     Archana Madhavan in #4626. Fixes #3399 and #4249.\r\n   * The identifier of the CID TLS extension can be configured by defining\r\n     MBEDTLS_TLS_EXT_CID at compile time.\r\n   * Implement the PSA multipart AEAD interface, currently supporting\r\n     ChaChaPoly and GCM.\r\n   * Warn if errors from certain functions are ignored. This is currently\r\n     supported on GCC-like compilers and on MSVC and can be configured through\r\n     the macro MBEDTLS_CHECK_RETURN. The warnings are always enabled\r\n     (where supported) for critical functions where ignoring the return\r\n     value is almost always a bug. Enable the new configuration option\r\n     MBEDTLS_CHECK_RETURN_WARNING to get warnings for other functions. This\r\n     is currently implemented in the AES, DES and md modules, and will be\r\n     extended to other modules in the future.\r\n   * Add missing PSA macros declared by PSA Crypto API 1.0.0:\r\n     PSA_ALG_IS_SIGN_HASH, PSA_ALG_NONE, PSA_HASH_BLOCK_LENGTH, PSA_KEY_ID_NULL.\r\n   * Add support for CCM*-no-tag cipher to the PSA.\r\n     Currently only 13-byte long IV's are supported.\r\n     For decryption a minimum of 16-byte long input is expected.\r\n     These restrictions may be subject to change.\r\n   * Add new API mbedtls_ct_memcmp for constant time buffer comparison.\r\n   * Add functions to get the IV and block size from cipher_info structs.\r\n   * Add functions to check if a cipher supports variable IV or key size.\r\n   * Add the internal implementation of and support for CCM to the PSA multipart\r\n     AEAD interface.\r\n   * Mbed TLS provides a minimum viable implementation of the TLS 1.3\r\n     protocol. See docs/architecture/tls13-support.md for the definition of\r\n     the TLS 1.3 Minimum Viable Product (MVP). The MBEDTLS_SSL_PROTO_TLS1_3\r\n     configuration option controls the enablement of the support. The APIs\r\n     mbedtls_ssl_conf_min_version() and mbedtls_ssl_conf_max_version() allow\r\n     to select the 1.3 version of the protocol to establish a TLS connection.\r\n   * Add PSA API definition for ARIA.\r\n\r\nSecurity\r\n   * Zeroize several intermediate variables used to calculate the expected\r\n     value when verifying a MAC or AEAD tag. This hardens the library in\r\n     case the value leaks through a memory disclosure vulnerability. For\r\n     example, a memory disclosure vulnerability could have allowed a\r\n     man-in-the-middle to inject fake ciphertext into a DTLS connection.\r\n   * In psa_aead_generate_nonce(), do not read back from the output buffer.\r\n     This fixes a potential policy bypass or decryption oracle vulnerability\r\n     if the output buffer is in memory that is shared with an untrusted\r\n     application.\r\n   * In psa_cipher_generate_iv() and psa_cipher_encrypt(), do not read back\r\n     from the output buffer. This fixes a potential policy bypass or decryption\r\n     oracle vulnerability if the output buffer is in memory that is shared with\r\n     an untrusted application.\r\n   * Fix a double-free that happened after mbedtls_ssl_set_session() or\r\n     mbedtls_ssl_get_session() failed with MBEDTLS_ERR_SSL_ALLOC_FAILED\r\n     (out of memory). After that, calling mbedtls_ssl_session_free()\r\n     and mbedtls_ssl_free() would cause an internal session buffer to\r\n     be free()'d twice.\r\n\r\nBugfix\r\n   * Stop using reserved identifiers as local variables. Fixes #4630.\r\n   * The GNU makefiles invoke python3 in preference to python except on Windows.\r\n     The check was accidentally not performed when cross-compiling for Windows\r\n     on Linux. Fix this. Fixes #4774.\r\n   * Prevent divide by zero if either of PSA_CIPHER_ENCRYPT_OUTPUT_SIZE() or\r\n     PSA_CIPHER_UPDATE_OUTPUT_SIZE() were called using an asymmetric key type.\r\n   * Fix a parameter set but unused in psa_crypto_cipher.c. Fixes #4935.\r\n   * Don't use the obsolete header path sys/fcntl.h in unit tests.\r\n     These header files cause compilation errors in musl.\r\n     Fixes #4969.\r\n   * Fix missing constraints on x86_64 and aarch64 assembly code\r\n     for bignum multiplication that broke some bignum operations with\r\n     (at least) Clang 12.\r\n     Fixes #4116, #4786, #4917, #4962.\r\n   * Fix mbedtls_cipher_crypt: AES-ECB when MBEDTLS_USE_PSA_CRYPTO is enabled.\r\n   * Failures of alternative implementations of AES or DES single-block\r\n     functions enabled with MBEDTLS_AES_ENCRYPT_ALT, MBEDTLS_AES_DECRYPT_ALT,\r\n     MBEDTLS_DES_CRYPT_ECB_ALT or MBEDTLS_DES3_CRYPT_ECB_ALT were ignored.\r\n     This does not concern the implementation provided with Mbed TLS,\r\n     where this function cannot fail, or full-module replacements with\r\n     MBEDTLS_AES_ALT or MBEDTLS_DES_ALT. Reported by Armelle Duboc in #1092.\r\n   * Some failures of HMAC operations were ignored. These failures could only\r\n     happen with an alternative implementation of the underlying hash module.\r\n   * Fix the error returned by psa_generate_key() for a public key. Fixes #4551.\r\n   * Fix compile-time or run-time errors in PSA\r\n     AEAD functions when ChachaPoly is disabled. Fixes #5065.\r\n   * Remove PSA'a AEAD finish/verify output buffer limitation for GCM.\r\n     The requirement of minimum 15 bytes for output buffer in\r\n     psa_aead_finish() and psa_aead_verify() does not apply to the built-in\r\n     implementation of GCM.\r\n   * Move GCM's update output buffer length verification from PSA AEAD to\r\n     the built-in implementation of the GCM.\r\n     The requirement for output buffer size to be equal or greater then\r\n     input buffer size is valid only for the built-in implementation of GCM.\r\n     Alternative GCM implementations can process whole blocks only.\r\n   * Fix the build of sample programs when neither MBEDTLS_ERROR_C nor\r\n     MBEDTLS_ERROR_STRERROR_DUMMY is enabled.\r\n   * Fix PSA_ALG_RSA_PSS verification accepting an arbitrary salt length.\r\n     This algorithm now accepts only the same salt length for verification\r\n     that it produces when signing, as documented. Use the new algorithm\r\n     PSA_ALG_RSA_PSS_ANY_SALT to accept any salt length. Fixes #4946.\r\n   * The existing predicate macro name PSA_ALG_IS_HASH_AND_SIGN is now reserved\r\n     for algorithm values that fully encode the hashing step, as per the PSA\r\n     Crypto API specification. This excludes PSA_ALG_RSA_PKCS1V15_SIGN_RAW and\r\n     PSA_ALG_ECDSA_ANY. The new predicate macro PSA_ALG_IS_SIGN_HASH covers\r\n     all algorithms that can be used with psa_{sign,verify}_hash(), including\r\n     these two.\r\n   * Fix issue in Makefile on Linux with SHARED=1, that caused shared libraries\r\n     not to list other shared libraries they need.\r\n   * Fix a bug in mbedtls_gcm_starts() when the bit length of the iv\r\n     exceeds 2^32. Fixes #4884.\r\n   * Fix an uninitialized variable warning in test_suite_ssl.function with GCC\r\n     version 11.\r\n   * Fix the build when no SHA2 module is included. Fixes #4930.\r\n   * Fix the build when only the bignum module is included. Fixes #4929.\r\n   * Fix a potential invalid pointer dereference and infinite loop bugs in\r\n     pkcs12 functions when the password is empty. Fix the documentation to\r\n     better describe the inputs to these functions and their possible values.\r\n     Fixes #5136.\r\n   * The key usage flags PSA_KEY_USAGE_SIGN_MESSAGE now allows the MAC\r\n     operations psa_mac_compute() and psa_mac_sign_setup().\r\n   * The key usage flags PSA_KEY_USAGE_VERIFY_MESSAGE now allows the MAC\r\n     operations psa_mac_verify() and psa_mac_verify_setup().\r\n\r\nChanges\r\n   * Explicitly mark the fields mbedtls_ssl_session.exported and\r\n      mbedtls_ssl_config.respect_cli_pref as private. This was an\r\n      oversight during the run-up to the release of Mbed TLS 3.0.\r\n      The fields were never intended to be public.\r\n   * Implement multi-part CCM API.\r\n     The multi-part functions: mbedtls_ccm_starts(), mbedtls_ccm_set_lengths(),\r\n     mbedtls_ccm_update_ad(), mbedtls_ccm_update(), mbedtls_ccm_finish()\r\n     were introduced in mbedTLS 3.0 release, however their implementation was\r\n     postponed until now.\r\n     Implemented functions support chunked data input for both CCM and CCM*\r\n     algorithms.\r\n   * Remove MBEDTLS_SSL_EXPORT_KEYS, making it always on and increasing the\r\n     code size by about 80B on an M0 build. This option only gated an ability\r\n     to set a callback, but was deemed unnecessary as it was yet another define\r\n     to remember when writing tests, or test configurations. Fixes #4653.\r\n   * Improve the performance of base64 constant-flow code. The result is still\r\n     slower than the original non-constant-flow implementation, but much faster\r\n     than the previous constant-flow implementation. Fixes #4814.\r\n   * Ignore plaintext/ciphertext lengths for CCM*-no-tag operations.\r\n     For CCM* encryption/decryption without authentication, input\r\n     length will be ignored.\r\n   * Indicate in the error returned if the nonce length used with\r\n     ChaCha20-Poly1305 is invalid, and not just unsupported.\r\n   * The mbedcrypto library includes a new source code module constant_time.c,\r\n     containing various functions meant to resist timing side channel attacks.\r\n     This module does not have a separate configuration option, and functions\r\n     from this module will be included in the build as required. Currently\r\n     most of the interface of this module is private and may change at any\r\n     time.\r\n   * The generated configuration-independent files are now automatically\r\n     generated by the CMake build system on Unix-like systems. This is not\r\n     yet supported when cross-compiling.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\nThe SHA256 hashes for the archives are:\r\n\r\nb02df6f68dd1537e115a8497d5c173dc71edc55ad084756e57a30f951b725acd  mbedtls-3.1.0.tar.gz\r\n8ec791eaed8332c50cade2bcc17b75ae5931ac00824a761b5aa4e7586645b72b  mbedtls-3.1.0.zip"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/55383837","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/55383837/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/55383837/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v2.28.0","id":55383837,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4DTRcd","tag_name":"v2.28.0","target_commitish":"development_2.x","name":"Mbed TLS 2.28.0","draft":false,"immutable":false,"prerelease":false,"created_at":"2021-12-16T10:32:27Z","updated_at":"2021-12-21T20:35:46Z","published_at":"2021-12-17T11:39:52Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v2.28.0","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v2.28.0","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nMbed TLS 2.28 is a long-time support branch. It will be supported with bug-fixes and security fixes until end of 2024.\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following links:\r\n\r\nhttps://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2021-12\r\n\r\n## Release Notes\r\n\r\nAPI changes\r\n   * Some fields of mbedtls_ssl_session and mbedtls_ssl_config are in a\r\n     different order. This only affects applications that define such\r\n     structures directly or serialize them.\r\n\r\nRequirement changes\r\n   * Sign-magnitude and one's complement representations for signed integers are\r\n     not supported. Two's complement is the only supported representation.\r\n\r\nRemovals\r\n   * Remove config option MBEDTLS_TLS_DEFAULT_ALLOW_SHA1_IN_CERTIFICATES,\r\n     which allowed SHA-1 in the default TLS configuration for certificate\r\n     signing. It was intended to facilitate the transition in environments\r\n     with SHA-1 certificates. SHA-1 is considered a weak message digest and\r\n     its use constitutes a security risk.\r\n   * Remove the partial support for running unit tests via Greentea on Mbed OS,\r\n     which had been unmaintained since 2018.\r\n\r\nFeatures\r\n   * The identifier of the CID TLS extension can be configured by defining\r\n     MBEDTLS_TLS_EXT_CID at compile time.\r\n   * Warn if errors from certain functions are ignored. This is currently\r\n     supported on GCC-like compilers and on MSVC and can be configured through\r\n     the macro MBEDTLS_CHECK_RETURN. The warnings are always enabled\r\n     (where supported) for critical functions where ignoring the return\r\n     value is almost always a bug. Enable the new configuration option\r\n     MBEDTLS_CHECK_RETURN_WARNING to get warnings for other functions. This\r\n     is currently implemented in the AES, DES and md modules, and will be\r\n     extended to other modules in the future.\r\n   * Add missing PSA macros declared by PSA Crypto API 1.0.0:\r\n     PSA_ALG_IS_SIGN_HASH, PSA_ALG_NONE, PSA_HASH_BLOCK_LENGTH, PSA_KEY_ID_NULL.\r\n   * Add new API mbedtls_ct_memcmp for constant time buffer comparison.\r\n   * Add PSA API definition for ARIA.\r\n\r\nSecurity\r\n   * Zeroize several intermediate variables used to calculate the expected\r\n     value when verifying a MAC or AEAD tag. This hardens the library in\r\n     case the value leaks through a memory disclosure vulnerability. For\r\n     example, a memory disclosure vulnerability could have allowed a\r\n     man-in-the-middle to inject fake ciphertext into a DTLS connection.\r\n   * In psa_cipher_generate_iv() and psa_cipher_encrypt(), do not read back\r\n     from the output buffer. This fixes a potential policy bypass or decryption\r\n     oracle vulnerability if the output buffer is in memory that is shared with\r\n     an untrusted application.\r\n   * Fix a double-free that happened after mbedtls_ssl_set_session() or\r\n     mbedtls_ssl_get_session() failed with MBEDTLS_ERR_SSL_ALLOC_FAILED\r\n     (out of memory). After that, calling mbedtls_ssl_session_free()\r\n     and mbedtls_ssl_free() would cause an internal session buffer to\r\n     be free()'d twice.\r\n\r\nBugfix\r\n   * Stop using reserved identifiers as local variables. Fixes #4630.\r\n   * The GNU makefiles invoke python3 in preference to python except on Windows.\r\n     The check was accidentally not performed when cross-compiling for Windows\r\n     on Linux. Fix this. Fixes #4774.\r\n   * Prevent divide by zero if either of PSA_CIPHER_ENCRYPT_OUTPUT_SIZE() or\r\n     PSA_CIPHER_UPDATE_OUTPUT_SIZE() were called using an asymmetric key type.\r\n   * Fix a parameter set but unused in psa_crypto_cipher.c. Fixes #4935.\r\n   * Don't use the obsolete header path sys/fcntl.h in unit tests.\r\n     These header files cause compilation errors in musl.\r\n     Fixes #4969.\r\n   * Fix missing constraints on x86_64 and aarch64 assembly code\r\n     for bignum multiplication that broke some bignum operations with\r\n     (at least) Clang 12.\r\n     Fixes #4116, #4786, #4917, #4962.\r\n   * Fix mbedtls_cipher_crypt: AES-ECB when MBEDTLS_USE_PSA_CRYPTO is enabled.\r\n   * Failures of alternative implementations of AES or DES single-block\r\n     functions enabled with MBEDTLS_AES_ENCRYPT_ALT, MBEDTLS_AES_DECRYPT_ALT,\r\n     MBEDTLS_DES_CRYPT_ECB_ALT or MBEDTLS_DES3_CRYPT_ECB_ALT were ignored.\r\n     This does not concern the implementation provided with Mbed TLS,\r\n     where this function cannot fail, or full-module replacements with\r\n     MBEDTLS_AES_ALT or MBEDTLS_DES_ALT. Reported by Armelle Duboc in #1092.\r\n   * Some failures of HMAC operations were ignored. These failures could only\r\n     happen with an alternative implementation of the underlying hash module.\r\n   * Fix the error returned by psa_generate_key() for a public key. Fixes #4551.\r\n   * Fix the build of sample programs when neither MBEDTLS_ERROR_C nor\r\n     MBEDTLS_ERROR_STRERROR_DUMMY is enabled.\r\n   * Fix PSA_ALG_RSA_PSS verification accepting an arbitrary salt length.\r\n     This algorithm now accepts only the same salt length for verification\r\n     that it produces when signing, as documented. Use the new algorithm\r\n     PSA_ALG_RSA_PSS_ANY_SALT to accept any salt length. Fixes #4946.\r\n   * The existing predicate macro name PSA_ALG_IS_HASH_AND_SIGN is now reserved\r\n     for algorithm values that fully encode the hashing step, as per the PSA\r\n     Crypto API specification. This excludes PSA_ALG_RSA_PKCS1V15_SIGN_RAW and\r\n     PSA_ALG_ECDSA_ANY. The new predicate macro PSA_ALG_IS_SIGN_HASH covers\r\n     all algorithms that can be used with psa_{sign,verify}_hash(), including\r\n     these two.\r\n   * Fix issue in Makefile on Linux with SHARED=1, that caused shared libraries\r\n     not to list other shared libraries they need.\r\n   * Fix a bug in mbedtls_gcm_starts() when the bit length of the iv\r\n     exceeds 2^32. Fixes #4884.\r\n   * Fix an uninitialized variable warning in test_suite_ssl.function with GCC\r\n     version 11.\r\n   * Fix the build when no SHA2 module is included. Fixes #4930.\r\n   * Fix the build when only the bignum module is included. Fixes #4929.\r\n   * Fix a potential invalid pointer dereference and infinite loop bugs in\r\n     pkcs12 functions when the password is empty. Fix the documentation to\r\n     better describe the inputs to these functions and their possible values.\r\n     Fixes #5136.\r\n   * The key usage flags PSA_KEY_USAGE_SIGN_MESSAGE now allows the MAC\r\n     operations psa_mac_compute() and psa_mac_sign_setup().\r\n   * The key usage flags PSA_KEY_USAGE_VERIFY_MESSAGE now allows the MAC\r\n     operations psa_mac_verify() and psa_mac_verify_setup().\r\n\r\nChanges\r\n   * Set config option MBEDTLS_TLS_DEFAULT_ALLOW_SHA1_IN_KEY_EXCHANGE to be\r\n     disabled by default.\r\n   * Improve the performance of base64 constant-flow code. The result is still\r\n     slower than the original non-constant-flow implementation, but much faster\r\n     than the previous constant-flow implementation. Fixes #4814.\r\n   * Indicate in the error returned if the nonce length used with\r\n     ChaCha20-Poly1305 is invalid, and not just unsupported.\r\n   * The mbedcrypto library includes a new source code module constant_time.c,\r\n     containing various functions meant to resist timing side channel attacks.\r\n     This module does not have a separate configuration option, and functions\r\n     from this module will be included in the build as required. Currently\r\n     most of the interface of this module is private and may change at any\r\n     time.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\nThe SHA256 hashes for the archives are:\r\n\r\n6519579b836ed78cc549375c7c18b111df5717e86ca0eeff4cb64b2674f424cc  mbedtls-2.28.0.tar.gz\r\n80cf41f5f3f625436e3a800e9708e60a25206cd5d81968ba8dd9f3e8becd37e6  mbedtls-2.28.0.zip"},{"url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/55383474","assets_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/releases/55383474/assets","upload_url":"https://uploads.github.com/repos/Mbed-TLS/mbedtls/releases/55383474/assets{?name,label}","html_url":"https://github.com/Mbed-TLS/mbedtls/releases/tag/v2.16.12","id":55383474,"author":{"login":"daverodgman","id":407459,"node_id":"MDQ6VXNlcjQwNzQ1OQ==","avatar_url":"https://avatars.githubusercontent.com/u/407459?v=4","gravatar_id":"","url":"https://api.github.com/users/daverodgman","html_url":"https://github.com/daverodgman","followers_url":"https://api.github.com/users/daverodgman/followers","following_url":"https://api.github.com/users/daverodgman/following{/other_user}","gists_url":"https://api.github.com/users/daverodgman/gists{/gist_id}","starred_url":"https://api.github.com/users/daverodgman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daverodgman/subscriptions","organizations_url":"https://api.github.com/users/daverodgman/orgs","repos_url":"https://api.github.com/users/daverodgman/repos","events_url":"https://api.github.com/users/daverodgman/events{/privacy}","received_events_url":"https://api.github.com/users/daverodgman/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOAGYMwM4DTRWy","tag_name":"v2.16.12","target_commitish":"mbedtls-2.16","name":"Mbed TLS 2.16.12","draft":false,"immutable":false,"prerelease":false,"created_at":"2021-12-16T10:32:08Z","updated_at":"2021-12-21T20:39:32Z","published_at":"2021-12-17T11:39:46Z","assets":[],"tarball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/v2.16.12","zipball_url":"https://api.github.com/repos/Mbed-TLS/mbedtls/zipball/v2.16.12","body":"## Description\r\n\r\nThis release of Mbed TLS provides bug fixes and minor enhancements. This release includes fixes for security issues.\r\n\r\nThis is the last release of the 2.16 long-time support branch. Users who want a long-time branch should move to mbedtls-2.28, which is backward-compatible and will be supported for at least 3 years.\r\n\r\n## Security Advisories\r\n\r\nFor full details, please see the following links:\r\n\r\nhttps://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2021-12\r\n\r\n## Release Notes\r\n\r\nSecurity\r\n   * Zeroize several intermediate variables used to calculate the expected\r\n     value when verifying a MAC or AEAD tag. This hardens the library in\r\n     case the value leaks through a memory disclosure vulnerability. For\r\n     example, a memory disclosure vulnerability could have allowed a\r\n     man-in-the-middle to inject fake ciphertext into a DTLS connection.\r\n   * Fix a double-free that happened after mbedtls_ssl_set_session() or\r\n     mbedtls_ssl_get_session() failed with MBEDTLS_ERR_SSL_ALLOC_FAILED\r\n     (out of memory). After that, calling mbedtls_ssl_session_free()\r\n     and mbedtls_ssl_free() would cause an internal session buffer to\r\n     be free()'d twice.\r\n\r\nBugfix\r\n   * Stop using reserved identifiers as local variables. Fixes #4630.\r\n   * The GNU makefiles invoke python3 in preference to python except on Windows.\r\n     The check was accidentally not performed when cross-compiling for Windows\r\n     on Linux. Fix this. Fixes #4774.\r\n   * Mark basic constraints critical as appropriate. Note that the previous\r\n     entry for this fix in the 2.16.10 changelog was in error, and it was not\r\n     included in the 2.16.10 release as was stated.\r\n     Make 'mbedtls_x509write_crt_set_basic_constraints' consistent with RFC\r\n     5280 4.2.1.9 which says: \"Conforming CAs MUST include this extension in\r\n     all CA certificates that contain public keys used to validate digital\r\n     signatures on certificates and MUST mark the extension as critical in\r\n     such certificates.\" Previous to this change, the extension was always\r\n     marked as non-critical. This was fixed by #4044.\r\n   * Fix missing constraints on x86_64 assembly code for bignum multiplication\r\n     that broke some bignum operations with (at least) Clang 12.\r\n     Fixes #4116, #4786, #4917.\r\n   * Failures of alternative implementations of AES or DES single-block\r\n     functions enabled with MBEDTLS_AES_ENCRYPT_ALT, MBEDTLS_AES_DECRYPT_ALT,\r\n     MBEDTLS_DES_CRYPT_ECB_ALT or MBEDTLS_DES3_CRYPT_ECB_ALT were ignored.\r\n     This does not concern the implementation provided with Mbed TLS,\r\n     where this function cannot fail, or full-module replacements with\r\n     MBEDTLS_AES_ALT or MBEDTLS_DES_ALT. Reported by Armelle Duboc in #1092.\r\n   * Some failures of HMAC operations were ignored. These failures could only\r\n     happen with an alternative implementation of the underlying hash module.\r\n   * Fix the build of sample programs when neither MBEDTLS_ERROR_C nor\r\n     MBEDTLS_ERROR_STRERROR_DUMMY is enabled.\r\n   * Fix a bug in mbedtls_gcm_starts() when the bit length of the iv\r\n     exceeds 2^32. Fixes #4884.\r\n   * Fix the build when no SHA2 module is included. Fixes #4930.\r\n   * Fix the build when only the bignum module is included. Fixes #4929.\r\n   * Fix a potential invalid pointer dereference and infinite loop bugs in\r\n     pkcs12 functions when the password is empty. Fix the documentation to\r\n     better describe the inputs to these functions and their possible values.\r\n     Fixes #5136.\r\n\r\nChanges\r\n   * Improve the performance of base64 constant-flow code. The result is still\r\n     slower than the original non-constant-flow implementation, but much faster\r\n     than the previous constant-flow implementation. Fixes #4814.\r\n\r\n## Who should update\r\n\r\nWe recommend all users should update to take advantage of the bug fixes contained in this release at an appropriate point in their development lifecycle.\r\n\r\n## Checksum\r\nThe SHA256 hashes for the archives are:\r\n\r\n294871ab1864a65d0b74325e9219d5bcd6e91c34a3c59270c357bb9ae4d5c393  mbedtls-2.16.12.tar.gz\r\n1a3169e7016e7a737ea7904a7108aac7f97668f79baee6165dee9ba596cf7c10  mbedtls-2.16.12.zip"}]