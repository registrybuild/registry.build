[{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/246980720","assets_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/246980720/assets","upload_url":"https://uploads.github.com/repos/eclipse-iceoryx/iceoryx2/releases/246980720/assets{?name,label}","html_url":"https://github.com/eclipse-iceoryx/iceoryx2/releases/tag/v0.7.0","id":246980720,"author":{"login":"elfenpiff","id":56729169,"node_id":"MDQ6VXNlcjU2NzI5MTY5","avatar_url":"https://avatars.githubusercontent.com/u/56729169?v=4","gravatar_id":"","url":"https://api.github.com/users/elfenpiff","html_url":"https://github.com/elfenpiff","followers_url":"https://api.github.com/users/elfenpiff/followers","following_url":"https://api.github.com/users/elfenpiff/following{/other_user}","gists_url":"https://api.github.com/users/elfenpiff/gists{/gist_id}","starred_url":"https://api.github.com/users/elfenpiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elfenpiff/subscriptions","organizations_url":"https://api.github.com/users/elfenpiff/orgs","repos_url":"https://api.github.com/users/elfenpiff/repos","events_url":"https://api.github.com/users/elfenpiff/events{/privacy}","received_events_url":"https://api.github.com/users/elfenpiff/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOK46AYc4OuKBw","tag_name":"v0.7.0","target_commitish":"release_0.7","name":"v0.7.0","draft":false,"immutable":false,"prerelease":true,"created_at":"2025-09-13T10:32:25Z","updated_at":"2025-09-13T11:21:12Z","published_at":"2025-09-13T10:50:22Z","assets":[],"tarball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/tarball/v0.7.0","zipball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/zipball/v0.7.0","body":"[Full Changelog](https://github.com/eclipse-iceoryx/iceoryx2/compare/v0.6.1...v0.7.0)\r\n\r\n### Features\r\n\r\n* Python language binding [#419](https://github.com/eclipse-iceoryx/iceoryx2/issues/419)\r\n* Tunnel over zenoh for publish-subscribe and event services [#593](https://github.com/eclipse-iceoryx/iceoryx2/issues/593)\r\n* Provide Official Yocto Recipe [#663](https://github.com/eclipse-iceoryx/iceoryx2/issues/663)\r\n* All port factories implement `Send` [#768](https://github.com/eclipse-iceoryx/iceoryx2/issues/768)\r\n* `RequestResponse` for entire current discovery state [#777](https://github.com/eclipse-iceoryx/iceoryx2/issues/777)\r\n* `iox2 service listen` and `iox2 service notify` [#790](https://github.com/eclipse-iceoryx/iceoryx2/issues/790)\r\n* Use minimal iceoryx_hoofs subset for iceoryx2 C++ bindings [#824](https://github.com/eclipse-iceoryx/iceoryx2/issues/824)\r\n* PubSub ports implement `Send` + `Sync`, samples implement `Send` when using `**_threadsafe` service variant [#836](https://github.com/eclipse-iceoryx/iceoryx2/issues/836)\r\n* ReqRes & events implement `Send` + `Sync` in `**_threadsafe` service variant [#838](https://github.com/eclipse-iceoryx/iceoryx2/issues/838)\r\n* Platform support for QNX 7.1 [#847](https://github.com/eclipse-iceoryx/iceoryx2/issues/847)\r\n* Send/receive samples with `iox2` + simple record & replay [#884](https://github.com/eclipse-iceoryx/iceoryx2/issues/884)\r\n* C example for service attributes [#909](https://github.com/eclipse-iceoryx/iceoryx2/issues/909)\r\n* Example explaining the details of service types [#913](https://github.com/eclipse-iceoryx/iceoryx2/issues/913)\r\n* CLI Record replay, service name is stored in record file [#929](https://github.com/eclipse-iceoryx/iceoryx2/issues/929)\r\n* Flatmap `remove` API now returns `Option<T>` [#931](https://github.com/eclipse-iceoryx/iceoryx2/issues/931)\r\n* Add script to list dependencies of multiple packages [#933](https://github.com/eclipse-iceoryx/iceoryx2/issues/933)\r\n* Add a C++ Optional vocabulary type for use with C++ containers [#939](https://github.com/eclipse-iceoryx/iceoryx2/issues/939)\r\n* Add graceful disconnect feature in client [#989](https://github.com/eclipse-iceoryx/iceoryx2/issues/989)\r\n* Add custom mapping offset to shared memory POSIX wrapper [#1010](https://github.com/eclipse-iceoryx/iceoryx2/issues/1010)\r\n\r\n### Bugfixes\r\n\r\n* Fix segmentation fault in event multiplexing C example [#766](https://github.com/eclipse-iceoryx/iceoryx2/issues/766)\r\n* Fix lifetime in ThreadGuardedStackBuilder [#770](https://github.com/eclipse-iceoryx/iceoryx2/issues/770)\r\n* Fix config file load failure [#772](https://github.com/eclipse-iceoryx/iceoryx2/issues/772)\r\n* Make `Directory::create` thread-safe [#778](https://github.com/eclipse-iceoryx/iceoryx2/issues/778)\r\n* Make CLI generated global config file accessible to all users [#786](https://github.com/eclipse-iceoryx/iceoryx2/issues/786)\r\n* Make `iox2 config show` print the available options [#788](https://github.com/eclipse-iceoryx/iceoryx2/issues/788)\r\n* Fix bug where CLI was not displaying positional arguments in usage help [#796](https://github.com/eclipse-iceoryx/iceoryx2/issues/796)\r\n* Fix startup race in `pthread_create` on mac os platform [#799](https://github.com/eclipse-iceoryx/iceoryx2/issues/799)\r\n* CMake no longer installs unusable binaries when FetchContent is used [#814](https://github.com/eclipse-iceoryx/iceoryx2/issues/814)\r\n* Fix build and linker error on gcc 8 and 9 [#855](https://github.com/eclipse-iceoryx/iceoryx2/issues/855)\r\n* Miri complains about byte_string as_bytes* operations [#875](https://github.com/eclipse-iceoryx/iceoryx2/issues/875)\r\n* Make changes to the config file backward compatible [#921](https://github.com/eclipse-iceoryx/iceoryx2/issues/921)\r\n* Make `update_connections` public for all ports [#923](https://github.com/eclipse-iceoryx/iceoryx2/issues/923)\r\n* Fix cleanup issue of stale dynamic configs [#927](https://github.com/eclipse-iceoryx/iceoryx2/issues/927)\r\n* Fix memory leaks when port creation fails [#947](https://github.com/eclipse-iceoryx/iceoryx2/issues/947)\r\n* Clean handling of thread CPU core affinity of `posix::Thread` [#962](https://github.com/eclipse-iceoryx/iceoryx2/issues/962)\r\n* Set thread priority correctly, not always min value [#977](https://github.com/eclipse-iceoryx/iceoryx2/issues/977)\r\n* Fix 32-bit data corruption issue in lock-free queues [#986](https://github.com/eclipse-iceoryx/iceoryx2/issues/986)\r\n* Fix provenance in bump allocator and remove implicit Sync impl [#992](https://github.com/eclipse-iceoryx/iceoryx2/issues/992)\r\n* Fix deadlock when system time changes and `wait` is called [#1000](https://github.com/eclipse-iceoryx/iceoryx2/issues/1000)\r\n* Improve performance of the `fill` method of `FixedSizeVec` [#1006](https://github.com/eclipse-iceoryx/iceoryx2/issues/1006)\r\n* Fix uninitialized user header in publisher, client, active request [#1014](https://github.com/eclipse-iceoryx/iceoryx2/issues/1014)\r\n\r\n### Refactoring\r\n\r\n* Implement `ZeroCopySend` for all system types [#732](https://github.com/eclipse-iceoryx/iceoryx2/issues/732)\r\n* Remove trait re-exports from iceoryx2-bb-elementary [#757](https://github.com/eclipse-iceoryx/iceoryx2/issues/757)\r\n* Make POSIX user- and group details optional [#780](https://github.com/eclipse-iceoryx/iceoryx2/issues/780)\r\n* Add `recommended::Ipc` and `recommended::Local` to iceoryx2 concepts for to provide link the best implementation for the specific platform [#806](https://github.com/eclipse-iceoryx/iceoryx2/issues/806)\r\n* Introduce newtypes for 'uid' and 'gid' [#822](https://github.com/eclipse-iceoryx/iceoryx2/issues/822)\r\n* Make default max event ID smaller [#828](https://github.com/eclipse-iceoryx/iceoryx2/issues/828)\r\n* Remove the `config/iceoryx2.toml` to reduce effort to keep the built in `iceoryx.toml` and `config.rs` in sync [#831](https://github.com/eclipse-iceoryx/iceoryx2/issues/831)\r\n* Removed `MetaVec::is_initialized` field [#900](https://github.com/eclipse-iceoryx/iceoryx2/issues/900)\r\n* Enable standalone build of the C and C++ bindings [#942](https://github.com/eclipse-iceoryx/iceoryx2/issues/942)\r\n* Adjust visibility to `Service` constructs to allow customization [#954](https://github.com/eclipse-iceoryx/iceoryx2/issues/954)\r\n* Move C and C++ language bindings to the top level directory [#963](https://github.com/eclipse-iceoryx/iceoryx2/issues/963)\r\n\r\n### Testing\r\n\r\n* Create E2E Tests for all examples [#730](https://github.com/eclipse-iceoryx/iceoryx2/issues/730)\r\n\r\n### Workflow\r\n\r\n* Added brief cross-compile documentation [#70](https://github.com/eclipse-iceoryx/iceoryx2/issues/70)\r\n* Added development documentation for QNX [#847](https://github.com/eclipse-iceoryx/iceoryx2/issues/847)\r\n* Set up automated documentation builds for C/C++/Python hosted on GitHub Pages [#920](https://github.com/eclipse-iceoryx/iceoryx2/issues/920)\r\n\r\n### New API features\r\n\r\n* Add `NodeId` to sample header (to prevent loopback in tunnels) [#593](https://github.com/eclipse-iceoryx/iceoryx2/issues/593)\r\n* Add API to prevent self notification `Notifier::__internal_notify()` [#794](https://github.com/eclipse-iceoryx/iceoryx2/issues/794)\r\n* Enable the usage of semaphore based events in C/C++ [#795](https://github.com/eclipse-iceoryx/iceoryx2/issues/795)\r\n* Remove `impl Drop` restriction from `ZeroCopySend` trait [#908](https://github.com/eclipse-iceoryx/iceoryx2/issues/908)\r\n* Introduce convenience `iceoryx2.hpp` header [#1016](https://github.com/eclipse-iceoryx/iceoryx2/issues/1016)\r\n\r\n### Config Breaking Changes\r\n\r\n1. The previously separate fields `root-path-unix` and `root-path-windows` have been unified into a single `root-path` entry in configs, located in the `[global]` section of `iceoryx2.toml`.\r\n\r\n    The config file template from `config/iceoryx2.toml` was removed and please refer to `config/README.md` on how to generate a default config file. [#831](https://github.com/eclipse-iceoryx/iceoryx2/issues/831)\r\n\r\n2. The default max event ID was reduced to 255 in order to have make bitset based event implementations work out of the box. If a larger event ID is required, it can either be changed in the `iceoryx2.toml` file or with the `event_id_max_value` in the event service builder.\r\n\r\n    ```rust\r\n    let event = node\r\n        .service_builder(&\"MyEventName\".try_into()?)\r\n        .event()\r\n        .event_id_max_value(511)\r\n        .open_or_create()?;\r\n    ```\r\n\r\n### API Breaking Changes\r\n\r\n1. The `iceoryx2-ffi` crate is renamed to `iceoryx2-ffi-c` due to now also having a Python FFI package. The change should be transparent since the recommended way to use the C bindings is via the `iceoryx2-c` cmake package.\r\n\r\n2. The custom `UserHeader`, `RequestHeader`, `ResponseHeader` must implement `Default`.","reactions":{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/246980720/reactions","total_count":6,"+1":0,"-1":0,"laugh":0,"hooray":4,"confused":0,"heart":2,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/219305260","assets_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/219305260/assets","upload_url":"https://uploads.github.com/repos/eclipse-iceoryx/iceoryx2/releases/219305260/assets{?name,label}","html_url":"https://github.com/eclipse-iceoryx/iceoryx2/releases/tag/v0.6.1","id":219305260,"author":{"login":"elfenpiff","id":56729169,"node_id":"MDQ6VXNlcjU2NzI5MTY5","avatar_url":"https://avatars.githubusercontent.com/u/56729169?v=4","gravatar_id":"","url":"https://api.github.com/users/elfenpiff","html_url":"https://github.com/elfenpiff","followers_url":"https://api.github.com/users/elfenpiff/followers","following_url":"https://api.github.com/users/elfenpiff/following{/other_user}","gists_url":"https://api.github.com/users/elfenpiff/gists{/gist_id}","starred_url":"https://api.github.com/users/elfenpiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elfenpiff/subscriptions","organizations_url":"https://api.github.com/users/elfenpiff/orgs","repos_url":"https://api.github.com/users/elfenpiff/repos","events_url":"https://api.github.com/users/elfenpiff/events{/privacy}","received_events_url":"https://api.github.com/users/elfenpiff/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOK46AYc4NElUs","tag_name":"v0.6.1","target_commitish":"main","name":"v0.6.1","draft":false,"immutable":false,"prerelease":true,"created_at":"2025-05-18T00:23:49Z","updated_at":"2025-05-18T00:25:50Z","published_at":"2025-05-18T00:25:50Z","assets":[],"tarball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/tarball/v0.6.1","zipball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/zipball/v0.6.1","body":"[Full Changelog](https://github.com/eclipse-iceoryx/iceoryx2/compare/v0.6.0...v0.6.1)\r\n\r\n### Bugfixes\r\n\r\n* Remove dependency to `iceoryx2-bb-elementary` [#759](https://github.com/eclipse-iceoryx/iceoryx2/issues/759)","reactions":{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/219305260/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/219293601","assets_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/219293601/assets","upload_url":"https://uploads.github.com/repos/eclipse-iceoryx/iceoryx2/releases/219293601/assets{?name,label}","html_url":"https://github.com/eclipse-iceoryx/iceoryx2/releases/tag/v0.6.0","id":219293601,"author":{"login":"elfenpiff","id":56729169,"node_id":"MDQ6VXNlcjU2NzI5MTY5","avatar_url":"https://avatars.githubusercontent.com/u/56729169?v=4","gravatar_id":"","url":"https://api.github.com/users/elfenpiff","html_url":"https://github.com/elfenpiff","followers_url":"https://api.github.com/users/elfenpiff/followers","following_url":"https://api.github.com/users/elfenpiff/following{/other_user}","gists_url":"https://api.github.com/users/elfenpiff/gists{/gist_id}","starred_url":"https://api.github.com/users/elfenpiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elfenpiff/subscriptions","organizations_url":"https://api.github.com/users/elfenpiff/orgs","repos_url":"https://api.github.com/users/elfenpiff/repos","events_url":"https://api.github.com/users/elfenpiff/events{/privacy}","received_events_url":"https://api.github.com/users/elfenpiff/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOK46AYc4NEieh","tag_name":"v0.6.0","target_commitish":"main","name":"v0.6.0","draft":false,"immutable":false,"prerelease":true,"created_at":"2025-05-17T18:28:30Z","updated_at":"2025-05-17T18:33:40Z","published_at":"2025-05-17T18:33:40Z","assets":[],"tarball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/tarball/v0.6.0","zipball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/zipball/v0.6.0","body":"[Full Changelog](https://github.com/eclipse-iceoryx/iceoryx2/compare/v0.5.0...v0.6.0)\r\n\r\n### Features\r\n\r\n* Full C/C++ Language bindings for all features [#264](https://github.com/eclipse-iceoryx/iceoryx2/issues/264)\r\n* Read LogLevel from environment variable [#396](https://github.com/eclipse-iceoryx/iceoryx2/issues/396)\r\n* Add Request-Response messaging pattern [#429](https://github.com/eclipse-iceoryx/iceoryx2/issues/429)\r\n* Lookup config file in default locations [#442](https://github.com/eclipse-iceoryx/iceoryx2/issues/442)\r\n* Introduce `socket_pair` abstraction in POSIX wrapper [#508](https://github.com/eclipse-iceoryx/iceoryx2/issues/508)\r\n* Introduce `socket_pair` event concept [#508](https://github.com/eclipse-iceoryx/iceoryx2/issues/508)\r\n* Deadline property for event services [#573](https://github.com/eclipse-iceoryx/iceoryx2/issues/573)\r\n* Use 'std_instead_of_core' clippy warning [#579](https://github.com/eclipse-iceoryx/iceoryx2/issues/579)\r\n* Use 'std_instead_of_alloc' and 'alloc_instead_of_core' clippy warning [#581](https://github.com/eclipse-iceoryx/iceoryx2/issues/581)\r\n* Introduce platform abstraction based on the 'libc' crate [#604](https://github.com/eclipse-iceoryx/iceoryx2/issues/604)\r\n* Extend benchmarks to test setups with multiple sending/receiving ports [#610](https://github.com/eclipse-iceoryx/iceoryx2/issues/610)\r\n* Reduce iceoryx2 dependencies [#640](https://github.com/eclipse-iceoryx/iceoryx2/issues/640)\r\n* Allow customizable payload and user header type name in C++ binding [#643](https://github.com/eclipse-iceoryx/iceoryx2/issues/643)\r\n* Expose set_log_level_from_env* APIs to C++ [#653](https://github.com/eclipse-iceoryx/iceoryx2/issues/653)\r\n* Introduce a \"service discovery service\", which applications can subscribe and listen to for updates in service landscape [#674](https://github.com/eclipse-iceoryx/iceoryx2/issues/674)\r\n* Details of all service ports can be acquired [#685](https://github.com/eclipse-iceoryx/iceoryx2/issues/685)\r\n* Add benchmark for request-response [#687](https://github.com/eclipse-iceoryx/iceoryx2/issues/687)\r\n\r\n### Bugfixes\r\n\r\n* Corrupted services are removed when they are part of a dead node [#458](https://github.com/eclipse-iceoryx/iceoryx2/issues/458)\r\n* Remove stale shm state files in Windows [#458](https://github.com/eclipse-iceoryx/iceoryx2/issues/458)\r\n* Make process local services truly process local by using socket pairs for events [#508](https://github.com/eclipse-iceoryx/iceoryx2/issues/508)\r\n* Completion queue capacity exceeded when history > buffer [#571](https://github.com/eclipse-iceoryx/iceoryx2/issues/571)\r\n* Increase max supported shared memory size in Windows that restricts the maximum supported payload size [#575](https://github.com/eclipse-iceoryx/iceoryx2/issues/575)\r\n* Undefined behavior due to ZeroCopyConnection removal when stale resources are cleaned up [#596](https://github.com/eclipse-iceoryx/iceoryx2/issues/596)\r\n* Remove `SIGPOLL` that lead to compile issues on older glibc versions. Fix issue where fatal signals are generated with non-fatal values. [#605](https://github.com/eclipse-iceoryx/iceoryx2/issues/605)\r\n* LogLevel is considered for custom loggers. [#608](https://github.com/eclipse-iceoryx/iceoryx2/issues/608)\r\n* CLI argument parse failure handled gracefully, CLI help template used consistently [#646](https://github.com/eclipse-iceoryx/iceoryx2/issues/646)\r\n* Allow missing legal characters in system type for user- and group-name [#677](https://github.com/eclipse-iceoryx/iceoryx2/issues/677)\r\n* Fix `wait_and_process_once_with_timeout` deadlock [#695](https://github.com/eclipse-iceoryx/iceoryx2/issues/695)\r\n* Fix Miri issues with MetaVec due to temporary borrow [#682](https://github.com/eclipse-iceoryx/iceoryx2/issues/682)\r\n* Do not set default log level for cargo [#711](https://github.com/eclipse-iceoryx/iceoryx2/issues/711)\r\n* Fix flaky windows test [#739](https://github.com/eclipse-iceoryx/iceoryx2/issues/739)\r\n\r\n### Refactoring\r\n\r\n* Remove the `print_system_configuration()` function in `iceoryx2-bb/posix/src/system_configuration.rs` file and move it into the CLI `iox2-config` [#432](https://github.com/eclipse-iceoryx/iceoryx2/issues/432)\r\n* Remove obsolete POSIX wrapper [#594](https://github.com/eclipse-iceoryx/iceoryx2/issues/594)\r\n* Updated all dependencies and increased MSRV to 1.81 [#638](https://github.com/eclipse-iceoryx/iceoryx2/issues/638)\r\n* Reduce indentation in `main.rs` of CLI binaries [#646](https://github.com/eclipse-iceoryx/iceoryx2/issues/646)\r\n* Improve naming in `AttributeSet` methods and `ServiceId` [#697](https://github.com/eclipse-iceoryx/iceoryx2/issues/697)\r\n* Implement `ZeroCopySend` for `StaticConfig` and its nested types [#707](https://github.com/eclipse-iceoryx/iceoryx2/issues/707)\r\n* Efficient `Clone` for `FixedSizeByteString` [#717](https://github.com/eclipse-iceoryx/iceoryx2/issues/717)\r\n* Use Rust's native endian swapping [#724](https://github.com/eclipse-iceoryx/iceoryx2/issues/724)\r\n* Move Traits from iceoryx2-bb-elementary to separate crate to break dependency cycles [#754](https://github.com/eclipse-iceoryx/iceoryx2/issues/754)\r\n\r\n### New API features\r\n\r\n* Add CLI to display complete system configuration [#432](https://github.com/eclipse-iceoryx/iceoryx2/issues/432)\r\n* Add simplified attribute value accessors [#590](https://github.com/eclipse-iceoryx/iceoryx2/issues/590)\r\n* Add CLI to launch service discovery service [#674](https://github.com/eclipse-iceoryx/iceoryx2/issues/674)\r\n\r\n### API Breaking Changes\r\n\r\n1. Add requirement that every payload and user header type must implement\r\n   `ZeroCopySend` for type safe shared memory usage\r\n   [#602](https://github.com/eclipse-iceoryx/iceoryx2/issues/602)\r\n\r\n   ```rust\r\n   // old\r\n   #[repr(C)]\r\n   pub struct TransmissionData {\r\n      // ...\r\n   }\r\n\r\n   #[repr(C)]\r\n   pub struct CustomHeader {\r\n      // ...\r\n   }\r\n\r\n   let service = node\r\n       .service_builder(&\"ServiceName\".try_into()?)\r\n       .publish_subscribe::<TransmissionData>()\r\n       .user_header::<CustomHeader>()\r\n       .open_or_create()?;\r\n\r\n   // new\r\n   #[derive(ZeroCopySend)]\r\n   #[repr(C)]\r\n   pub struct TransmissionData {\r\n      // ...\r\n   }\r\n\r\n   #[derive(ZeroCopySend)]\r\n   #[repr(C)]\r\n   pub struct CustomHeader {\r\n      // ...\r\n   }\r\n\r\n   let service = node\r\n       .service_builder(&\"ServiceName\".try_into()?)\r\n       .publish_subscribe::<TransmissionData>()\r\n       .user_header::<CustomHeader>()\r\n       .open_or_create()?;\r\n   ```\r\n\r\n2. Renamed `PublisherLoanError` to `LoanError`\r\n\r\n   ```rust\r\n   // old\r\n   let sample = match publisher.loan() {\r\n     Ok(sample) => sample,\r\n     Err(PublisherLoanError::OutOfMemory) => handle_error(),\r\n     // ...\r\n   };\r\n\r\n   // new\r\n   let sample = match publisher.loan() {\r\n     Ok(sample) => sample,\r\n     Err(LoanError::OutOfMemory) => handle_error(),\r\n     // ...\r\n   };\r\n   ```\r\n\r\n3. Renamed `PublisherSendError` to `SendError`\r\n\r\n   ```rust\r\n   // old\r\n   match sample.send() {\r\n     Ok(n) => println!(\"send data to {n} subscribers\"),\r\n     Err(PublisherSendError::ConnectionCorrupted) => handle_error(),\r\n     // ...\r\n   };\r\n\r\n   // new\r\n   match sample.send() {\r\n     Ok(n) => println!(\"send data to {n} subscribers\"),\r\n     Err(SendError::ConnectionCorrupted) => handle_error(),\r\n     // ...\r\n   };\r\n   ```\r\n\r\n4. Renamed `SubscriberReceiveError` to `ReceiveError`\r\n\r\n   ```rust\r\n   // old\r\n   match subscriber.receive() {\r\n     Ok(sample) => println!(\"received: {:?}\", *sample),\r\n     Err(SubscriberReceiveError::ExceedsMaxBorrowedSamples) => handle_error(),\r\n     // ...\r\n   }\r\n\r\n   // new\r\n   match subscriber.receive() {\r\n     Ok(sample) => println!(\"received: {:?}\", *sample),\r\n     Err(ReceiveError::ExceedsMaxBorrowedSamples) => handle_error(),\r\n     // ...\r\n   }\r\n   ```\r\n\r\n5. Renamed `PublisherSendError::ConnectionBrokenSincePublisherNoLongerExists`\r\n   to `SendError::ConnectionBrokenSinceSenderNoLongerExists`\r\n\r\n6. Renamed `ConnectionFailure::UnableToMapPublishersDataSegment`\r\n   to `ConnectionFailure::UnableToMapSendersDataSegment`\r\n\r\n7. Renamed `AttributeSet::len()`\r\n   to `AttributeSet::number_of_attributes()`\r\n\r\n8. Renamed `AttributeSet::get_key_value_len()`\r\n   to `AttributeSet::number_of_key_values()`\r\n\r\n9. Renamed `AttributeSet::get_key_value_at()`\r\n   to `AttributeSet::key_value()`\r\n\r\n10. Renamed `AttributeSet::get_key_values()`\r\n   to `AttributeSet::iter_key_values()`\r\n\r\n11. Renamed `ServiceId::max_len()`\r\n   to `ServiceId::max_number_of_characters()`\r\n\r\n12. Renamed the config entry `global.service.publisher-data-segment-suffix`\r\n   to `global.service.data-segment-suffix` and changed the default value to\r\n   `.data`.\r\n\r\n13. Methods of `ServiceName` return a `ServiceNameError` instead of\r\n   a `SemanticStringError`\r\n\r\n14. The following types no longer implement `Copy`\r\n   (they only implement `Clone`):\r\n    * `FixedSizeByteString`\r\n    * `SemanticString`\r\n    * `Base64URL`\r\n    * `FileName`\r\n    * `FilePath`\r\n    * `GroupName`\r\n    * `UserName`\r\n    * `ServiceId`\r\n\r\n15. Renamed `AttributeVerifier::keys()` to `AttributeVerifier::required_keys()`\r\n\r\n16. Renamed `AttributeVerifier::attributes()` to `AttributeVerifier::required_attributes()`\r\n\r\n17. Attribute keys and values are now `SemanticStrings`\r\n    1. All arguments of methods in `Attribute`, `AttributeSpecifier`,\r\n        `AttributeVerifier`, and `AttributeSet` changed from `&str` to\r\n        `FixedSizeByteStrings` that implement the `SemanticString` trait\r\n\r\n    ```rust\r\n    // old\r\n    let attribute = Attribute::new(\"my_key\", \"my_value\");\r\n\r\n    // new - keys or value known to fit within maximum length\r\n    let attribute = Attribute::new(&\"my_key\".try_into().unwrap(), &\"my_value\".try_into().unwrap());\r\n\r\n    // new - key or value length unknown\r\n    fn get_key() -> &str;\r\n    fn get_value() -> &str;\r\n\r\n    let key = AttributeKey::try_from(get_key()).unwrap_or_else(|e| {\r\n        // Handle error: e.g., log error, use default key, or propagate error\r\n    });\r\n    let value = AttributeValue::try_from(get_value()).unwrap_or_else(|e| {\r\n        // Handle error: e.g., log error, use default value, or propagate error\r\n    });\r\n    let attribute = Attribute::new(&key, &value);\r\n    ```","reactions":{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/219293601/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/192138751","assets_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/192138751/assets","upload_url":"https://uploads.github.com/repos/eclipse-iceoryx/iceoryx2/releases/192138751/assets{?name,label}","html_url":"https://github.com/eclipse-iceoryx/iceoryx2/releases/tag/v0.5.0","id":192138751,"author":{"login":"elfenpiff","id":56729169,"node_id":"MDQ6VXNlcjU2NzI5MTY5","avatar_url":"https://avatars.githubusercontent.com/u/56729169?v=4","gravatar_id":"","url":"https://api.github.com/users/elfenpiff","html_url":"https://github.com/elfenpiff","followers_url":"https://api.github.com/users/elfenpiff/followers","following_url":"https://api.github.com/users/elfenpiff/following{/other_user}","gists_url":"https://api.github.com/users/elfenpiff/gists{/gist_id}","starred_url":"https://api.github.com/users/elfenpiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elfenpiff/subscriptions","organizations_url":"https://api.github.com/users/elfenpiff/orgs","repos_url":"https://api.github.com/users/elfenpiff/repos","events_url":"https://api.github.com/users/elfenpiff/events{/privacy}","received_events_url":"https://api.github.com/users/elfenpiff/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOK46AYc4Lc83_","tag_name":"v0.5.0","target_commitish":"main","name":"v0.5.0","draft":false,"immutable":false,"prerelease":true,"created_at":"2024-12-23T17:19:05Z","updated_at":"2024-12-23T17:21:23Z","published_at":"2024-12-23T17:21:23Z","assets":[],"tarball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/tarball/v0.5.0","zipball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/zipball/v0.5.0","body":"[Full Changelog](https://github.com/eclipse-iceoryx/iceoryx2/compare/v0.4.1...v0.5.0)\r\n\r\n### Features\r\n\r\n* C++ bindings for attributes [#264](https://github.com/eclipse-iceoryx/iceoryx2/issues/264)\r\n* Add Event-Multiplexer `WaitSet` [#390](https://github.com/eclipse-iceoryx/iceoryx2/issues/390)\r\n* Add `PeriodicTimer` into POSIX building blocks [#425](https://github.com/eclipse-iceoryx/iceoryx2/issues/425)\r\n* Developer permissions for resources [#460](https://github.com/eclipse-iceoryx/iceoryx2/issues/460)\r\n* Add `--send-copy` flag to Benchmark to consider mem operations [#483](https://github.com/eclipse-iceoryx/iceoryx2/issues/483)\r\n* Support for slices in the C++ bindings [#490](https://github.com/eclipse-iceoryx/iceoryx2/issues/490)\r\n* Add API to retrieve string description of error enums [$491](https://github.com/eclipse-iceoryx/iceoryx2/issues/491)\r\n* Add relocatable `SlotMap` [#504](https://github.com/eclipse-iceoryx/iceoryx2/issues/504)\r\n* Add `ResizableSharedMemory` [#497](https://github.com/eclipse-iceoryx/iceoryx2/issues/497)\r\n* Make signal handling optional in `WaitSet` and `Node` [#528](https://github.com/eclipse-iceoryx/iceoryx2/issues/528)\r\n* Support dynamic data with reallocation for publish-subscribe communication [#532](https://github.com/eclipse-iceoryx/iceoryx2/issues/532)\r\n* Add benchmark for iceoryx2 queues [#535](https://github.com/eclipse-iceoryx/iceoryx2/issues/535)\r\n* Add auto event mission for create, drop and dead notifiers [#550](https://github.com/eclipse-iceoryx/iceoryx2/issues/550)\r\n* Introduce health monitoring example [#555](https://github.com/eclipse-iceoryx/iceoryx2/issues/555)\r\n* Reuse existing cargo build with C and C++ bindings [#559](https://github.com/eclipse-iceoryx/iceoryx2/issues/559)\r\n\r\n### Bugfixes\r\n\r\n* Split SignalHandler signals to avoid infinite loops on SIGSEGV\r\n  [#436](https://github.com/eclipse-iceoryx/iceoryx2/issues/436)\r\n* Fix misleading warning related to default config file\r\n  [#437](https://github.com/eclipse-iceoryx/iceoryx2/issues/437)\r\n* Fix infinite loop triggering in `WaitSet`\r\n  [#518](https://github.com/eclipse-iceoryx/iceoryx2/issues/518)\r\n* Fix cmake build with iceoryx2 as submodule\r\n  [#521](https://github.com/eclipse-iceoryx/iceoryx2/issues/521)\r\n\r\n### Refactoring\r\n\r\n* Rename `NodeEvent` into `WaitEvent` [#390](https://github.com/eclipse-iceoryx/iceoryx2/issues/390)\r\n* Bazel support for the Rust crates [#349](https://github.com/eclipse-iceoryx/iceoryx2/issues/349)\r\n* Remove ACL dependency [#457](https://github.com/eclipse-iceoryx/iceoryx2/issues/457)\r\n* Remove `max_slice_len` publisher builder option for non-slice types [#496](https://github.com/eclipse-iceoryx/iceoryx2/issues/496)\r\n* Publish Subscribe Header contains number of elements contained in a `Sample` [#498](https://github.com/eclipse-iceoryx/iceoryx2/issues/498)\r\n\r\n### New API features\r\n\r\n* APIs to support slices in the C/C++ bindings [#490](https://github.com/eclipse-iceoryx/iceoryx2/issues/490)\r\n* Rename `iox2_publisher_loan` to `iox2_publisher_loan_slice_uninit` [#490](https://github.com/eclipse-iceoryx/iceoryx2/issues/490)\r\n    1. C always loans slices, for a single element, specify the\r\n       `number_of_elements` to be 1\r\n* Add APIs to C/C++ bindings to get string representation of error enum [#491](https://github.com/eclipse-iceoryx/iceoryx2/issues/491)\r\n    1. C API: `iox2_{error_enum_name}_string(enum_value)`\r\n    2. C++ API: `iox::into<const char*>(enum_value)`\r\n* APIs to retrieve the value of `UniquePortIds` from the C/C++ bindings [#500](https://github.com/eclipse-iceoryx/iceoryx2/issues/500)\r\n\r\n### API Breaking Changes\r\n\r\n1. Removed `NodeEvent`. `Node::wait` returns now `Result<(), NodeWaitFailure>`\r\n\r\n   ```rust\r\n   // old\r\n   while node.wait(CYCLE_TIME) != NodeEvent::TerminationRequest {\r\n    // ...\r\n   }\r\n\r\n   // new\r\n   while node.wait(CYCLE_TIME).is_ok() {\r\n    // ...\r\n   }\r\n   ```\r\n\r\n2. Removed `payload_type_layout()` from `publish_subscribe::Header`.\r\n\r\n3. Renamed `max_slice_len()` into `initial_max_slice_len()`.\r\n\r\n   ```rust\r\n   // old\r\n   let publisher = service\r\n        .publisher_builder()\r\n        .max_slice_len(16)\r\n        .create()?;\r\n\r\n   // new\r\n   let publisher = service\r\n        .publisher_builder()\r\n        .initial_max_slice_len(16)\r\n        .create()?;\r\n   ```","reactions":{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/192138751/reactions","total_count":5,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":4,"eyes":0}},{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/177442927","assets_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/177442927/assets","upload_url":"https://uploads.github.com/repos/eclipse-iceoryx/iceoryx2/releases/177442927/assets{?name,label}","html_url":"https://github.com/eclipse-iceoryx/iceoryx2/releases/tag/v0.4.1","id":177442927,"author":{"login":"elfenpiff","id":56729169,"node_id":"MDQ6VXNlcjU2NzI5MTY5","avatar_url":"https://avatars.githubusercontent.com/u/56729169?v=4","gravatar_id":"","url":"https://api.github.com/users/elfenpiff","html_url":"https://github.com/elfenpiff","followers_url":"https://api.github.com/users/elfenpiff/followers","following_url":"https://api.github.com/users/elfenpiff/following{/other_user}","gists_url":"https://api.github.com/users/elfenpiff/gists{/gist_id}","starred_url":"https://api.github.com/users/elfenpiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elfenpiff/subscriptions","organizations_url":"https://api.github.com/users/elfenpiff/orgs","repos_url":"https://api.github.com/users/elfenpiff/repos","events_url":"https://api.github.com/users/elfenpiff/events{/privacy}","received_events_url":"https://api.github.com/users/elfenpiff/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOK46AYc4Kk5Bv","tag_name":"v0.4.1","target_commitish":"main","name":"v0.4.1","draft":false,"immutable":false,"prerelease":true,"created_at":"2024-09-28T23:30:27Z","updated_at":"2024-09-28T23:31:45Z","published_at":"2024-09-28T23:31:33Z","assets":[],"tarball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/tarball/v0.4.1","zipball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/zipball/v0.4.1","body":"[Full Changelog](https://github.com/eclipse-iceoryx/iceoryx2/compare/v0.4.0...v0.4.1)\r\n\r\n### Bugfixes\r\n\r\n* Fix bug preventing `iox2` from being executed from any location [#409](https://github.com/eclipse-iceoryx/iceoryx2/issues/409)\r\n\r\n## Thanks To All Contributors Of This Version\r\n\r\n* [»orecham«](https://github.com/orecham)\r\n"},{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/177430624","assets_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/177430624/assets","upload_url":"https://uploads.github.com/repos/eclipse-iceoryx/iceoryx2/releases/177430624/assets{?name,label}","html_url":"https://github.com/eclipse-iceoryx/iceoryx2/releases/tag/v0.4.0","id":177430624,"author":{"login":"elfenpiff","id":56729169,"node_id":"MDQ6VXNlcjU2NzI5MTY5","avatar_url":"https://avatars.githubusercontent.com/u/56729169?v=4","gravatar_id":"","url":"https://api.github.com/users/elfenpiff","html_url":"https://github.com/elfenpiff","followers_url":"https://api.github.com/users/elfenpiff/followers","following_url":"https://api.github.com/users/elfenpiff/following{/other_user}","gists_url":"https://api.github.com/users/elfenpiff/gists{/gist_id}","starred_url":"https://api.github.com/users/elfenpiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elfenpiff/subscriptions","organizations_url":"https://api.github.com/users/elfenpiff/orgs","repos_url":"https://api.github.com/users/elfenpiff/repos","events_url":"https://api.github.com/users/elfenpiff/events{/privacy}","received_events_url":"https://api.github.com/users/elfenpiff/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOK46AYc4Kk2Bg","tag_name":"v0.4.0","target_commitish":"main","name":"v0.4.0","draft":false,"immutable":false,"prerelease":true,"created_at":"2024-09-28T16:20:45Z","updated_at":"2024-09-28T16:22:40Z","published_at":"2024-09-28T16:22:20Z","assets":[],"tarball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/tarball/v0.4.0","zipball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/zipball/v0.4.0","body":"[Full Changelog](https://github.com/eclipse-iceoryx/iceoryx2/compare/v0.3.0...v0.4.0)\r\n\r\n## Features\r\n\r\n* Subscriber buffer size can be reduced [#19](https://github.com/eclipse-iceoryx/iceoryx2/issues/19)\r\n* Nodes cleanup all resources of dead nodes on creation and destruction [#96](https://github.com/eclipse-iceoryx/iceoryx2/issues/96)\r\n* CLI for iox2 [#98](https://github.com/eclipse-iceoryx/iceoryx2/issues/98)\r\n    * Add `iox2` CLI\r\n    * Add `iox2-service` CLI\r\n    * Add `iox2-node` CLI\r\n* Introduce Nodes [#102](https://github.com/eclipse-iceoryx/iceoryx2/issues/102)\r\n    * Implement Serialize,Deserialize for\r\n        * `SemanticString`\r\n        * `UniqueSystemId`\r\n* Nodes register in service to enable monitoring [#103](https://github.com/eclipse-iceoryx/iceoryx2/issues/103)\r\n* Multiple features from [#195](https://github.com/eclipse-iceoryx/iceoryx2/issues/195)\r\n    * Introduce `payload_alignment` in `publish_subscribe` builder to increase\r\n    alignment of payload for all service samples\r\n    * Introduce support for slice-types with dynamic sizes.\r\n    * Introduce `max_slice_len` in the publisher builder to set support dynamic\r\n    sized types (slices).\r\n\r\n  ```rust\r\n  use iceoryx2::prelude::*;\r\n\r\n  fn main() -> Result<(), Box<dyn std::error::Error>> {\r\n      let node = NodeBuilder::new().create::<ipc::Service>()?;\r\n      let service = node.service_builder(\"My/Funk/ServiceName\".try_into()?)\r\n          .publish_subscribe::<[usize]>()\r\n          // set a custom alignment of 512, interesting for SIMD-operations\r\n          .payload_alignment(Alignment::new(512).unwrap())\r\n          .open_or_create()?;\r\n\r\n      let publisher = service\r\n          .publisher()\r\n          // defines the maximum length of a slice\r\n          // can be set whenever a publisher is created to handle dynamic sized types\r\n          .max_slice_len(128)\r\n          .create()?;\r\n\r\n      // loan some initialized memory and send it\r\n      // the payload type must implement the [`core::default::Default`] trait in order to be able to use this API\r\n      // we acquire a slice of length 12\r\n      let mut sample = publisher.loan_slice(12)?;\r\n      sample.payload_mut()[5] = 1337;\r\n      sample.send()?;\r\n  }\r\n  ```\r\n\r\n* 32-bit support [#200](https://github.com/eclipse-iceoryx/iceoryx2/issues/200)\r\n    * Introduce `IoxAtomic` that supports up to 128bit atomics on 32-bit\r\n    architecture with a ReadWriteLock\r\n    * add CI targets to officially support 32-bit\r\n* Example that demonstrates publish-subscribe communication with dynamic data [#205](https://github.com/eclipse-iceoryx/iceoryx2/issues/205)\r\n* Introduce `PlacementNew` trait and derive proc-macro [#224](https://github.com/eclipse-iceoryx/iceoryx2/issues/224)\r\n* Custom service properties support, see [example](https://github.com/eclipse-iceoryx/iceoryx2/tree/main/examples/rust/service_properties) [#231](https://github.com/eclipse-iceoryx/iceoryx2/issues/231)\r\n    * Implement Serialize,Deserialize for\r\n        * `FixedSizeByteString`\r\n        * `FixedSizeVec`\r\n* TryInto implemented for `{Node|Service}Name` [#243](https://github.com/eclipse-iceoryx/iceoryx2/issues/243)\r\n* Add custom user header [#253](https://github.com/eclipse-iceoryx/iceoryx2/issues/253)\r\n* Build the C and C++ language bindings with bazel [#329](https://github.com/eclipse-iceoryx/iceoryx2/issues/329)\r\n* Add `Subscriber::has_samples` [#335](https://github.com/eclipse-iceoryx/iceoryx2/issues/335)\r\n* Example that demonstrates iceoryx2 domains [#370](https://github.com/eclipse-iceoryx/iceoryx2/issues/370)\r\n* Add colcon package for iceoryx2 with C/C++ bindings [#381](https://github.com/eclipse-iceoryx/iceoryx2/issues/381)\r\n* Lock-free atomics on 32-bit architectures [#401](https://github.com/eclipse-iceoryx/iceoryx2/issues/401)\r\n\r\n## Bugfixes\r\n\r\n* Build failure for Windows 11 i686-pc-windows-msvc [#235](https://github.com/eclipse-iceoryx/iceoryx2/issues/235)\r\n* 'win32call' needs to provide the last error [#241](https://github.com/eclipse-iceoryx/iceoryx2/issues/241)\r\n* Mem-leak in `iceoryx2-bb-posix::Directory::contents()` and skip empty file names [#287](https://github.com/eclipse-iceoryx/iceoryx2/issues/287)\r\n* Log macros do no longer return values [#292](https://github.com/eclipse-iceoryx/iceoryx2/issues/292)\r\n* Fix cross-compilation issue with `scandir.c` [#318](https://github.com/eclipse-iceoryx/iceoryx2/issues/318)\r\n* Fix sample loss when publisher disconnected before subscriber called receive [#337](https://github.com/eclipse-iceoryx/iceoryx2/issues/337)\r\n* Service-creation-timeout is considered also for the data segment and zero copy connection [#361](https://github.com/eclipse-iceoryx/iceoryx2/issues/361)\r\n\r\n## Refactoring\r\n\r\n* Kebab case for config file [#90](https://github.com/eclipse-iceoryx/iceoryx2/issues/90)\r\n* `open`, `open_or_create` and `create` are untyped in pubsub-builder [#195](https://github.com/eclipse-iceoryx/iceoryx2/issues/195)\r\n* use `ClockMode::Performance` instead of `ClockMode::Safety` in default deployment [#207](https://github.com/eclipse-iceoryx/iceoryx2/issues/207)\r\n* Updated all dependencies and increased MSRV to 1.75 [#221](https://github.com/eclipse-iceoryx/iceoryx2/issues/221)\r\n* Remove `Service::does_exist_with_custom_config` and `Service::list_with_custom_config` [#238](https://github.com/eclipse-iceoryx/iceoryx2/issues/238)\r\n* Renamed `PortFactory::{publisher|subscriber|listener|notifier}` to `PortFactory::{publisher|subscriber|listener|notifier}_builder`  [#244](https://github.com/eclipse-iceoryx/iceoryx2/issues/244)\r\n* Merged `Iox2::wait` with new `Node` and removed `Iox2` [#270](https://github.com/eclipse-iceoryx/iceoryx2/issues/270)\r\n* Renamed `zero_copy::Service` and `process_local::Service` into `ipc::Service` and `local::Service` [#323](https://github.com/eclipse-iceoryx/iceoryx2/issues/323)\r\n* Introduce `SampleMutUninit<Payload>` without `send` functionality as replacement for `SampleMut<MaybeUninit<Payload>>`  [#394](https://github.com/eclipse-iceoryx/iceoryx2/issues/394)\r\n\r\n## Workflow\r\n\r\n* Extended CLI parameters for benchmarks [#360](https://github.com/eclipse-iceoryx/iceoryx2/issues/360)\r\n* Default log-level is set from `LogLevel::Trace` to `LogLevel::Info` [#392](https://github.com/eclipse-iceoryx/iceoryx2/issues/392)\r\n\r\n## API Breaking Changes\r\n\r\n1. Services are created via the `Node`, `service_builder` take `ServiceName` by\r\n   value\r\n\r\n   ```rust\r\n   // old\r\n   let service = zero_copy::Service::new(&service_name)\r\n       .event()\r\n       .create()?;\r\n\r\n   // new\r\n   let node = NodeBuilder::new().create::<ipc::Service>()?;\r\n   let service = node.service_builder(service_name) // service_name is moved into builder\r\n       .event()\r\n       .create()?;\r\n   ```\r\n\r\n2. Custom configurations are added to the `Node`. Methods\r\n   `{event|publish_subscribe}_with_custom_config` are removed\r\n\r\n   ```rust\r\n   // old\r\n   let service = zero_copy::Service::new(&service_name)\r\n       .publish_subscribe_with_custom_config::<u64>(&custom_config)\r\n       .open_or_create()?;\r\n\r\n   // new\r\n   let node = NodeBuilder::new()\r\n                   .config(&custom_config)\r\n                   .create::<ipc::Service>()?;\r\n\r\n   let service = node.service_builder(service_name)\r\n       .publish_subscribe::<u64>()\r\n       .open_or_create()?;\r\n   ```\r\n\r\n3. `open`, `open_or_create` and `create` are untyped for publish-subscribe\r\n   services\r\n\r\n   ```rust\r\n   // old\r\n   let service = zero_copy::Service::new(&service_name)\r\n       .publish_subscribe()\r\n       .create::<u64>()?; // or open::<u64>(), or open_or_create::<u64>()\r\n\r\n   // new\r\n   let node = NodeBuilder::new().create::<ipc::Service>()?;\r\n   let service = node.service_builder(service_name)\r\n       .publish_subscribe::<u64>() // type is now up here\r\n       .create()?; // or open(), or open_or_create()\r\n   ```\r\n\r\n4. `service_name` was renamed into `name` for consistency reasons.\r\n\r\n   ```rust\r\n   let services = ipc::Service::list()?;\r\n\r\n   for service in services {\r\n       // old\r\n       let name = service.service_name();\r\n\r\n       // new\r\n       let name = service.name();\r\n   }\r\n   ```\r\n\r\n5. Directory entries in `Config` converted to type `Path`\r\n\r\n   ```rust\r\n   let mut config = Config::default();\r\n\r\n   // old\r\n   config.global.service.directory = \"Some/Directory\".into();\r\n\r\n   // new\r\n   config.global.service.directory = \"Some/Directory\".try_into()?;\r\n   ```\r\n\r\n6. Suffix/prefix entries in `Config` converted to type `FileName`\r\n\r\n   ```rust\r\n   let mut config = Config::default();\r\n\r\n   // old\r\n   config.global.prefix = \"iox2_\".into();\r\n\r\n   // new\r\n   config.global.prefix = \"iox2_\".try_into()?;\r\n\r\n   ```\r\n\r\n7. `Service::list_with_custom_config` was removed.\r\n\r\n   ```rust\r\n   // old\r\n   let services = zero_copy::Service::list()?;\r\n   let services = zero_copy::Service::list_with_custom_config(Config::global_config())?;\r\n\r\n   // new\r\n   let services = ipc::Service::list(Config::global_config())?;\r\n   ```\r\n\r\n8. `Service::does_exist_with_custom_config` was removed.\r\n\r\n   ```rust\r\n   // old\r\n   let services = zero_copy::Service::does_exist(service_name)?;\r\n   let services = zero_copy::Service::does_exist_with_custom_config(service_name, Config::global_config())?;\r\n\r\n   // new\r\n   let services = ipc::Service::does_exist(service_name, Config::global_config())?;\r\n   ```\r\n\r\n9. Creating pub-sub ports with `service.{publisher|subscriber}_builder()`.\r\n\r\n   ```rust\r\n   // old\r\n   let publisher = service.publisher().create()?;\r\n   let subscriber = service.subscriber().create()?;\r\n\r\n   // new\r\n   let publisher = service.publisher_builder().create()?;\r\n   let subscriber = service.subscriber_builder().create()?;\r\n   ```\r\n\r\n10. Creating event ports with `service.{listener|notifier}_builder()`.\r\n\r\n    ```rust\r\n    // old\r\n    let listener = service.listener().create()?;\r\n    let notifier = service.notifier().create()?;\r\n\r\n    // new\r\n    let listener = service.listener_builder().create()?;\r\n    let notifier = service.notifier_builder().create()?;\r\n    ```\r\n\r\n11. The keys in the `iceoryx2.toml` config file are now kebab-case\r\n\r\n    ```toml\r\n    # old\r\n    [defaults.publish_subscribe]\r\n    max_subscribers                             = 8\r\n    max_publishers                              = 2\r\n\r\n    # new\r\n    [defaults.publish-subscribe]\r\n    max-subscribers                             = 8\r\n    max-publishers                              = 2\r\n    ```\r\n\r\n12. Some error enum fields where removed or renamed.\r\n\r\n    ```test\r\n    // old                                                                  new\r\n    EventOpenError::EventInCorruptedState                                   EventOpenError::ServiceInCorruptedState\r\n    EventOpenError::PermissionDenied                                        EventOpenError::InsufficientPermissions\r\n    EventOpenError::UnableToOpenDynamicServiceInformation                   EventOpenError::ServiceInCorruptedState\r\n\r\n    EventCreateError::PermissionDenied                                      EventCreateError::InsufficientPermissions\r\n    EventCreateError::UnableToCreateStaticServiceInformation                EventCreateError::ServiceInCorruptedState\r\n\r\n    PublishSubscribeOpenError::PermissionDenied                             PublishSubscribeOpenError::InsufficientPermissions\r\n    PublishSubscribeOpenError::Inaccessible                                 PublishSubscribeOpenError::InsufficientPermissions\r\n    PublishSubscribeOpenError::UnableToOpenDynamicServiceInformation        PublishSubscribeOpenError::ServiceInCorruptedState\r\n\r\n    PublishSubscribeCreateError::PermissionDenied                           PublishSubscribeCreateError::InsufficientPermissions\r\n    PublishSubscribeCreateError::Corrupted                                  PublishSubscribeCreateError::ServiceInCorruptedState\r\n    PublishSubscribeCreateError::UnableToCreateStaticServiceInformation     PublishSubscribeCreateError::ServiceInCorruptedState\r\n\r\n    PublisherLoanError::ExceedsMaxLoanedChunks                              PublisherLoanError::ExceedsMaxLoanedSamples\r\n    ```\r\n\r\n13. Switch order of `Service` and `Payload` parameter in `Sample` and\r\n    `SampleMut` to be consistent with all other constructs. Add third parameter\r\n    user header.\r\n\r\n    ```rust\r\n    // old\r\n    struct SomeSamples {\r\n        sample_mut: SampleMut<MyMessageType, zero_copy::Service>,\r\n        sample: Sample<MyMessageType, zero_copy::Service>,\r\n    }\r\n\r\n    // new\r\n    struct SomeSamples {\r\n        sample_mut: SampleMut<ipc::Service, MyMessageType, ()>,\r\n        sample: Sample<ipc::Service, MyMessageType, ()>,\r\n    }\r\n    ```\r\n\r\n14. The `Sample`, `SampleMut`, `Publisher`, `Subscriber` and the\r\n    `publish_subscribe::PortFactory` (the service ) have additional generic\r\n    argument that represents the user header type. By default the user header is\r\n    `()`.\r\n\r\n    ```rust\r\n    // old\r\n    struct SomeStruct {\r\n        service: publish_subscribe::PortFactory<zero_copy::Service, MyMessageType>,\r\n        subscriber: Subscriber<zero_copy::Service, MyMessageType>,\r\n        publisher: Publisher<zero_copy::Service, MyMessageType>,\r\n        list_of_mut_samples: Vec<SampleMut<MyMessageType, zero_copy::Service>>,\r\n        list_of_samples: Vec<Sample<MyMessageType, zero_copy::Service>>,\r\n    }\r\n\r\n    // new, no custom user header\r\n    struct SomeStruct {\r\n        service: publish_subscribe::PortFactory<ipc::Service, MyMessageType, ()>,\r\n        subscriber: Subscriber<ipc::Service, MyMessageType, ()>,\r\n        publisher: Publisher<ipc::Service, MyMessageType, ()>,\r\n        list_of_mut_samples: Vec<SampleMut<ipc::Service, MyMessageType, ()>>,\r\n        list_of_samples: Vec<Sample<ipc::Service, MyMessageType, ()>>,\r\n    }\r\n\r\n    // new, with custom user header\r\n    struct SomeStruct {\r\n        service: publish_subscribe::PortFactory<ipc::Service, MyMessageType, MyCustomHeader>,\r\n        subscriber: Subscriber<ipc::Service, MyMessageType, MyCustomHeader>,\r\n        publisher: Publisher<ipc::Service, MyMessageType, MyCustomHeader>,\r\n        list_of_mut_samples: Vec<SampleMut<ipc::Service, MyMessageType, MyCustomHeader>>,\r\n        list_of_samples: Vec<Sample<ipc::Service, MyMessageType, MyCustomHeader>>,\r\n    }\r\n    ```\r\n\r\n15. To avoid heap allocations, `Service::list()` requires a callback that is\r\n    called for every service entry instead of returning a `Vec`.\r\n\r\n    ```rust\r\n    // old\r\n    let services = zero_copy::Service::list(Config::global_config())?;\r\n\r\n    for service in services {\r\n        println!(\"\\n{:#?}\", &service);\r\n    }\r\n\r\n    // new\r\n    ipc::Service::list(Config::global_config(), |service| {\r\n        println!(\"\\n{:#?}\", &service?);\r\n        Ok(CallbackProgression::Continue)\r\n    })?;\r\n    ```\r\n\r\n16. Rename `max_supported_{publisher,subscriber,notifier,listener}` into\r\n    `max_{publisher,subscriber,notifier,lister}` in the services `PortFactory`.\r\n\r\n    ```rust\r\n    let event_service = node.service_builder(\"MyEventName\".try_into()?)\r\n                     .event()\r\n                     .open_or_create()?;\r\n\r\n    let pubsub_service = node.service_builder(\"MyPubSubName\".try_into()?)\r\n                     .publish_subscribe<u64>()\r\n                     .open_or_create()?;\r\n\r\n    // old\r\n    event_service.static_config().max_supported_listeners();\r\n    event_service.static_config().max_supported_notifier();\r\n\r\n    pubsub_service.static_config().max_supported_publisher();\r\n    pubsub_service.static_config().max_supported_subscriber();\r\n\r\n    // new\r\n    event_service.static_config().max_listeners();\r\n    event_service.static_config().max_notifier();\r\n\r\n    pubsub_service.static_config().max_publisher();\r\n    pubsub_service.static_config().max_subscriber();\r\n    ```\r\n\r\n17. `Iox2::wait()` is part of the `Node`, `Iox2Event` renamed to `NodeEvent`\r\n\r\n    ```rust\r\n    // old\r\n    while let Iox2Event::Tick = Iox2::wait(CYCLE_TIME) {\r\n        // main loop stuff\r\n    }\r\n\r\n    // new\r\n    let node = NodeBuilder::new().create::<ipc::Service>()?;\r\n    while let NodeEvent::Tick = node.wait(CYCLE_TIME) {\r\n        // main loop stuff\r\n    }\r\n    ```\r\n\r\n18. Renamed `Config::get_global_config` to just `Config::global_config`\r\n\r\n19. Renamed `process_local::Service` into `local::Service` and\r\n    `zero_copy::Service` into `ipc::Service`.\r\n\r\n    ```rust\r\n    // old\r\n    let node = NodeBuilder::new().create::<zero_copy::Service>()?;\r\n    let node = NodeBuilder::new().create::<process_local::Service>()?;\r\n\r\n    // new\r\n    let node = NodeBuilder::new().create::<ipc::Service>()?;\r\n    let node = NodeBuilder::new().create::<local::Service>()?;\r\n    ```\r\n\r\n20. `SampleMutUninit` without `send` as replacement for `SampleMut<MaybeUninit<Payload>>`\r\n\r\n    ```rust\r\n    // old\r\n    let sample: SampleMut<zero_copy::Service, MaybeUninit<u64>> = publisher.loan_uninit()?;\r\n    let sample = sample.write_payload(123);\r\n    let sample.send()?;\r\n\r\n    // new\r\n    let sample: SampleMutUninit<zero_copy::Service, MaybeUninit<u64>> = publisher.loan_uninit()?;\r\n    let sample = sample.write_payload(123);\r\n    let sample.send()?;\r\n\r\n    // no longer compiles\r\n    let sample = publisher.loan_uninit()?;\r\n    // uninitialized samples cannot be sent\r\n    let sample.send()?;\r\n    ```\r\n\r\n## Thanks To All Contributors Of This Version\r\n\r\n* [Christian »elfenpiff« Eltzschig](https://github.com/elfenpiff)\r\n* [Mathias »elBoberido« Kraus](https://github.com/elboberido)\r\n* [»orecham«](https://github.com/orecham)","reactions":{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/177430624/reactions","total_count":3,"+1":0,"-1":0,"laugh":0,"hooray":2,"confused":0,"heart":1,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/151773535","assets_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/151773535/assets","upload_url":"https://uploads.github.com/repos/eclipse-iceoryx/iceoryx2/releases/151773535/assets{?name,label}","html_url":"https://github.com/eclipse-iceoryx/iceoryx2/releases/tag/v0.3.0","id":151773535,"author":{"login":"elfenpiff","id":56729169,"node_id":"MDQ6VXNlcjU2NzI5MTY5","avatar_url":"https://avatars.githubusercontent.com/u/56729169?v=4","gravatar_id":"","url":"https://api.github.com/users/elfenpiff","html_url":"https://github.com/elfenpiff","followers_url":"https://api.github.com/users/elfenpiff/followers","following_url":"https://api.github.com/users/elfenpiff/following{/other_user}","gists_url":"https://api.github.com/users/elfenpiff/gists{/gist_id}","starred_url":"https://api.github.com/users/elfenpiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elfenpiff/subscriptions","organizations_url":"https://api.github.com/users/elfenpiff/orgs","repos_url":"https://api.github.com/users/elfenpiff/repos","events_url":"https://api.github.com/users/elfenpiff/events{/privacy}","received_events_url":"https://api.github.com/users/elfenpiff/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOK46AYc4JC-Ff","tag_name":"v0.3.0","target_commitish":"main","name":"v0.3.0","draft":false,"immutable":false,"prerelease":true,"created_at":"2024-04-18T15:26:20Z","updated_at":"2024-04-18T15:27:45Z","published_at":"2024-04-18T15:27:45Z","assets":[],"tarball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/tarball/v0.3.0","zipball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/zipball/v0.3.0","body":"[Full Changelog](https://github.com/eclipse-iceoryx/iceoryx2/compare/v0.2.2...v0.3.0) <!--NOLINT remove this when tag is set-->\r\n\r\n## Features\r\n\r\n <!-- NOTE: Add new entries sorted by issue number to minimize the possibility of conflicts when merging. -->\r\n\r\n* Add docker example [#83](https://github.com/eclipse-iceoryx/iceoryx2/issues/83)\r\n* Introduce `iceoryx2-bb-posix::process_state` for process monitoring [#96](https://github.com/eclipse-iceoryx/iceoryx2/issues/96)\r\n* Introduce concept `iceoryx2-cal::monitoring` [#96](https://github.com/eclipse-iceoryx/iceoryx2/issues/96)\r\n* New constructs from [#123](https://github.com/eclipse-iceoryx/iceoryx2/issues/123)\r\n  * Introduce semantic string `iceoryx2-bb-system-types::base64url`\r\n  * Introduce `iceoryx2-cal::hash::HashValue` that contains the result of a hash\r\n* Port `UsedChunkList` from iceoryx1 [#129](https://github.com/eclipse-iceoryx/iceoryx2/issues/129)\r\n* From [#133](https://github.com/eclipse-iceoryx/iceoryx2/issues/133)\r\n  * Add `Notifier|Listener|Publisher|Subscriber::id()` method to acquire unique port id\r\n  * Add `Sample::origin()` to determine the `UniquePublisherId` of the sender\r\n* Performance improvements, especially for AMD CPUs [#136](https://github.com/eclipse-iceoryx/iceoryx2/issues/136)\r\n* Introduce lock-free mpmc BitSet [#139](https://github.com/eclipse-iceoryx/iceoryx2/issues/139)\r\n* Refactor Event API [#175](https://github.com/eclipse-iceoryx/iceoryx2/issues/175)\r\n  * Add `event_id_max_value()` setting to `Event` service builder\r\n  * Add `defaults.event.event_id_max_value` to config file (`iceoryx2.toml`)\r\n  * Add `Listener::{try|timed|blocking}_wait_all` to grab a batch of `EventIds` to avoid infinite busy loop\r\n* Example for complex data types [#175](https://github.com/eclipse-iceoryx/iceoryx2/issues/175)\r\n\r\n## Bugfixes\r\n\r\n <!-- NOTE: Add new entries sorted by issue number to minimize the possibility of conflicts when merging. -->\r\n\r\n* Fix undefined behavior in `spsc::{queue|index_queue}` [#87](https://github.com/eclipse-iceoryx/iceoryx2/issues/87)\r\n* Fix `open_or_create` race [#108](https://github.com/eclipse-iceoryx/iceoryx2/issues/108)\r\n* Fixes for [#116](https://github.com/eclipse-iceoryx/iceoryx2/issues/116)\r\n  * Fix retrieve channel overflow caused by big publisher loans\r\n  * Fix `CreationMode::OpenOrCreate` in `iceoryx2-bb-posix::SharedMemory`\r\n  * Add missing memory synchronization to posix shm zero copy connection\r\n  * Remove retrieve buffer full check from zero copy connection - sender had insufficient infos available\r\n  * Fix data race in `iceoryx2-bb-lock-free::mpmc::Container`\r\n* Fix insufficient memory reordering protection in `spsc::Queue::push` and `spsc::Queue::pop` [#119](https://github.com/eclipse-iceoryx/iceoryx2/issues/119)\r\n* Fix data race due to operation reordering in `spmc::UnrestrictedAtomic::load` [#125](https://github.com/eclipse-iceoryx/iceoryx2/issues/125)\r\n* Fix broken `Publisher|Subscriber::populate_{subscriber|publisher}_channels()` [#129](https://github.com/eclipse-iceoryx/iceoryx2/issues/129)\r\n* Fix failing reacquire of delivered samples in the zero copy receive channel [#130](https://github.com/eclipse-iceoryx/iceoryx2/issues/130)\r\n* Fix receiving of invalid samples when subscriber is connected [#131](https://github.com/eclipse-iceoryx/iceoryx2/issues/131)\r\n* Fix problem where sample is released to the wrong publisher [#133](https://github.com/eclipse-iceoryx/iceoryx2/issues/133)\r\n* Fix event notifier deadlock with reconnecting listeners [#139](https://github.com/eclipse-iceoryx/iceoryx2/issues/139)\r\n* Fixes for FreeBSD 14.0 [#140](https://github.com/eclipse-iceoryx/iceoryx2/issues/140)\r\n  * Fix segfault in `iceoryx2-pal-posix;:shm_list()` caused by `sysctl`\r\n  * Adjust test to handle unordered event notifications\r\n* Fix non UTF-8 windows platform error messages [#145](https://github.com/eclipse-iceoryx/iceoryx2/issues/145)\r\n* Correct inconsistent default config entries for windows [#149](https://github.com/eclipse-iceoryx/iceoryx2/issues/149)\r\n* Fix that drop is not called when DynamicStorage is destroyed [#160](https://github.com/eclipse-iceoryx/iceoryx2/issues/160)\r\n* Fix race in `UniqueSystemId` that leads to non-unique unique ids [#181](https://github.com/eclipse-iceoryx/iceoryx2/issues/181)\r\n\r\n## Refactoring\r\n\r\n <!-- NOTE: Add new entries sorted by issue number to minimize the possibility of conflicts when merging. -->\r\n\r\n* Replace `iceoryx2::service::Service` with `iceoryx2::service::Details` [#100](https://github.com/eclipse-iceoryx/iceoryx2/issues/100)\r\n* Remove `'config` lifetime from all structs  [#100](https://github.com/eclipse-iceoryx/iceoryx2/issues/100)\r\n* Remove `UniqueIndex` returning method from `iceoryx2-bb-lock-free::mpmc::Container`, cannot be implemented correctly in our context [#116](https://github.com/eclipse-iceoryx/iceoryx2/issues/116)\r\n* All `iceoryx2-cal::shared_memory` implementations use a `DynamicStorage` concept as base [#153](https://github.com/eclipse-iceoryx/iceoryx2/issues/153)\r\n* Hardening DynamicStorage, storages with distinct types cannot be opened [#160](https://github.com/eclipse-iceoryx/iceoryx2/issues/160)\r\n* IpcCapable handles explicity destroy underlying object in drop, instead of ref counting [#162](https://github.com/eclipse-iceoryx/iceoryx2/issues/162)\r\n\r\n## New API features\r\n\r\n <!-- NOTE: Add new entries sorted by issue number to minimize the possibility of conflicts when merging. -->\r\n\r\n* Add `FixedSizeByteString::from_bytes_truncated` [#56](https://github.com/eclipse-iceoryx/iceoryx2/issues/56)\r\n* Add `Deref`, `DerefMut`, `Clone`, `Eq`, `PartialEq` and `extend_from_slice` to (FixedSize)Vec [#58](https://github.com/eclipse-iceoryx/iceoryx2/issues/58)\r\n* `MessagingPattern` implements `Display` [#64](https://github.com/eclipse-iceoryx/iceoryx2/issues/64)\r\n* Introduce traits for all ports (`Listen`, `Notify`, `Publish`, `DefaultLoan`, `UninitLoan`, `Subscribe`)\r\n   and for samples (`PayloadMut`, `Payload`) [#69](https://github.com/eclipse-iceoryx/iceoryx2/issues/69)\r\n* Implement `Ord` and `PartialOrd` for `FixedSizeByteString` and `ServiceName` [#110](https://github.com/eclipse-iceoryx/iceoryx2/issues/110)\r\n* Remove `publish_subscribe::Header::time_stamp()` due to ordering and performance problems [#136](https://github.com/eclipse-iceoryx/iceoryx2/issues/136)\r\n\r\n## API Breaking Changes\r\n\r\n1. Use `SampleMut::send()` instead of `Publisher::send()`\r\n\r\n    ```rust\r\n    // old\r\n    let publisher = service.publisher().create()?;\r\n    let sample = publisher.loan()?;\r\n    // set sample value\r\n    publisher.send(sample)?;\r\n\r\n    // new\r\n    let publisher = service.publisher().create()?;\r\n    let sample = publisher.loan()?;\r\n    // set sample value\r\n    sample.send()?;\r\n    ```\r\n\r\n2. All port `Publisher`, `Subscriber`, `Listener` and `Notifier` no longer have a generic\r\n    `'config` lifetime parameter.\r\n\r\n    ```rust\r\n    // old\r\n    let publisher: Publisher<'service, 'config, iceoryx2::service::zero_copy::Service::Type<'config>, MessageType> = ..;\r\n    let subscriber: Subscriber<'service, 'config, iceoryx2::service::zero_copy::Service::Type<'config>, MessageType> = ..;\r\n    let notifier: Notifier<'service, 'config, iceoryx2::service::zero_copy::Service::Type<'config>> = ..;\r\n    let listener: Listener<'service, 'config, iceoryx2::service::zero_copy::Service::Type<'config>> = ..;\r\n\r\n    // new\r\n    let publisher: Publisher<'service, iceoryx2::service::zero_copy::Service, MessageType> = ..;\r\n    let subscriber: Subscriber<'service, iceoryx2::service::zero_copy::Service, MessageType> = ..;\r\n    let notifier: Notifier<'service, iceoryx2::service::zero_copy::Service> = ..;\r\n    let listener: Listener<'service, iceoryx2::service::zero_copy::Service> = ..;\r\n    ```\r\n\r\n3. `iceoryx2::service::Details` no longer has a generic `'config` lifetime parameter.\r\n   `iceoryx2::service::Details` replaced `iceoryx2::service::Service`. All custom services need\r\n   to implement `iceoryx2::service::Service`.\r\n\r\n    ```rust\r\n    // old\r\n    pub struct MyCustomServiceType<'config> {\r\n        state: ServiceState<'config, static_storage::whatever::Storage, dynamic_storage::whatever::Storage<WhateverConfig>>\r\n    }\r\n\r\n    impl<'config> crate::service::Service for MyCustomServiceType<'config> {\r\n        // ...\r\n    }\r\n\r\n    impl<'config> crate::service::Details for MyCustomServiceType<'config> {\r\n        // ...\r\n    }\r\n\r\n    // new\r\n    pub struct MyCustomServiceType {\r\n        state: ServiceState<static_storage::whatever::Storage, dynamic_storage::whatever::Storage<WhateverConfig>>\r\n    }\r\n\r\n    impl crate::service::Service for MyCustomServiceType {\r\n        // ...\r\n    }\r\n    ```\r\n\r\n4. Writing functions with generic service parameter no longer require `Service + Details<'config>`.\r\n   Now it suffices to just use `Service`\r\n\r\n    ```rust\r\n    // old\r\n    fn my_generic_service_function<'config, ServiceType: iceoryx2::service::Service + iceoryx2::service::Details<'config>>();\r\n\r\n    // new\r\n    fn my_generic_service_function<ServiceType: iceoryx2::service::Service>();\r\n    ```\r\n\r\n5. Do not use `Header::time_stamp()`, when required make it part of the payload\r\n    type. **Be aware, this can be expensive and can lead to a significantly increased latency!**\r\n\r\n    ```rust\r\n    // old\r\n    let subscriber = service.subscriber().create()?;\r\n    println!(\"sample timestamp: {:?}\", sample.unwrap().header().time_stamp());\r\n\r\n    // new\r\n    use iceoryx2_bb_posix::clock::{Time, TimeBuilder};\r\n\r\n    #[derive(Debug)]\r\n    #[repr(C)]\r\n    pub struct TimeStamp {\r\n        seconds: u64,\r\n        nanoseconds: u32,\r\n    }\r\n\r\n    impl TimeStamp {\r\n        pub fn new() -> Self {\r\n            let now = Time::now().unwrap();\r\n            Self {\r\n                seconds: now.seconds(),\r\n                nanoseconds: now.nanoseconds(),\r\n            }\r\n        }\r\n    }\r\n\r\n    pub struct MyMessageType {\r\n        payload: u64,\r\n        time_stamp: TimeStamp\r\n    }\r\n\r\n    // sender side\r\n    let publisher = service.publisher().create()?;\r\n    let sample = publisher.loan_uninit()?;\r\n    let sample = sample.write_payload(MyMessageType {\r\n        payload: 1234,\r\n        time_stamp: TimeStamp::now();\r\n    });\r\n    sample.send()?;\r\n\r\n    // receiver side\r\n    let subscriber = service.subscriber().create()?;\r\n    println!(\"sample timestamp: {:?}\", sample.unwrap().time_stamp);\r\n    ```\r\n\r\n6. `Listener::{try|timed|blocking}_wait_one()` replace\r\n    `Listener::{try|timed|blocking}_wait()` and return an `Option<EventId>`\r\n    instead of a slice of `EventId`s.\r\n\r\n    ```rust\r\n    // old\r\n    if let Ok(events) = listener.try_wait() {\r\n        for event_id in events {\r\n            println!(\"event was triggered with id: {:?}\", event_id);\r\n        }\r\n    }\r\n\r\n    // new, iterative approach\r\n    while let Ok(Some(event_id)) = listener.try_wait_one() {\r\n        println!(\"event was triggered with id: {:?}\", event_id);\r\n    }\r\n\r\n    // new, functional approach to grap a batch of id's\r\n    listener.try_wait_all(|id| {\r\n        println!(\"event was triggered with id: {:?}\", event_id);\r\n    });\r\n    ```\r\n\r\n7. Renamed method `EventId::as_u64()` to `EventId::as_value()`.\r\n\r\n    ```rust\r\n    // old\r\n    println!(\"event id value {}\", my_event_id.as_u64());\r\n\r\n    // new\r\n    println!(\"event id value {}\", my_event_id.as_value());\r\n    ```\r\n\r\n8. `EventId`s have a max default value of `32`.\r\n\r\n    ```rust\r\n    // old\r\n    let name = ServiceName::new(\"EventName\")?;\r\n    let event = zero_copy::Service::new(&name)\r\n                    .event()\r\n                    .open_or_create()?;\r\n    let notifier = event.notifier().create()?;\r\n    // leads now to `NotifierNotifyError::EventIdOutOfBounds`\r\n    notifier.notify_with_custom_event_id(EventId::new(1234));\r\n\r\n    // new\r\n    let name = ServiceName::new(\"EventName\")?;\r\n    let event = zero_copy::Service::new(&name)\r\n                    .event()\r\n                    // supports event id values up to 2048\r\n                    // be aware, the greater the max value the slower the\r\n                    // event mechanism is\r\n                    .event_id_max_value(2048)\r\n                    .open_or_create()?;\r\n    let notifier = event.notifier().create()?;\r\n    notifier.notify_with_custom_event_id(EventId::new(1234));\r\n    ```","reactions":{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/151773535/reactions","total_count":4,"+1":0,"-1":0,"laugh":0,"hooray":3,"confused":0,"heart":0,"rocket":1,"eyes":0}},{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/137467595","assets_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/137467595/assets","upload_url":"https://uploads.github.com/repos/eclipse-iceoryx/iceoryx2/releases/137467595/assets{?name,label}","html_url":"https://github.com/eclipse-iceoryx/iceoryx2/releases/tag/v0.2.2","id":137467595,"author":{"login":"elfenpiff","id":56729169,"node_id":"MDQ6VXNlcjU2NzI5MTY5","avatar_url":"https://avatars.githubusercontent.com/u/56729169?v=4","gravatar_id":"","url":"https://api.github.com/users/elfenpiff","html_url":"https://github.com/elfenpiff","followers_url":"https://api.github.com/users/elfenpiff/followers","following_url":"https://api.github.com/users/elfenpiff/following{/other_user}","gists_url":"https://api.github.com/users/elfenpiff/gists{/gist_id}","starred_url":"https://api.github.com/users/elfenpiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elfenpiff/subscriptions","organizations_url":"https://api.github.com/users/elfenpiff/orgs","repos_url":"https://api.github.com/users/elfenpiff/repos","events_url":"https://api.github.com/users/elfenpiff/events{/privacy}","received_events_url":"https://api.github.com/users/elfenpiff/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOK46AYc4IMZbL","tag_name":"v0.2.2","target_commitish":"main","name":"v0.2.2","draft":false,"immutable":false,"prerelease":true,"created_at":"2024-01-17T22:53:52Z","updated_at":"2024-01-17T22:57:15Z","published_at":"2024-01-17T22:56:43Z","assets":[],"tarball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/tarball/v0.2.2","zipball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/zipball/v0.2.2","body":"[Full Changelog](https://github.com/eclipse-iceoryx/iceoryx2/compare/v0.2.1...v0.2.2)\r\n\r\n### Bugfixes\r\n\r\n * Fix `clock_nanosleep` on macOS [#80](https://github.com/eclipse-iceoryx/iceoryx2/issues/80)\r\n * Fix broken `sighandler_t` translation [#81](https://github.com/eclipse-iceoryx/iceoryx2/issues/81)\r\n\r\n### Refactoring\r\n\r\n * Use only one config file for every platform [#15](https://github.com/eclipse-iceoryx/iceoryx2/issues/15)\r\n\r\n## Thanks To All Contributors Of This Version\r\n\r\n * [Christian »elfenpiff« Eltzschig](https://github.com/elfenpiff)\r\n * [Mathias »elBoberido« Kraus](https://github.com/elboberido)\r\n","reactions":{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/137467595/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":2,"eyes":0}},{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/136408092","assets_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/136408092/assets","upload_url":"https://uploads.github.com/repos/eclipse-iceoryx/iceoryx2/releases/136408092/assets{?name,label}","html_url":"https://github.com/eclipse-iceoryx/iceoryx2/releases/tag/v0.2.1","id":136408092,"author":{"login":"elfenpiff","id":56729169,"node_id":"MDQ6VXNlcjU2NzI5MTY5","avatar_url":"https://avatars.githubusercontent.com/u/56729169?v=4","gravatar_id":"","url":"https://api.github.com/users/elfenpiff","html_url":"https://github.com/elfenpiff","followers_url":"https://api.github.com/users/elfenpiff/followers","following_url":"https://api.github.com/users/elfenpiff/following{/other_user}","gists_url":"https://api.github.com/users/elfenpiff/gists{/gist_id}","starred_url":"https://api.github.com/users/elfenpiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elfenpiff/subscriptions","organizations_url":"https://api.github.com/users/elfenpiff/orgs","repos_url":"https://api.github.com/users/elfenpiff/repos","events_url":"https://api.github.com/users/elfenpiff/events{/privacy}","received_events_url":"https://api.github.com/users/elfenpiff/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOK46AYc4IIWwc","tag_name":"v0.2.1","target_commitish":"main","name":"v0.2.1","draft":false,"immutable":false,"prerelease":true,"created_at":"2024-01-09T22:59:44Z","updated_at":"2024-01-17T22:57:36Z","published_at":"2024-01-09T23:01:39Z","assets":[],"tarball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/tarball/v0.2.1","zipball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/zipball/v0.2.1","body":"[Full Changelog](https://github.com/eclipse-iceoryx/iceoryx2/compare/v0.1.1...v0.2.1)\r\n\r\n### Features\r\n\r\n * MacOS Platform support [#51](https://github.com/eclipse-iceoryx/iceoryx2/issues/51)\r\n * Services with the same name for different messaging patterns are supported [#16](https://github.com/eclipse-iceoryx/iceoryx2/issues/16)\r\n\r\n### Bugfixes\r\n\r\n * Fix undefined behavior in `FixedSizeByteString::new_unchecked` [#61](https://github.com/eclipse-iceoryx/iceoryx2/issues/61)\r\n * Fix suffix of static config [#66](https://github.com/eclipse-iceoryx/iceoryx2/issues/66)\r\n * Interpret non-existing service directory as no existing services [#63](https://github.com/eclipse-iceoryx/iceoryx2/issues/63)\r\n\r\n### Refactoring\r\n\r\n * Rename char in platform to c_char [#54](https://github.com/eclipse-iceoryx/iceoryx2/issues/54)\r\n * Set reasonable rust min version to 1.70 and verify it with additional CI targets [#72](https://github.com/eclipse-iceoryx/iceoryx2/issues/72)\r\n\r\n### Workflow\r\n\r\n * add `cargo audit` for security vulnerability checking in dependencies [#48](https://github.com/eclipse-iceoryx/iceoryx2/issues/48)\r\n\r\n### New API features\r\n\r\n * Add `FixedSizeByteString::from_bytes_truncated` [#56](https://github.com/eclipse-iceoryx/iceoryx2/issues/56)\r\n * Add `Deref`, `DerefMut`, `Clone`, `Eq`, `PartialEq` and `extend_from_slice` to (FixedSize)Vec [#58](https://github.com/eclipse-iceoryx/iceoryx2/issues/58)\r\n * `MessagingPattern` implements `Display` [#64](https://github.com/eclipse-iceoryx/iceoryx2/issues/64)\r\n\r\n## Thanks To All Contributors Of This Version\r\n\r\n * [Christian »elfenpiff« Eltzschig](https://github.com/elfenpiff)\r\n * [Mathias »elBoberido« Kraus](https://github.com/elboberido)\r\n * [»Shock-1«](https://github.com/Shock-1)\r\n * [»hydroid7«](https://github.com/hydroid7)\r\n","reactions":{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/136408092/reactions","total_count":3,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":3,"eyes":0}},{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/134035530","assets_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/134035530/assets","upload_url":"https://uploads.github.com/repos/eclipse-iceoryx/iceoryx2/releases/134035530/assets{?name,label}","html_url":"https://github.com/eclipse-iceoryx/iceoryx2/releases/tag/v0.1.1","id":134035530,"author":{"login":"elfenpiff","id":56729169,"node_id":"MDQ6VXNlcjU2NzI5MTY5","avatar_url":"https://avatars.githubusercontent.com/u/56729169?v=4","gravatar_id":"","url":"https://api.github.com/users/elfenpiff","html_url":"https://github.com/elfenpiff","followers_url":"https://api.github.com/users/elfenpiff/followers","following_url":"https://api.github.com/users/elfenpiff/following{/other_user}","gists_url":"https://api.github.com/users/elfenpiff/gists{/gist_id}","starred_url":"https://api.github.com/users/elfenpiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elfenpiff/subscriptions","organizations_url":"https://api.github.com/users/elfenpiff/orgs","repos_url":"https://api.github.com/users/elfenpiff/repos","events_url":"https://api.github.com/users/elfenpiff/events{/privacy}","received_events_url":"https://api.github.com/users/elfenpiff/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOK46AYc4H_ThK","tag_name":"v0.1.1","target_commitish":"main","name":"v0.1.1","draft":false,"immutable":false,"prerelease":true,"created_at":"2023-12-15T02:41:43Z","updated_at":"2024-01-09T00:57:59Z","published_at":"2023-12-15T02:42:49Z","assets":[],"tarball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/tarball/v0.1.1","zipball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/zipball/v0.1.1","body":"* introduce acl feature in low level posix building block to make acl support optional"},{"url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/134023878","assets_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/releases/134023878/assets","upload_url":"https://uploads.github.com/repos/eclipse-iceoryx/iceoryx2/releases/134023878/assets{?name,label}","html_url":"https://github.com/eclipse-iceoryx/iceoryx2/releases/tag/v0.1.0","id":134023878,"author":{"login":"elfenpiff","id":56729169,"node_id":"MDQ6VXNlcjU2NzI5MTY5","avatar_url":"https://avatars.githubusercontent.com/u/56729169?v=4","gravatar_id":"","url":"https://api.github.com/users/elfenpiff","html_url":"https://github.com/elfenpiff","followers_url":"https://api.github.com/users/elfenpiff/followers","following_url":"https://api.github.com/users/elfenpiff/following{/other_user}","gists_url":"https://api.github.com/users/elfenpiff/gists{/gist_id}","starred_url":"https://api.github.com/users/elfenpiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elfenpiff/subscriptions","organizations_url":"https://api.github.com/users/elfenpiff/orgs","repos_url":"https://api.github.com/users/elfenpiff/repos","events_url":"https://api.github.com/users/elfenpiff/events{/privacy}","received_events_url":"https://api.github.com/users/elfenpiff/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOK46AYc4H_QrG","tag_name":"v0.1.0","target_commitish":"main","name":"v0.1.0","draft":false,"immutable":false,"prerelease":true,"created_at":"2023-12-14T22:57:14Z","updated_at":"2024-01-09T00:57:46Z","published_at":"2023-12-14T23:43:31Z","assets":[],"tarball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/tarball/v0.1.0","zipball_url":"https://api.github.com/repos/eclipse-iceoryx/iceoryx2/zipball/v0.1.0","body":""}]